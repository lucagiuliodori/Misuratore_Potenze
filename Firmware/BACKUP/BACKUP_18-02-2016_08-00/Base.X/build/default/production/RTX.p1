Version 3.2 HI-TECH Software Intermediate Code
"46 CC1.h
[s S238 :1 `uc 1 ]
[n S238 _CC1_FLG PCK_RCV ]
"41 PGM.h
[s S244 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S244 . pgmonoff evPgmOn evPgmOff ]
"37
[u S243 `uc 1 `S244 1 ]
[n S243 _PGM_FLG val . ]
"11
[s S240 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S240 . gen_curr_sensIsProg con_curr_sensIsProg volt_sensIsProg ]
"7
[u S239 `uc 1 `S240 1 ]
[n S239 _PGM_MENU val . ]
"18
[s S241 `uc 1 `uc 1 ]
[n S241 _PGM_DEV type id ]
"24
[s S242 `uc 1 `uc 1 `S239 1 `S241 1 `S241 1 `S241 1 `S241 1 ]
[n S242 _PGM_CFG valChk1 valChk2 menu base gen_curr_sens con_curr_sens volt_sens ]
"54 RTX.h
[s S246 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S246 . sendDone pgmDone pgmonoff ]
"50
[u S245 `uc 1 `S246 1 ]
[n S245 _RTX_FLG val . ]
"40 RTX.c
[c E2175 0 1 2 3 4 6 .. ]
[n E2175 _POS_PKT ID_DEST ID_SOURCE TYPE OP VAL BAT  ]
"101
[c E2000 48 49 50 51 52 53 54 56 57 58 59 60 61 .. ]
[n E2000 _CC1_STB SRES SFSTXON SXOFF SCAL SRX STX SIDLE SWOR SPWD SFRX SFTX SWORRST SNOP  ]
"56 CC1.h
[v _CC1Strobe `(v ~T0 @X0 0 ef1`E2000 ]
"105 RTX.c
[c E2131 0 1 2 3 4 5 6 .. ]
[n E2131 _RTX_UPD_DPY UPD_DPY_POWER UPD_DPY_BATT UPD_DPY_PGM UPD_DPY_PGMDONECURRSENSGEN UPD_DPY_PGMDONECURRSENSCON UPD_DPY_PGMDONEVOLTSENS UPD_DPY_PGMRST  ]
"75 RTX.h
[v _RTXUpdateDisplay `(v ~T0 @X0 0 ef1`E2131 ]
"74 RTX.c
[v _RTXSup `(v ~T0 @X0 0 sf ]
"72
[v _RTXSendPgm `(v ~T0 @X0 0 sf ]
"481 C:\Program Files (x86)\Microchip\xc8\v1.34\include\pic16f1518.h
[s S32 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S32 . RB0 RB1 RB2 RB3 RB4 RB5 RB6 RB7 ]
"480
[u S31 `S32 1 ]
[n S31 . . ]
"492
[v _PORTBbits `VS31 ~T0 @X0 0 e@13 ]
"68 RTX.h
[v _RTXReadPkt `(v ~T0 @X0 0 ef ]
"108 C:\Program Files (x86)\Microchip\xc8\v1.34\include\stdlib.h
[v _itoa `(*uc ~T0 @X0 0 ef3`*uc`i`i ]
"75 RTX.c
[v _RTXVisDec `(uc ~T0 @X0 0 sf4`f`*uc`uc`uc ]
"12 DPY.h
[v _DPYSendStr `(v ~T0 @X0 0 ef4`uc`uc`*uc`uc ]
"117 C:\Program Files (x86)\Microchip\xc8\v1.34\include\stdlib.h
[v _ftoa `(*uc ~T0 @X0 0 ef2`f`*i ]
"57 CC1.h
[v _CC1Read `(v ~T0 @X0 0 ef3`uc`*uc`uc ]
"373 RTX.c
[c E2015 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 .. ]
[n E2015 _CC1_STA SLEEP IDLE XOFF VCOON_MC REGON_MC MANCAL VCOON REGON STARTCAL BWBOOST FS_LOCK IFADCON ENDCAL RX RX_END RX_RST TXRX_SWITCH RXFIFO_OVERFLOW FSTXON TX TX_END RXTX_SWITCH TXFIFO_UNDERFLOW  ]
"58 CC1.h
[v _CC1Write `(v ~T0 @X0 0 ef3`uc`*uc`uc ]
"59 RTX.c
[u S247 `f 1 `uc -> 3 `i ]
[n S247 _RTX_DATA val val_byte ]
"456
[c E2183 0 1 128 129 .. ]
[n E2183 _RTX_OP DAT PGM rDAT rPGM  ]
"459
[c E2189 0 1 2 3 .. ]
[n E2189 _DEV_TYPE BASE SENS_CURRGEN SENS_CURRCON SENS_VOLT  ]
"69 PGM.h
[v _PGMWriteNvm `(v ~T0 @X0 0 ef ]
"3 DLY.h
[v _DLYDelay_ms `(v ~T0 @X0 0 ef1`us ]
"73 RTX.h
[v _RTXPgmOff `(v ~T0 @X0 0 ef ]
"73 RTX.c
[v _RTXSendRData `(v ~T0 @X0 0 sf1`uc ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f1518.h: 49: extern volatile unsigned char INDF0 @ 0x000;
"51 C:\Program Files (x86)\Microchip\xc8\v1.34\include\pic16f1518.h
[; ;pic16f1518.h: 51: asm("INDF0 equ 00h");
[; <" INDF0 equ 00h ;# ">
[; ;pic16f1518.h: 54: typedef union {
[; ;pic16f1518.h: 55: struct {
[; ;pic16f1518.h: 56: unsigned INDF0 :8;
[; ;pic16f1518.h: 57: };
[; ;pic16f1518.h: 58: } INDF0bits_t;
[; ;pic16f1518.h: 59: extern volatile INDF0bits_t INDF0bits @ 0x000;
[; ;pic16f1518.h: 68: extern volatile unsigned char INDF1 @ 0x001;
"70
[; ;pic16f1518.h: 70: asm("INDF1 equ 01h");
[; <" INDF1 equ 01h ;# ">
[; ;pic16f1518.h: 73: typedef union {
[; ;pic16f1518.h: 74: struct {
[; ;pic16f1518.h: 75: unsigned INDF1 :8;
[; ;pic16f1518.h: 76: };
[; ;pic16f1518.h: 77: } INDF1bits_t;
[; ;pic16f1518.h: 78: extern volatile INDF1bits_t INDF1bits @ 0x001;
[; ;pic16f1518.h: 87: extern volatile unsigned char PCL @ 0x002;
"89
[; ;pic16f1518.h: 89: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f1518.h: 92: typedef union {
[; ;pic16f1518.h: 93: struct {
[; ;pic16f1518.h: 94: unsigned PCL :8;
[; ;pic16f1518.h: 95: };
[; ;pic16f1518.h: 96: } PCLbits_t;
[; ;pic16f1518.h: 97: extern volatile PCLbits_t PCLbits @ 0x002;
[; ;pic16f1518.h: 106: extern volatile unsigned char STATUS @ 0x003;
"108
[; ;pic16f1518.h: 108: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f1518.h: 111: typedef union {
[; ;pic16f1518.h: 112: struct {
[; ;pic16f1518.h: 113: unsigned C :1;
[; ;pic16f1518.h: 114: unsigned DC :1;
[; ;pic16f1518.h: 115: unsigned Z :1;
[; ;pic16f1518.h: 116: unsigned nPD :1;
[; ;pic16f1518.h: 117: unsigned nTO :1;
[; ;pic16f1518.h: 118: };
[; ;pic16f1518.h: 119: struct {
[; ;pic16f1518.h: 120: unsigned CARRY :1;
[; ;pic16f1518.h: 121: };
[; ;pic16f1518.h: 122: struct {
[; ;pic16f1518.h: 123: unsigned :2;
[; ;pic16f1518.h: 124: unsigned ZERO :1;
[; ;pic16f1518.h: 125: };
[; ;pic16f1518.h: 126: } STATUSbits_t;
[; ;pic16f1518.h: 127: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f1518.h: 166: extern volatile unsigned short FSR0 @ 0x004;
[; ;pic16f1518.h: 169: extern volatile unsigned char FSR0L @ 0x004;
"171
[; ;pic16f1518.h: 171: asm("FSR0L equ 04h");
[; <" FSR0L equ 04h ;# ">
[; ;pic16f1518.h: 174: typedef union {
[; ;pic16f1518.h: 175: struct {
[; ;pic16f1518.h: 176: unsigned FSR0L :8;
[; ;pic16f1518.h: 177: };
[; ;pic16f1518.h: 178: } FSR0Lbits_t;
[; ;pic16f1518.h: 179: extern volatile FSR0Lbits_t FSR0Lbits @ 0x004;
[; ;pic16f1518.h: 188: extern volatile unsigned char FSR0H @ 0x005;
"190
[; ;pic16f1518.h: 190: asm("FSR0H equ 05h");
[; <" FSR0H equ 05h ;# ">
[; ;pic16f1518.h: 193: typedef union {
[; ;pic16f1518.h: 194: struct {
[; ;pic16f1518.h: 195: unsigned FSR0H :8;
[; ;pic16f1518.h: 196: };
[; ;pic16f1518.h: 197: } FSR0Hbits_t;
[; ;pic16f1518.h: 198: extern volatile FSR0Hbits_t FSR0Hbits @ 0x005;
[; ;pic16f1518.h: 207: extern volatile unsigned short FSR1 @ 0x006;
[; ;pic16f1518.h: 210: extern volatile unsigned char FSR1L @ 0x006;
"212
[; ;pic16f1518.h: 212: asm("FSR1L equ 06h");
[; <" FSR1L equ 06h ;# ">
[; ;pic16f1518.h: 215: typedef union {
[; ;pic16f1518.h: 216: struct {
[; ;pic16f1518.h: 217: unsigned FSR1L :8;
[; ;pic16f1518.h: 218: };
[; ;pic16f1518.h: 219: } FSR1Lbits_t;
[; ;pic16f1518.h: 220: extern volatile FSR1Lbits_t FSR1Lbits @ 0x006;
[; ;pic16f1518.h: 229: extern volatile unsigned char FSR1H @ 0x007;
"231
[; ;pic16f1518.h: 231: asm("FSR1H equ 07h");
[; <" FSR1H equ 07h ;# ">
[; ;pic16f1518.h: 234: typedef union {
[; ;pic16f1518.h: 235: struct {
[; ;pic16f1518.h: 236: unsigned FSR1H :8;
[; ;pic16f1518.h: 237: };
[; ;pic16f1518.h: 238: } FSR1Hbits_t;
[; ;pic16f1518.h: 239: extern volatile FSR1Hbits_t FSR1Hbits @ 0x007;
[; ;pic16f1518.h: 248: extern volatile unsigned char BSR @ 0x008;
"250
[; ;pic16f1518.h: 250: asm("BSR equ 08h");
[; <" BSR equ 08h ;# ">
[; ;pic16f1518.h: 253: typedef union {
[; ;pic16f1518.h: 254: struct {
[; ;pic16f1518.h: 255: unsigned BSR :5;
[; ;pic16f1518.h: 256: };
[; ;pic16f1518.h: 257: struct {
[; ;pic16f1518.h: 258: unsigned BSR0 :1;
[; ;pic16f1518.h: 259: unsigned BSR1 :1;
[; ;pic16f1518.h: 260: unsigned BSR2 :1;
[; ;pic16f1518.h: 261: unsigned BSR3 :1;
[; ;pic16f1518.h: 262: unsigned BSR4 :1;
[; ;pic16f1518.h: 263: };
[; ;pic16f1518.h: 264: } BSRbits_t;
[; ;pic16f1518.h: 265: extern volatile BSRbits_t BSRbits @ 0x008;
[; ;pic16f1518.h: 299: extern volatile unsigned char WREG @ 0x009;
"301
[; ;pic16f1518.h: 301: asm("WREG equ 09h");
[; <" WREG equ 09h ;# ">
[; ;pic16f1518.h: 304: typedef union {
[; ;pic16f1518.h: 305: struct {
[; ;pic16f1518.h: 306: unsigned WREG0 :8;
[; ;pic16f1518.h: 307: };
[; ;pic16f1518.h: 308: } WREGbits_t;
[; ;pic16f1518.h: 309: extern volatile WREGbits_t WREGbits @ 0x009;
[; ;pic16f1518.h: 318: extern volatile unsigned char PCLATH @ 0x00A;
"320
[; ;pic16f1518.h: 320: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f1518.h: 323: typedef union {
[; ;pic16f1518.h: 324: struct {
[; ;pic16f1518.h: 325: unsigned PCLATH :7;
[; ;pic16f1518.h: 326: };
[; ;pic16f1518.h: 327: } PCLATHbits_t;
[; ;pic16f1518.h: 328: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f1518.h: 337: extern volatile unsigned char INTCON @ 0x00B;
"339
[; ;pic16f1518.h: 339: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f1518.h: 342: typedef union {
[; ;pic16f1518.h: 343: struct {
[; ;pic16f1518.h: 344: unsigned IOCIF :1;
[; ;pic16f1518.h: 345: unsigned INTF :1;
[; ;pic16f1518.h: 346: unsigned TMR0IF :1;
[; ;pic16f1518.h: 347: unsigned IOCIE :1;
[; ;pic16f1518.h: 348: unsigned INTE :1;
[; ;pic16f1518.h: 349: unsigned TMR0IE :1;
[; ;pic16f1518.h: 350: unsigned PEIE :1;
[; ;pic16f1518.h: 351: unsigned GIE :1;
[; ;pic16f1518.h: 352: };
[; ;pic16f1518.h: 353: struct {
[; ;pic16f1518.h: 354: unsigned :2;
[; ;pic16f1518.h: 355: unsigned T0IF :1;
[; ;pic16f1518.h: 356: unsigned :2;
[; ;pic16f1518.h: 357: unsigned T0IE :1;
[; ;pic16f1518.h: 358: };
[; ;pic16f1518.h: 359: } INTCONbits_t;
[; ;pic16f1518.h: 360: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f1518.h: 414: extern volatile unsigned char PORTA @ 0x00C;
"416
[; ;pic16f1518.h: 416: asm("PORTA equ 0Ch");
[; <" PORTA equ 0Ch ;# ">
[; ;pic16f1518.h: 419: typedef union {
[; ;pic16f1518.h: 420: struct {
[; ;pic16f1518.h: 421: unsigned RA0 :1;
[; ;pic16f1518.h: 422: unsigned RA1 :1;
[; ;pic16f1518.h: 423: unsigned RA2 :1;
[; ;pic16f1518.h: 424: unsigned RA3 :1;
[; ;pic16f1518.h: 425: unsigned RA4 :1;
[; ;pic16f1518.h: 426: unsigned RA5 :1;
[; ;pic16f1518.h: 427: unsigned RA6 :1;
[; ;pic16f1518.h: 428: unsigned RA7 :1;
[; ;pic16f1518.h: 429: };
[; ;pic16f1518.h: 430: } PORTAbits_t;
[; ;pic16f1518.h: 431: extern volatile PORTAbits_t PORTAbits @ 0x00C;
[; ;pic16f1518.h: 475: extern volatile unsigned char PORTB @ 0x00D;
"477
[; ;pic16f1518.h: 477: asm("PORTB equ 0Dh");
[; <" PORTB equ 0Dh ;# ">
[; ;pic16f1518.h: 480: typedef union {
[; ;pic16f1518.h: 481: struct {
[; ;pic16f1518.h: 482: unsigned RB0 :1;
[; ;pic16f1518.h: 483: unsigned RB1 :1;
[; ;pic16f1518.h: 484: unsigned RB2 :1;
[; ;pic16f1518.h: 485: unsigned RB3 :1;
[; ;pic16f1518.h: 486: unsigned RB4 :1;
[; ;pic16f1518.h: 487: unsigned RB5 :1;
[; ;pic16f1518.h: 488: unsigned RB6 :1;
[; ;pic16f1518.h: 489: unsigned RB7 :1;
[; ;pic16f1518.h: 490: };
[; ;pic16f1518.h: 491: } PORTBbits_t;
[; ;pic16f1518.h: 492: extern volatile PORTBbits_t PORTBbits @ 0x00D;
[; ;pic16f1518.h: 536: extern volatile unsigned char PORTC @ 0x00E;
"538
[; ;pic16f1518.h: 538: asm("PORTC equ 0Eh");
[; <" PORTC equ 0Eh ;# ">
[; ;pic16f1518.h: 541: typedef union {
[; ;pic16f1518.h: 542: struct {
[; ;pic16f1518.h: 543: unsigned RC0 :1;
[; ;pic16f1518.h: 544: unsigned RC1 :1;
[; ;pic16f1518.h: 545: unsigned RC2 :1;
[; ;pic16f1518.h: 546: unsigned RC3 :1;
[; ;pic16f1518.h: 547: unsigned RC4 :1;
[; ;pic16f1518.h: 548: unsigned RC5 :1;
[; ;pic16f1518.h: 549: unsigned RC6 :1;
[; ;pic16f1518.h: 550: unsigned RC7 :1;
[; ;pic16f1518.h: 551: };
[; ;pic16f1518.h: 552: } PORTCbits_t;
[; ;pic16f1518.h: 553: extern volatile PORTCbits_t PORTCbits @ 0x00E;
[; ;pic16f1518.h: 597: extern volatile unsigned char PORTE @ 0x010;
"599
[; ;pic16f1518.h: 599: asm("PORTE equ 010h");
[; <" PORTE equ 010h ;# ">
[; ;pic16f1518.h: 602: typedef union {
[; ;pic16f1518.h: 603: struct {
[; ;pic16f1518.h: 604: unsigned :3;
[; ;pic16f1518.h: 605: unsigned RE3 :1;
[; ;pic16f1518.h: 606: };
[; ;pic16f1518.h: 607: } PORTEbits_t;
[; ;pic16f1518.h: 608: extern volatile PORTEbits_t PORTEbits @ 0x010;
[; ;pic16f1518.h: 617: extern volatile unsigned char PIR1 @ 0x011;
"619
[; ;pic16f1518.h: 619: asm("PIR1 equ 011h");
[; <" PIR1 equ 011h ;# ">
[; ;pic16f1518.h: 622: typedef union {
[; ;pic16f1518.h: 623: struct {
[; ;pic16f1518.h: 624: unsigned TMR1IF :1;
[; ;pic16f1518.h: 625: unsigned TMR2IF :1;
[; ;pic16f1518.h: 626: unsigned CCP1IF :1;
[; ;pic16f1518.h: 627: unsigned SSPIF :1;
[; ;pic16f1518.h: 628: unsigned TXIF :1;
[; ;pic16f1518.h: 629: unsigned RCIF :1;
[; ;pic16f1518.h: 630: unsigned ADIF :1;
[; ;pic16f1518.h: 631: unsigned TMR1GIF :1;
[; ;pic16f1518.h: 632: };
[; ;pic16f1518.h: 633: } PIR1bits_t;
[; ;pic16f1518.h: 634: extern volatile PIR1bits_t PIR1bits @ 0x011;
[; ;pic16f1518.h: 678: extern volatile unsigned char PIR2 @ 0x012;
"680
[; ;pic16f1518.h: 680: asm("PIR2 equ 012h");
[; <" PIR2 equ 012h ;# ">
[; ;pic16f1518.h: 683: typedef union {
[; ;pic16f1518.h: 684: struct {
[; ;pic16f1518.h: 685: unsigned CCP2IF :1;
[; ;pic16f1518.h: 686: unsigned :2;
[; ;pic16f1518.h: 687: unsigned BCLIF :1;
[; ;pic16f1518.h: 688: unsigned :3;
[; ;pic16f1518.h: 689: unsigned OSFIF :1;
[; ;pic16f1518.h: 690: };
[; ;pic16f1518.h: 691: } PIR2bits_t;
[; ;pic16f1518.h: 692: extern volatile PIR2bits_t PIR2bits @ 0x012;
[; ;pic16f1518.h: 711: extern volatile unsigned char TMR0 @ 0x015;
"713
[; ;pic16f1518.h: 713: asm("TMR0 equ 015h");
[; <" TMR0 equ 015h ;# ">
[; ;pic16f1518.h: 716: typedef union {
[; ;pic16f1518.h: 717: struct {
[; ;pic16f1518.h: 718: unsigned TMR0 :8;
[; ;pic16f1518.h: 719: };
[; ;pic16f1518.h: 720: } TMR0bits_t;
[; ;pic16f1518.h: 721: extern volatile TMR0bits_t TMR0bits @ 0x015;
[; ;pic16f1518.h: 730: extern volatile unsigned short TMR1 @ 0x016;
"732
[; ;pic16f1518.h: 732: asm("TMR1 equ 016h");
[; <" TMR1 equ 016h ;# ">
[; ;pic16f1518.h: 736: extern volatile unsigned char TMR1L @ 0x016;
"738
[; ;pic16f1518.h: 738: asm("TMR1L equ 016h");
[; <" TMR1L equ 016h ;# ">
[; ;pic16f1518.h: 741: typedef union {
[; ;pic16f1518.h: 742: struct {
[; ;pic16f1518.h: 743: unsigned TMR1L :8;
[; ;pic16f1518.h: 744: };
[; ;pic16f1518.h: 745: } TMR1Lbits_t;
[; ;pic16f1518.h: 746: extern volatile TMR1Lbits_t TMR1Lbits @ 0x016;
[; ;pic16f1518.h: 755: extern volatile unsigned char TMR1H @ 0x017;
"757
[; ;pic16f1518.h: 757: asm("TMR1H equ 017h");
[; <" TMR1H equ 017h ;# ">
[; ;pic16f1518.h: 760: typedef union {
[; ;pic16f1518.h: 761: struct {
[; ;pic16f1518.h: 762: unsigned TMR1H :8;
[; ;pic16f1518.h: 763: };
[; ;pic16f1518.h: 764: } TMR1Hbits_t;
[; ;pic16f1518.h: 765: extern volatile TMR1Hbits_t TMR1Hbits @ 0x017;
[; ;pic16f1518.h: 774: extern volatile unsigned char T1CON @ 0x018;
"776
[; ;pic16f1518.h: 776: asm("T1CON equ 018h");
[; <" T1CON equ 018h ;# ">
[; ;pic16f1518.h: 779: typedef union {
[; ;pic16f1518.h: 780: struct {
[; ;pic16f1518.h: 781: unsigned TMR1ON :1;
[; ;pic16f1518.h: 782: unsigned :1;
[; ;pic16f1518.h: 783: unsigned nT1SYNC :1;
[; ;pic16f1518.h: 784: unsigned T1OSCEN :1;
[; ;pic16f1518.h: 785: unsigned T1CKPS :2;
[; ;pic16f1518.h: 786: unsigned TMR1CS :2;
[; ;pic16f1518.h: 787: };
[; ;pic16f1518.h: 788: struct {
[; ;pic16f1518.h: 789: unsigned :4;
[; ;pic16f1518.h: 790: unsigned T1CKPS0 :1;
[; ;pic16f1518.h: 791: unsigned T1CKPS1 :1;
[; ;pic16f1518.h: 792: unsigned TMR1CS0 :1;
[; ;pic16f1518.h: 793: unsigned TMR1CS1 :1;
[; ;pic16f1518.h: 794: };
[; ;pic16f1518.h: 795: } T1CONbits_t;
[; ;pic16f1518.h: 796: extern volatile T1CONbits_t T1CONbits @ 0x018;
[; ;pic16f1518.h: 845: extern volatile unsigned char T1GCON @ 0x019;
"847
[; ;pic16f1518.h: 847: asm("T1GCON equ 019h");
[; <" T1GCON equ 019h ;# ">
[; ;pic16f1518.h: 850: typedef union {
[; ;pic16f1518.h: 851: struct {
[; ;pic16f1518.h: 852: unsigned T1GSS :2;
[; ;pic16f1518.h: 853: unsigned T1GVAL :1;
[; ;pic16f1518.h: 854: unsigned T1GGO_nDONE :1;
[; ;pic16f1518.h: 855: unsigned T1GSPM :1;
[; ;pic16f1518.h: 856: unsigned T1GTM :1;
[; ;pic16f1518.h: 857: unsigned T1GPOL :1;
[; ;pic16f1518.h: 858: unsigned TMR1GE :1;
[; ;pic16f1518.h: 859: };
[; ;pic16f1518.h: 860: struct {
[; ;pic16f1518.h: 861: unsigned T1GSS0 :1;
[; ;pic16f1518.h: 862: unsigned T1GSS1 :1;
[; ;pic16f1518.h: 863: };
[; ;pic16f1518.h: 864: } T1GCONbits_t;
[; ;pic16f1518.h: 865: extern volatile T1GCONbits_t T1GCONbits @ 0x019;
[; ;pic16f1518.h: 914: extern volatile unsigned char TMR2 @ 0x01A;
"916
[; ;pic16f1518.h: 916: asm("TMR2 equ 01Ah");
[; <" TMR2 equ 01Ah ;# ">
[; ;pic16f1518.h: 919: typedef union {
[; ;pic16f1518.h: 920: struct {
[; ;pic16f1518.h: 921: unsigned TMR2 :8;
[; ;pic16f1518.h: 922: };
[; ;pic16f1518.h: 923: } TMR2bits_t;
[; ;pic16f1518.h: 924: extern volatile TMR2bits_t TMR2bits @ 0x01A;
[; ;pic16f1518.h: 933: extern volatile unsigned char PR2 @ 0x01B;
"935
[; ;pic16f1518.h: 935: asm("PR2 equ 01Bh");
[; <" PR2 equ 01Bh ;# ">
[; ;pic16f1518.h: 938: typedef union {
[; ;pic16f1518.h: 939: struct {
[; ;pic16f1518.h: 940: unsigned PR2 :8;
[; ;pic16f1518.h: 941: };
[; ;pic16f1518.h: 942: } PR2bits_t;
[; ;pic16f1518.h: 943: extern volatile PR2bits_t PR2bits @ 0x01B;
[; ;pic16f1518.h: 952: extern volatile unsigned char T2CON @ 0x01C;
"954
[; ;pic16f1518.h: 954: asm("T2CON equ 01Ch");
[; <" T2CON equ 01Ch ;# ">
[; ;pic16f1518.h: 957: typedef union {
[; ;pic16f1518.h: 958: struct {
[; ;pic16f1518.h: 959: unsigned T2CKPS :2;
[; ;pic16f1518.h: 960: unsigned TMR2ON :1;
[; ;pic16f1518.h: 961: unsigned T2OUTPS :4;
[; ;pic16f1518.h: 962: };
[; ;pic16f1518.h: 963: struct {
[; ;pic16f1518.h: 964: unsigned T2CKPS0 :1;
[; ;pic16f1518.h: 965: unsigned T2CKPS1 :1;
[; ;pic16f1518.h: 966: unsigned :1;
[; ;pic16f1518.h: 967: unsigned T2OUTPS0 :1;
[; ;pic16f1518.h: 968: unsigned T2OUTPS1 :1;
[; ;pic16f1518.h: 969: unsigned T2OUTPS2 :1;
[; ;pic16f1518.h: 970: unsigned T2OUTPS3 :1;
[; ;pic16f1518.h: 971: };
[; ;pic16f1518.h: 972: } T2CONbits_t;
[; ;pic16f1518.h: 973: extern volatile T2CONbits_t T2CONbits @ 0x01C;
[; ;pic16f1518.h: 1022: extern volatile unsigned char TRISA @ 0x08C;
"1024
[; ;pic16f1518.h: 1024: asm("TRISA equ 08Ch");
[; <" TRISA equ 08Ch ;# ">
[; ;pic16f1518.h: 1027: typedef union {
[; ;pic16f1518.h: 1028: struct {
[; ;pic16f1518.h: 1029: unsigned TRISA0 :1;
[; ;pic16f1518.h: 1030: unsigned TRISA1 :1;
[; ;pic16f1518.h: 1031: unsigned TRISA2 :1;
[; ;pic16f1518.h: 1032: unsigned TRISA3 :1;
[; ;pic16f1518.h: 1033: unsigned TRISA4 :1;
[; ;pic16f1518.h: 1034: unsigned TRISA5 :1;
[; ;pic16f1518.h: 1035: unsigned TRISA6 :1;
[; ;pic16f1518.h: 1036: unsigned TRISA7 :1;
[; ;pic16f1518.h: 1037: };
[; ;pic16f1518.h: 1038: } TRISAbits_t;
[; ;pic16f1518.h: 1039: extern volatile TRISAbits_t TRISAbits @ 0x08C;
[; ;pic16f1518.h: 1083: extern volatile unsigned char TRISB @ 0x08D;
"1085
[; ;pic16f1518.h: 1085: asm("TRISB equ 08Dh");
[; <" TRISB equ 08Dh ;# ">
[; ;pic16f1518.h: 1088: typedef union {
[; ;pic16f1518.h: 1089: struct {
[; ;pic16f1518.h: 1090: unsigned TRISB0 :1;
[; ;pic16f1518.h: 1091: unsigned TRISB1 :1;
[; ;pic16f1518.h: 1092: unsigned TRISB2 :1;
[; ;pic16f1518.h: 1093: unsigned TRISB3 :1;
[; ;pic16f1518.h: 1094: unsigned TRISB4 :1;
[; ;pic16f1518.h: 1095: unsigned TRISB5 :1;
[; ;pic16f1518.h: 1096: unsigned TRISB6 :1;
[; ;pic16f1518.h: 1097: unsigned TRISB7 :1;
[; ;pic16f1518.h: 1098: };
[; ;pic16f1518.h: 1099: } TRISBbits_t;
[; ;pic16f1518.h: 1100: extern volatile TRISBbits_t TRISBbits @ 0x08D;
[; ;pic16f1518.h: 1144: extern volatile unsigned char TRISC @ 0x08E;
"1146
[; ;pic16f1518.h: 1146: asm("TRISC equ 08Eh");
[; <" TRISC equ 08Eh ;# ">
[; ;pic16f1518.h: 1149: typedef union {
[; ;pic16f1518.h: 1150: struct {
[; ;pic16f1518.h: 1151: unsigned TRISC0 :1;
[; ;pic16f1518.h: 1152: unsigned TRISC1 :1;
[; ;pic16f1518.h: 1153: unsigned TRISC2 :1;
[; ;pic16f1518.h: 1154: unsigned TRISC3 :1;
[; ;pic16f1518.h: 1155: unsigned TRISC4 :1;
[; ;pic16f1518.h: 1156: unsigned TRISC5 :1;
[; ;pic16f1518.h: 1157: unsigned TRISC6 :1;
[; ;pic16f1518.h: 1158: unsigned TRISC7 :1;
[; ;pic16f1518.h: 1159: };
[; ;pic16f1518.h: 1160: } TRISCbits_t;
[; ;pic16f1518.h: 1161: extern volatile TRISCbits_t TRISCbits @ 0x08E;
[; ;pic16f1518.h: 1205: extern volatile unsigned char TRISE @ 0x090;
"1207
[; ;pic16f1518.h: 1207: asm("TRISE equ 090h");
[; <" TRISE equ 090h ;# ">
[; ;pic16f1518.h: 1211: extern volatile unsigned char PIE1 @ 0x091;
"1213
[; ;pic16f1518.h: 1213: asm("PIE1 equ 091h");
[; <" PIE1 equ 091h ;# ">
[; ;pic16f1518.h: 1216: typedef union {
[; ;pic16f1518.h: 1217: struct {
[; ;pic16f1518.h: 1218: unsigned TMR1IE :1;
[; ;pic16f1518.h: 1219: unsigned TMR2IE :1;
[; ;pic16f1518.h: 1220: unsigned CCP1IE :1;
[; ;pic16f1518.h: 1221: unsigned SSPIE :1;
[; ;pic16f1518.h: 1222: unsigned TXIE :1;
[; ;pic16f1518.h: 1223: unsigned RCIE :1;
[; ;pic16f1518.h: 1224: unsigned ADIE :1;
[; ;pic16f1518.h: 1225: unsigned TMR1GIE :1;
[; ;pic16f1518.h: 1226: };
[; ;pic16f1518.h: 1227: } PIE1bits_t;
[; ;pic16f1518.h: 1228: extern volatile PIE1bits_t PIE1bits @ 0x091;
[; ;pic16f1518.h: 1272: extern volatile unsigned char PIE2 @ 0x092;
"1274
[; ;pic16f1518.h: 1274: asm("PIE2 equ 092h");
[; <" PIE2 equ 092h ;# ">
[; ;pic16f1518.h: 1277: typedef union {
[; ;pic16f1518.h: 1278: struct {
[; ;pic16f1518.h: 1279: unsigned CCP2IE :1;
[; ;pic16f1518.h: 1280: unsigned :2;
[; ;pic16f1518.h: 1281: unsigned BCLIE :1;
[; ;pic16f1518.h: 1282: unsigned :3;
[; ;pic16f1518.h: 1283: unsigned OSFIE :1;
[; ;pic16f1518.h: 1284: };
[; ;pic16f1518.h: 1285: } PIE2bits_t;
[; ;pic16f1518.h: 1286: extern volatile PIE2bits_t PIE2bits @ 0x092;
[; ;pic16f1518.h: 1305: extern volatile unsigned char OPTION_REG @ 0x095;
"1307
[; ;pic16f1518.h: 1307: asm("OPTION_REG equ 095h");
[; <" OPTION_REG equ 095h ;# ">
[; ;pic16f1518.h: 1310: typedef union {
[; ;pic16f1518.h: 1311: struct {
[; ;pic16f1518.h: 1312: unsigned PS :3;
[; ;pic16f1518.h: 1313: unsigned PSA :1;
[; ;pic16f1518.h: 1314: unsigned TMR0SE :1;
[; ;pic16f1518.h: 1315: unsigned TMR0CS :1;
[; ;pic16f1518.h: 1316: unsigned INTEDG :1;
[; ;pic16f1518.h: 1317: unsigned nWPUEN :1;
[; ;pic16f1518.h: 1318: };
[; ;pic16f1518.h: 1319: struct {
[; ;pic16f1518.h: 1320: unsigned PS0 :1;
[; ;pic16f1518.h: 1321: unsigned PS1 :1;
[; ;pic16f1518.h: 1322: unsigned PS2 :1;
[; ;pic16f1518.h: 1323: unsigned :1;
[; ;pic16f1518.h: 1324: unsigned T0SE :1;
[; ;pic16f1518.h: 1325: unsigned T0CS :1;
[; ;pic16f1518.h: 1326: };
[; ;pic16f1518.h: 1327: } OPTION_REGbits_t;
[; ;pic16f1518.h: 1328: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x095;
[; ;pic16f1518.h: 1387: extern volatile unsigned char PCON @ 0x096;
"1389
[; ;pic16f1518.h: 1389: asm("PCON equ 096h");
[; <" PCON equ 096h ;# ">
[; ;pic16f1518.h: 1392: typedef union {
[; ;pic16f1518.h: 1393: struct {
[; ;pic16f1518.h: 1394: unsigned nBOR :1;
[; ;pic16f1518.h: 1395: unsigned nPOR :1;
[; ;pic16f1518.h: 1396: unsigned nRI :1;
[; ;pic16f1518.h: 1397: unsigned nRMCLR :1;
[; ;pic16f1518.h: 1398: unsigned nRWDT :1;
[; ;pic16f1518.h: 1399: unsigned :1;
[; ;pic16f1518.h: 1400: unsigned STKUNF :1;
[; ;pic16f1518.h: 1401: unsigned STKOVF :1;
[; ;pic16f1518.h: 1402: };
[; ;pic16f1518.h: 1403: } PCONbits_t;
[; ;pic16f1518.h: 1404: extern volatile PCONbits_t PCONbits @ 0x096;
[; ;pic16f1518.h: 1443: extern volatile unsigned char WDTCON @ 0x097;
"1445
[; ;pic16f1518.h: 1445: asm("WDTCON equ 097h");
[; <" WDTCON equ 097h ;# ">
[; ;pic16f1518.h: 1448: typedef union {
[; ;pic16f1518.h: 1449: struct {
[; ;pic16f1518.h: 1450: unsigned SWDTEN :1;
[; ;pic16f1518.h: 1451: unsigned WDTPS :5;
[; ;pic16f1518.h: 1452: };
[; ;pic16f1518.h: 1453: struct {
[; ;pic16f1518.h: 1454: unsigned :1;
[; ;pic16f1518.h: 1455: unsigned WDTPS0 :1;
[; ;pic16f1518.h: 1456: unsigned WDTPS1 :1;
[; ;pic16f1518.h: 1457: unsigned WDTPS2 :1;
[; ;pic16f1518.h: 1458: unsigned WDTPS3 :1;
[; ;pic16f1518.h: 1459: unsigned WDTPS4 :1;
[; ;pic16f1518.h: 1460: };
[; ;pic16f1518.h: 1461: } WDTCONbits_t;
[; ;pic16f1518.h: 1462: extern volatile WDTCONbits_t WDTCONbits @ 0x097;
[; ;pic16f1518.h: 1501: extern volatile unsigned char OSCCON @ 0x099;
"1503
[; ;pic16f1518.h: 1503: asm("OSCCON equ 099h");
[; <" OSCCON equ 099h ;# ">
[; ;pic16f1518.h: 1506: typedef union {
[; ;pic16f1518.h: 1507: struct {
[; ;pic16f1518.h: 1508: unsigned SCS :2;
[; ;pic16f1518.h: 1509: unsigned :1;
[; ;pic16f1518.h: 1510: unsigned IRCF :4;
[; ;pic16f1518.h: 1511: };
[; ;pic16f1518.h: 1512: struct {
[; ;pic16f1518.h: 1513: unsigned SCS0 :1;
[; ;pic16f1518.h: 1514: unsigned SCS1 :1;
[; ;pic16f1518.h: 1515: unsigned :1;
[; ;pic16f1518.h: 1516: unsigned IRCF0 :1;
[; ;pic16f1518.h: 1517: unsigned IRCF1 :1;
[; ;pic16f1518.h: 1518: unsigned IRCF2 :1;
[; ;pic16f1518.h: 1519: unsigned IRCF3 :1;
[; ;pic16f1518.h: 1520: };
[; ;pic16f1518.h: 1521: } OSCCONbits_t;
[; ;pic16f1518.h: 1522: extern volatile OSCCONbits_t OSCCONbits @ 0x099;
[; ;pic16f1518.h: 1566: extern volatile unsigned char OSCSTAT @ 0x09A;
"1568
[; ;pic16f1518.h: 1568: asm("OSCSTAT equ 09Ah");
[; <" OSCSTAT equ 09Ah ;# ">
[; ;pic16f1518.h: 1571: typedef union {
[; ;pic16f1518.h: 1572: struct {
[; ;pic16f1518.h: 1573: unsigned HFIOFS :1;
[; ;pic16f1518.h: 1574: unsigned LFIOFR :1;
[; ;pic16f1518.h: 1575: unsigned :2;
[; ;pic16f1518.h: 1576: unsigned HFIOFR :1;
[; ;pic16f1518.h: 1577: unsigned OSTS :1;
[; ;pic16f1518.h: 1578: unsigned :1;
[; ;pic16f1518.h: 1579: unsigned SOSCR :1;
[; ;pic16f1518.h: 1580: };
[; ;pic16f1518.h: 1581: struct {
[; ;pic16f1518.h: 1582: unsigned :7;
[; ;pic16f1518.h: 1583: unsigned T1OSCR :1;
[; ;pic16f1518.h: 1584: };
[; ;pic16f1518.h: 1585: } OSCSTATbits_t;
[; ;pic16f1518.h: 1586: extern volatile OSCSTATbits_t OSCSTATbits @ 0x09A;
[; ;pic16f1518.h: 1620: extern volatile unsigned short ADRES @ 0x09B;
"1622
[; ;pic16f1518.h: 1622: asm("ADRES equ 09Bh");
[; <" ADRES equ 09Bh ;# ">
[; ;pic16f1518.h: 1626: extern volatile unsigned char ADRESL @ 0x09B;
"1628
[; ;pic16f1518.h: 1628: asm("ADRESL equ 09Bh");
[; <" ADRESL equ 09Bh ;# ">
[; ;pic16f1518.h: 1631: typedef union {
[; ;pic16f1518.h: 1632: struct {
[; ;pic16f1518.h: 1633: unsigned ADRESL :8;
[; ;pic16f1518.h: 1634: };
[; ;pic16f1518.h: 1635: } ADRESLbits_t;
[; ;pic16f1518.h: 1636: extern volatile ADRESLbits_t ADRESLbits @ 0x09B;
[; ;pic16f1518.h: 1645: extern volatile unsigned char ADRESH @ 0x09C;
"1647
[; ;pic16f1518.h: 1647: asm("ADRESH equ 09Ch");
[; <" ADRESH equ 09Ch ;# ">
[; ;pic16f1518.h: 1650: typedef union {
[; ;pic16f1518.h: 1651: struct {
[; ;pic16f1518.h: 1652: unsigned ADRESH :8;
[; ;pic16f1518.h: 1653: };
[; ;pic16f1518.h: 1654: } ADRESHbits_t;
[; ;pic16f1518.h: 1655: extern volatile ADRESHbits_t ADRESHbits @ 0x09C;
[; ;pic16f1518.h: 1664: extern volatile unsigned char ADCON0 @ 0x09D;
"1666
[; ;pic16f1518.h: 1666: asm("ADCON0 equ 09Dh");
[; <" ADCON0 equ 09Dh ;# ">
[; ;pic16f1518.h: 1669: typedef union {
[; ;pic16f1518.h: 1670: struct {
[; ;pic16f1518.h: 1671: unsigned ADON :1;
[; ;pic16f1518.h: 1672: unsigned GO_nDONE :1;
[; ;pic16f1518.h: 1673: unsigned CHS :5;
[; ;pic16f1518.h: 1674: };
[; ;pic16f1518.h: 1675: struct {
[; ;pic16f1518.h: 1676: unsigned :1;
[; ;pic16f1518.h: 1677: unsigned ADGO :1;
[; ;pic16f1518.h: 1678: unsigned CHS0 :1;
[; ;pic16f1518.h: 1679: unsigned CHS1 :1;
[; ;pic16f1518.h: 1680: unsigned CHS2 :1;
[; ;pic16f1518.h: 1681: unsigned CHS3 :1;
[; ;pic16f1518.h: 1682: unsigned CHS4 :1;
[; ;pic16f1518.h: 1683: };
[; ;pic16f1518.h: 1684: struct {
[; ;pic16f1518.h: 1685: unsigned :1;
[; ;pic16f1518.h: 1686: unsigned GO :1;
[; ;pic16f1518.h: 1687: };
[; ;pic16f1518.h: 1688: } ADCON0bits_t;
[; ;pic16f1518.h: 1689: extern volatile ADCON0bits_t ADCON0bits @ 0x09D;
[; ;pic16f1518.h: 1743: extern volatile unsigned char ADCON1 @ 0x09E;
"1745
[; ;pic16f1518.h: 1745: asm("ADCON1 equ 09Eh");
[; <" ADCON1 equ 09Eh ;# ">
[; ;pic16f1518.h: 1748: typedef union {
[; ;pic16f1518.h: 1749: struct {
[; ;pic16f1518.h: 1750: unsigned ADPREF :2;
[; ;pic16f1518.h: 1751: unsigned :2;
[; ;pic16f1518.h: 1752: unsigned ADCS :3;
[; ;pic16f1518.h: 1753: unsigned ADFM :1;
[; ;pic16f1518.h: 1754: };
[; ;pic16f1518.h: 1755: struct {
[; ;pic16f1518.h: 1756: unsigned ADPREF0 :1;
[; ;pic16f1518.h: 1757: unsigned ADPREF1 :1;
[; ;pic16f1518.h: 1758: unsigned :2;
[; ;pic16f1518.h: 1759: unsigned ADCS0 :1;
[; ;pic16f1518.h: 1760: unsigned ADCS1 :1;
[; ;pic16f1518.h: 1761: unsigned ADCS2 :1;
[; ;pic16f1518.h: 1762: };
[; ;pic16f1518.h: 1763: } ADCON1bits_t;
[; ;pic16f1518.h: 1764: extern volatile ADCON1bits_t ADCON1bits @ 0x09E;
[; ;pic16f1518.h: 1808: extern volatile unsigned char LATA @ 0x10C;
"1810
[; ;pic16f1518.h: 1810: asm("LATA equ 010Ch");
[; <" LATA equ 010Ch ;# ">
[; ;pic16f1518.h: 1813: typedef union {
[; ;pic16f1518.h: 1814: struct {
[; ;pic16f1518.h: 1815: unsigned LATA0 :1;
[; ;pic16f1518.h: 1816: unsigned LATA1 :1;
[; ;pic16f1518.h: 1817: unsigned LATA2 :1;
[; ;pic16f1518.h: 1818: unsigned LATA3 :1;
[; ;pic16f1518.h: 1819: unsigned LATA4 :1;
[; ;pic16f1518.h: 1820: unsigned LATA5 :1;
[; ;pic16f1518.h: 1821: unsigned LATA6 :1;
[; ;pic16f1518.h: 1822: unsigned LATA7 :1;
[; ;pic16f1518.h: 1823: };
[; ;pic16f1518.h: 1824: } LATAbits_t;
[; ;pic16f1518.h: 1825: extern volatile LATAbits_t LATAbits @ 0x10C;
[; ;pic16f1518.h: 1869: extern volatile unsigned char LATB @ 0x10D;
"1871
[; ;pic16f1518.h: 1871: asm("LATB equ 010Dh");
[; <" LATB equ 010Dh ;# ">
[; ;pic16f1518.h: 1874: typedef union {
[; ;pic16f1518.h: 1875: struct {
[; ;pic16f1518.h: 1876: unsigned LATB0 :1;
[; ;pic16f1518.h: 1877: unsigned LATB1 :1;
[; ;pic16f1518.h: 1878: unsigned LATB2 :1;
[; ;pic16f1518.h: 1879: unsigned LATB3 :1;
[; ;pic16f1518.h: 1880: unsigned LATB4 :1;
[; ;pic16f1518.h: 1881: unsigned LATB5 :1;
[; ;pic16f1518.h: 1882: unsigned LATB6 :1;
[; ;pic16f1518.h: 1883: unsigned LATB7 :1;
[; ;pic16f1518.h: 1884: };
[; ;pic16f1518.h: 1885: } LATBbits_t;
[; ;pic16f1518.h: 1886: extern volatile LATBbits_t LATBbits @ 0x10D;
[; ;pic16f1518.h: 1930: extern volatile unsigned char LATC @ 0x10E;
"1932
[; ;pic16f1518.h: 1932: asm("LATC equ 010Eh");
[; <" LATC equ 010Eh ;# ">
[; ;pic16f1518.h: 1935: typedef union {
[; ;pic16f1518.h: 1936: struct {
[; ;pic16f1518.h: 1937: unsigned LATC0 :1;
[; ;pic16f1518.h: 1938: unsigned LATC1 :1;
[; ;pic16f1518.h: 1939: unsigned LATC2 :1;
[; ;pic16f1518.h: 1940: unsigned LATC3 :1;
[; ;pic16f1518.h: 1941: unsigned LATC4 :1;
[; ;pic16f1518.h: 1942: unsigned LATC5 :1;
[; ;pic16f1518.h: 1943: unsigned LATC6 :1;
[; ;pic16f1518.h: 1944: unsigned LATC7 :1;
[; ;pic16f1518.h: 1945: };
[; ;pic16f1518.h: 1946: } LATCbits_t;
[; ;pic16f1518.h: 1947: extern volatile LATCbits_t LATCbits @ 0x10E;
[; ;pic16f1518.h: 1991: extern volatile unsigned char BORCON @ 0x116;
"1993
[; ;pic16f1518.h: 1993: asm("BORCON equ 0116h");
[; <" BORCON equ 0116h ;# ">
[; ;pic16f1518.h: 1996: typedef union {
[; ;pic16f1518.h: 1997: struct {
[; ;pic16f1518.h: 1998: unsigned BORRDY :1;
[; ;pic16f1518.h: 1999: unsigned :5;
[; ;pic16f1518.h: 2000: unsigned BORFS :1;
[; ;pic16f1518.h: 2001: unsigned SBOREN :1;
[; ;pic16f1518.h: 2002: };
[; ;pic16f1518.h: 2003: } BORCONbits_t;
[; ;pic16f1518.h: 2004: extern volatile BORCONbits_t BORCONbits @ 0x116;
[; ;pic16f1518.h: 2023: extern volatile unsigned char FVRCON @ 0x117;
"2025
[; ;pic16f1518.h: 2025: asm("FVRCON equ 0117h");
[; <" FVRCON equ 0117h ;# ">
[; ;pic16f1518.h: 2028: typedef union {
[; ;pic16f1518.h: 2029: struct {
[; ;pic16f1518.h: 2030: unsigned ADFVR :2;
[; ;pic16f1518.h: 2031: unsigned :2;
[; ;pic16f1518.h: 2032: unsigned TSRNG :1;
[; ;pic16f1518.h: 2033: unsigned TSEN :1;
[; ;pic16f1518.h: 2034: unsigned FVRRDY :1;
[; ;pic16f1518.h: 2035: unsigned FVREN :1;
[; ;pic16f1518.h: 2036: };
[; ;pic16f1518.h: 2037: struct {
[; ;pic16f1518.h: 2038: unsigned ADFVR0 :1;
[; ;pic16f1518.h: 2039: unsigned ADFVR1 :1;
[; ;pic16f1518.h: 2040: };
[; ;pic16f1518.h: 2041: } FVRCONbits_t;
[; ;pic16f1518.h: 2042: extern volatile FVRCONbits_t FVRCONbits @ 0x117;
[; ;pic16f1518.h: 2081: extern volatile unsigned char APFCON @ 0x11D;
"2083
[; ;pic16f1518.h: 2083: asm("APFCON equ 011Dh");
[; <" APFCON equ 011Dh ;# ">
[; ;pic16f1518.h: 2086: typedef union {
[; ;pic16f1518.h: 2087: struct {
[; ;pic16f1518.h: 2088: unsigned CCP2SEL :1;
[; ;pic16f1518.h: 2089: unsigned SSSEL :1;
[; ;pic16f1518.h: 2090: };
[; ;pic16f1518.h: 2091: } APFCONbits_t;
[; ;pic16f1518.h: 2092: extern volatile APFCONbits_t APFCONbits @ 0x11D;
[; ;pic16f1518.h: 2106: extern volatile unsigned char ANSELA @ 0x18C;
"2108
[; ;pic16f1518.h: 2108: asm("ANSELA equ 018Ch");
[; <" ANSELA equ 018Ch ;# ">
[; ;pic16f1518.h: 2111: typedef union {
[; ;pic16f1518.h: 2112: struct {
[; ;pic16f1518.h: 2113: unsigned ANSA0 :1;
[; ;pic16f1518.h: 2114: unsigned ANSA1 :1;
[; ;pic16f1518.h: 2115: unsigned ANSA2 :1;
[; ;pic16f1518.h: 2116: unsigned ANSA3 :1;
[; ;pic16f1518.h: 2117: unsigned :1;
[; ;pic16f1518.h: 2118: unsigned ANSA5 :1;
[; ;pic16f1518.h: 2119: };
[; ;pic16f1518.h: 2120: struct {
[; ;pic16f1518.h: 2121: unsigned ANSELA :6;
[; ;pic16f1518.h: 2122: };
[; ;pic16f1518.h: 2123: } ANSELAbits_t;
[; ;pic16f1518.h: 2124: extern volatile ANSELAbits_t ANSELAbits @ 0x18C;
[; ;pic16f1518.h: 2158: extern volatile unsigned char ANSELB @ 0x18D;
"2160
[; ;pic16f1518.h: 2160: asm("ANSELB equ 018Dh");
[; <" ANSELB equ 018Dh ;# ">
[; ;pic16f1518.h: 2163: typedef union {
[; ;pic16f1518.h: 2164: struct {
[; ;pic16f1518.h: 2165: unsigned ANSB0 :1;
[; ;pic16f1518.h: 2166: unsigned ANSB1 :1;
[; ;pic16f1518.h: 2167: unsigned ANSB2 :1;
[; ;pic16f1518.h: 2168: unsigned ANSB3 :1;
[; ;pic16f1518.h: 2169: unsigned ANSB4 :1;
[; ;pic16f1518.h: 2170: unsigned ANSB5 :1;
[; ;pic16f1518.h: 2171: };
[; ;pic16f1518.h: 2172: struct {
[; ;pic16f1518.h: 2173: unsigned ANSELB :6;
[; ;pic16f1518.h: 2174: };
[; ;pic16f1518.h: 2175: } ANSELBbits_t;
[; ;pic16f1518.h: 2176: extern volatile ANSELBbits_t ANSELBbits @ 0x18D;
[; ;pic16f1518.h: 2215: extern volatile unsigned char ANSELC @ 0x18E;
"2217
[; ;pic16f1518.h: 2217: asm("ANSELC equ 018Eh");
[; <" ANSELC equ 018Eh ;# ">
[; ;pic16f1518.h: 2220: typedef union {
[; ;pic16f1518.h: 2221: struct {
[; ;pic16f1518.h: 2222: unsigned ANSC0 :1;
[; ;pic16f1518.h: 2223: unsigned ANSC1 :1;
[; ;pic16f1518.h: 2224: unsigned ANSC2 :1;
[; ;pic16f1518.h: 2225: unsigned ANSC3 :1;
[; ;pic16f1518.h: 2226: unsigned ANSC4 :1;
[; ;pic16f1518.h: 2227: unsigned ANSC5 :1;
[; ;pic16f1518.h: 2228: unsigned ANSC6 :1;
[; ;pic16f1518.h: 2229: unsigned ANSC7 :1;
[; ;pic16f1518.h: 2230: };
[; ;pic16f1518.h: 2231: } ANSELCbits_t;
[; ;pic16f1518.h: 2232: extern volatile ANSELCbits_t ANSELCbits @ 0x18E;
[; ;pic16f1518.h: 2276: extern volatile unsigned short PMADR @ 0x191;
"2278
[; ;pic16f1518.h: 2278: asm("PMADR equ 0191h");
[; <" PMADR equ 0191h ;# ">
[; ;pic16f1518.h: 2282: extern volatile unsigned char PMADRL @ 0x191;
"2284
[; ;pic16f1518.h: 2284: asm("PMADRL equ 0191h");
[; <" PMADRL equ 0191h ;# ">
[; ;pic16f1518.h: 2287: typedef union {
[; ;pic16f1518.h: 2288: struct {
[; ;pic16f1518.h: 2289: unsigned PMADRL :8;
[; ;pic16f1518.h: 2290: };
[; ;pic16f1518.h: 2291: } PMADRLbits_t;
[; ;pic16f1518.h: 2292: extern volatile PMADRLbits_t PMADRLbits @ 0x191;
[; ;pic16f1518.h: 2301: extern volatile unsigned char PMADRH @ 0x192;
"2303
[; ;pic16f1518.h: 2303: asm("PMADRH equ 0192h");
[; <" PMADRH equ 0192h ;# ">
[; ;pic16f1518.h: 2306: typedef union {
[; ;pic16f1518.h: 2307: struct {
[; ;pic16f1518.h: 2308: unsigned PMADRH :7;
[; ;pic16f1518.h: 2309: };
[; ;pic16f1518.h: 2310: } PMADRHbits_t;
[; ;pic16f1518.h: 2311: extern volatile PMADRHbits_t PMADRHbits @ 0x192;
[; ;pic16f1518.h: 2320: extern volatile unsigned short PMDAT @ 0x193;
"2322
[; ;pic16f1518.h: 2322: asm("PMDAT equ 0193h");
[; <" PMDAT equ 0193h ;# ">
[; ;pic16f1518.h: 2326: extern volatile unsigned char PMDATL @ 0x193;
"2328
[; ;pic16f1518.h: 2328: asm("PMDATL equ 0193h");
[; <" PMDATL equ 0193h ;# ">
[; ;pic16f1518.h: 2331: typedef union {
[; ;pic16f1518.h: 2332: struct {
[; ;pic16f1518.h: 2333: unsigned PMDATL :8;
[; ;pic16f1518.h: 2334: };
[; ;pic16f1518.h: 2335: } PMDATLbits_t;
[; ;pic16f1518.h: 2336: extern volatile PMDATLbits_t PMDATLbits @ 0x193;
[; ;pic16f1518.h: 2345: extern volatile unsigned char PMDATH @ 0x194;
"2347
[; ;pic16f1518.h: 2347: asm("PMDATH equ 0194h");
[; <" PMDATH equ 0194h ;# ">
[; ;pic16f1518.h: 2350: typedef union {
[; ;pic16f1518.h: 2351: struct {
[; ;pic16f1518.h: 2352: unsigned PMDATH :6;
[; ;pic16f1518.h: 2353: };
[; ;pic16f1518.h: 2354: } PMDATHbits_t;
[; ;pic16f1518.h: 2355: extern volatile PMDATHbits_t PMDATHbits @ 0x194;
[; ;pic16f1518.h: 2364: extern volatile unsigned char PMCON1 @ 0x195;
"2366
[; ;pic16f1518.h: 2366: asm("PMCON1 equ 0195h");
[; <" PMCON1 equ 0195h ;# ">
[; ;pic16f1518.h: 2369: typedef union {
[; ;pic16f1518.h: 2370: struct {
[; ;pic16f1518.h: 2371: unsigned RD :1;
[; ;pic16f1518.h: 2372: unsigned WR :1;
[; ;pic16f1518.h: 2373: unsigned WREN :1;
[; ;pic16f1518.h: 2374: unsigned WRERR :1;
[; ;pic16f1518.h: 2375: unsigned FREE :1;
[; ;pic16f1518.h: 2376: unsigned LWLO :1;
[; ;pic16f1518.h: 2377: unsigned CFGS :1;
[; ;pic16f1518.h: 2378: };
[; ;pic16f1518.h: 2379: } PMCON1bits_t;
[; ;pic16f1518.h: 2380: extern volatile PMCON1bits_t PMCON1bits @ 0x195;
[; ;pic16f1518.h: 2419: extern volatile unsigned char PMCON2 @ 0x196;
"2421
[; ;pic16f1518.h: 2421: asm("PMCON2 equ 0196h");
[; <" PMCON2 equ 0196h ;# ">
[; ;pic16f1518.h: 2424: typedef union {
[; ;pic16f1518.h: 2425: struct {
[; ;pic16f1518.h: 2426: unsigned PMCON2 :8;
[; ;pic16f1518.h: 2427: };
[; ;pic16f1518.h: 2428: } PMCON2bits_t;
[; ;pic16f1518.h: 2429: extern volatile PMCON2bits_t PMCON2bits @ 0x196;
[; ;pic16f1518.h: 2438: extern volatile unsigned char VREGCON @ 0x197;
"2440
[; ;pic16f1518.h: 2440: asm("VREGCON equ 0197h");
[; <" VREGCON equ 0197h ;# ">
[; ;pic16f1518.h: 2443: typedef union {
[; ;pic16f1518.h: 2444: struct {
[; ;pic16f1518.h: 2445: unsigned :1;
[; ;pic16f1518.h: 2446: unsigned VREGPM :1;
[; ;pic16f1518.h: 2447: };
[; ;pic16f1518.h: 2448: } VREGCONbits_t;
[; ;pic16f1518.h: 2449: extern volatile VREGCONbits_t VREGCONbits @ 0x197;
[; ;pic16f1518.h: 2458: extern volatile unsigned char RCREG @ 0x199;
"2460
[; ;pic16f1518.h: 2460: asm("RCREG equ 0199h");
[; <" RCREG equ 0199h ;# ">
[; ;pic16f1518.h: 2463: typedef union {
[; ;pic16f1518.h: 2464: struct {
[; ;pic16f1518.h: 2465: unsigned RCREG :8;
[; ;pic16f1518.h: 2466: };
[; ;pic16f1518.h: 2467: } RCREGbits_t;
[; ;pic16f1518.h: 2468: extern volatile RCREGbits_t RCREGbits @ 0x199;
[; ;pic16f1518.h: 2477: extern volatile unsigned char TXREG @ 0x19A;
"2479
[; ;pic16f1518.h: 2479: asm("TXREG equ 019Ah");
[; <" TXREG equ 019Ah ;# ">
[; ;pic16f1518.h: 2482: typedef union {
[; ;pic16f1518.h: 2483: struct {
[; ;pic16f1518.h: 2484: unsigned TXREG :8;
[; ;pic16f1518.h: 2485: };
[; ;pic16f1518.h: 2486: } TXREGbits_t;
[; ;pic16f1518.h: 2487: extern volatile TXREGbits_t TXREGbits @ 0x19A;
[; ;pic16f1518.h: 2496: extern volatile unsigned short SP1BRG @ 0x19B;
"2498
[; ;pic16f1518.h: 2498: asm("SP1BRG equ 019Bh");
[; <" SP1BRG equ 019Bh ;# ">
[; ;pic16f1518.h: 2502: extern volatile unsigned char SP1BRGL @ 0x19B;
"2504
[; ;pic16f1518.h: 2504: asm("SP1BRGL equ 019Bh");
[; <" SP1BRGL equ 019Bh ;# ">
[; ;pic16f1518.h: 2507: extern volatile unsigned char SPBRG @ 0x19B;
"2509
[; ;pic16f1518.h: 2509: asm("SPBRG equ 019Bh");
[; <" SPBRG equ 019Bh ;# ">
[; ;pic16f1518.h: 2511: extern volatile unsigned char SPBRGL @ 0x19B;
"2513
[; ;pic16f1518.h: 2513: asm("SPBRGL equ 019Bh");
[; <" SPBRGL equ 019Bh ;# ">
[; ;pic16f1518.h: 2516: typedef union {
[; ;pic16f1518.h: 2517: struct {
[; ;pic16f1518.h: 2518: unsigned SPBRGL :8;
[; ;pic16f1518.h: 2519: };
[; ;pic16f1518.h: 2520: } SP1BRGLbits_t;
[; ;pic16f1518.h: 2521: extern volatile SP1BRGLbits_t SP1BRGLbits @ 0x19B;
[; ;pic16f1518.h: 2529: typedef union {
[; ;pic16f1518.h: 2530: struct {
[; ;pic16f1518.h: 2531: unsigned SPBRGL :8;
[; ;pic16f1518.h: 2532: };
[; ;pic16f1518.h: 2533: } SPBRGbits_t;
[; ;pic16f1518.h: 2534: extern volatile SPBRGbits_t SPBRGbits @ 0x19B;
[; ;pic16f1518.h: 2541: typedef union {
[; ;pic16f1518.h: 2542: struct {
[; ;pic16f1518.h: 2543: unsigned SPBRGL :8;
[; ;pic16f1518.h: 2544: };
[; ;pic16f1518.h: 2545: } SPBRGLbits_t;
[; ;pic16f1518.h: 2546: extern volatile SPBRGLbits_t SPBRGLbits @ 0x19B;
[; ;pic16f1518.h: 2555: extern volatile unsigned char SP1BRGH @ 0x19C;
"2557
[; ;pic16f1518.h: 2557: asm("SP1BRGH equ 019Ch");
[; <" SP1BRGH equ 019Ch ;# ">
[; ;pic16f1518.h: 2560: extern volatile unsigned char SPBRGH @ 0x19C;
"2562
[; ;pic16f1518.h: 2562: asm("SPBRGH equ 019Ch");
[; <" SPBRGH equ 019Ch ;# ">
[; ;pic16f1518.h: 2565: typedef union {
[; ;pic16f1518.h: 2566: struct {
[; ;pic16f1518.h: 2567: unsigned SPBRGH :8;
[; ;pic16f1518.h: 2568: };
[; ;pic16f1518.h: 2569: } SP1BRGHbits_t;
[; ;pic16f1518.h: 2570: extern volatile SP1BRGHbits_t SP1BRGHbits @ 0x19C;
[; ;pic16f1518.h: 2578: typedef union {
[; ;pic16f1518.h: 2579: struct {
[; ;pic16f1518.h: 2580: unsigned SPBRGH :8;
[; ;pic16f1518.h: 2581: };
[; ;pic16f1518.h: 2582: } SPBRGHbits_t;
[; ;pic16f1518.h: 2583: extern volatile SPBRGHbits_t SPBRGHbits @ 0x19C;
[; ;pic16f1518.h: 2592: extern volatile unsigned char RCSTA @ 0x19D;
"2594
[; ;pic16f1518.h: 2594: asm("RCSTA equ 019Dh");
[; <" RCSTA equ 019Dh ;# ">
[; ;pic16f1518.h: 2597: typedef union {
[; ;pic16f1518.h: 2598: struct {
[; ;pic16f1518.h: 2599: unsigned RX9D :1;
[; ;pic16f1518.h: 2600: unsigned OERR :1;
[; ;pic16f1518.h: 2601: unsigned FERR :1;
[; ;pic16f1518.h: 2602: unsigned ADDEN :1;
[; ;pic16f1518.h: 2603: unsigned CREN :1;
[; ;pic16f1518.h: 2604: unsigned SREN :1;
[; ;pic16f1518.h: 2605: unsigned RX9 :1;
[; ;pic16f1518.h: 2606: unsigned SPEN :1;
[; ;pic16f1518.h: 2607: };
[; ;pic16f1518.h: 2608: } RCSTAbits_t;
[; ;pic16f1518.h: 2609: extern volatile RCSTAbits_t RCSTAbits @ 0x19D;
[; ;pic16f1518.h: 2653: extern volatile unsigned char TXSTA @ 0x19E;
"2655
[; ;pic16f1518.h: 2655: asm("TXSTA equ 019Eh");
[; <" TXSTA equ 019Eh ;# ">
[; ;pic16f1518.h: 2658: typedef union {
[; ;pic16f1518.h: 2659: struct {
[; ;pic16f1518.h: 2660: unsigned TX9D :1;
[; ;pic16f1518.h: 2661: unsigned TRMT :1;
[; ;pic16f1518.h: 2662: unsigned BRGH :1;
[; ;pic16f1518.h: 2663: unsigned SENDB :1;
[; ;pic16f1518.h: 2664: unsigned SYNC :1;
[; ;pic16f1518.h: 2665: unsigned TXEN :1;
[; ;pic16f1518.h: 2666: unsigned TX9 :1;
[; ;pic16f1518.h: 2667: unsigned CSRC :1;
[; ;pic16f1518.h: 2668: };
[; ;pic16f1518.h: 2669: } TXSTAbits_t;
[; ;pic16f1518.h: 2670: extern volatile TXSTAbits_t TXSTAbits @ 0x19E;
[; ;pic16f1518.h: 2714: extern volatile unsigned char BAUDCON @ 0x19F;
"2716
[; ;pic16f1518.h: 2716: asm("BAUDCON equ 019Fh");
[; <" BAUDCON equ 019Fh ;# ">
[; ;pic16f1518.h: 2719: typedef union {
[; ;pic16f1518.h: 2720: struct {
[; ;pic16f1518.h: 2721: unsigned ABDEN :1;
[; ;pic16f1518.h: 2722: unsigned WUE :1;
[; ;pic16f1518.h: 2723: unsigned :1;
[; ;pic16f1518.h: 2724: unsigned BRG16 :1;
[; ;pic16f1518.h: 2725: unsigned SCKP :1;
[; ;pic16f1518.h: 2726: unsigned :1;
[; ;pic16f1518.h: 2727: unsigned RCIDL :1;
[; ;pic16f1518.h: 2728: unsigned ABDOVF :1;
[; ;pic16f1518.h: 2729: };
[; ;pic16f1518.h: 2730: } BAUDCONbits_t;
[; ;pic16f1518.h: 2731: extern volatile BAUDCONbits_t BAUDCONbits @ 0x19F;
[; ;pic16f1518.h: 2765: extern volatile unsigned char WPUB @ 0x20D;
"2767
[; ;pic16f1518.h: 2767: asm("WPUB equ 020Dh");
[; <" WPUB equ 020Dh ;# ">
[; ;pic16f1518.h: 2770: typedef union {
[; ;pic16f1518.h: 2771: struct {
[; ;pic16f1518.h: 2772: unsigned WPUB0 :1;
[; ;pic16f1518.h: 2773: unsigned WPUB1 :1;
[; ;pic16f1518.h: 2774: unsigned WPUB2 :1;
[; ;pic16f1518.h: 2775: unsigned WPUB3 :1;
[; ;pic16f1518.h: 2776: unsigned WPUB4 :1;
[; ;pic16f1518.h: 2777: unsigned WPUB5 :1;
[; ;pic16f1518.h: 2778: unsigned WPUB6 :1;
[; ;pic16f1518.h: 2779: unsigned WPUB7 :1;
[; ;pic16f1518.h: 2780: };
[; ;pic16f1518.h: 2781: struct {
[; ;pic16f1518.h: 2782: unsigned WPUB :8;
[; ;pic16f1518.h: 2783: };
[; ;pic16f1518.h: 2784: } WPUBbits_t;
[; ;pic16f1518.h: 2785: extern volatile WPUBbits_t WPUBbits @ 0x20D;
[; ;pic16f1518.h: 2834: extern volatile unsigned char WPUE @ 0x210;
"2836
[; ;pic16f1518.h: 2836: asm("WPUE equ 0210h");
[; <" WPUE equ 0210h ;# ">
[; ;pic16f1518.h: 2839: typedef union {
[; ;pic16f1518.h: 2840: struct {
[; ;pic16f1518.h: 2841: unsigned :3;
[; ;pic16f1518.h: 2842: unsigned WPUE3 :1;
[; ;pic16f1518.h: 2843: };
[; ;pic16f1518.h: 2844: } WPUEbits_t;
[; ;pic16f1518.h: 2845: extern volatile WPUEbits_t WPUEbits @ 0x210;
[; ;pic16f1518.h: 2854: extern volatile unsigned char SSPBUF @ 0x211;
"2856
[; ;pic16f1518.h: 2856: asm("SSPBUF equ 0211h");
[; <" SSPBUF equ 0211h ;# ">
[; ;pic16f1518.h: 2859: extern volatile unsigned char SSP1BUF @ 0x211;
"2861
[; ;pic16f1518.h: 2861: asm("SSP1BUF equ 0211h");
[; <" SSP1BUF equ 0211h ;# ">
[; ;pic16f1518.h: 2864: typedef union {
[; ;pic16f1518.h: 2865: struct {
[; ;pic16f1518.h: 2866: unsigned SSPBUF :8;
[; ;pic16f1518.h: 2867: };
[; ;pic16f1518.h: 2868: } SSPBUFbits_t;
[; ;pic16f1518.h: 2869: extern volatile SSPBUFbits_t SSPBUFbits @ 0x211;
[; ;pic16f1518.h: 2877: typedef union {
[; ;pic16f1518.h: 2878: struct {
[; ;pic16f1518.h: 2879: unsigned SSPBUF :8;
[; ;pic16f1518.h: 2880: };
[; ;pic16f1518.h: 2881: } SSP1BUFbits_t;
[; ;pic16f1518.h: 2882: extern volatile SSP1BUFbits_t SSP1BUFbits @ 0x211;
[; ;pic16f1518.h: 2891: extern volatile unsigned char SSPADD @ 0x212;
"2893
[; ;pic16f1518.h: 2893: asm("SSPADD equ 0212h");
[; <" SSPADD equ 0212h ;# ">
[; ;pic16f1518.h: 2896: extern volatile unsigned char SSP1ADD @ 0x212;
"2898
[; ;pic16f1518.h: 2898: asm("SSP1ADD equ 0212h");
[; <" SSP1ADD equ 0212h ;# ">
[; ;pic16f1518.h: 2901: typedef union {
[; ;pic16f1518.h: 2902: struct {
[; ;pic16f1518.h: 2903: unsigned SSPADD :8;
[; ;pic16f1518.h: 2904: };
[; ;pic16f1518.h: 2905: } SSPADDbits_t;
[; ;pic16f1518.h: 2906: extern volatile SSPADDbits_t SSPADDbits @ 0x212;
[; ;pic16f1518.h: 2914: typedef union {
[; ;pic16f1518.h: 2915: struct {
[; ;pic16f1518.h: 2916: unsigned SSPADD :8;
[; ;pic16f1518.h: 2917: };
[; ;pic16f1518.h: 2918: } SSP1ADDbits_t;
[; ;pic16f1518.h: 2919: extern volatile SSP1ADDbits_t SSP1ADDbits @ 0x212;
[; ;pic16f1518.h: 2928: extern volatile unsigned char SSPMSK @ 0x213;
"2930
[; ;pic16f1518.h: 2930: asm("SSPMSK equ 0213h");
[; <" SSPMSK equ 0213h ;# ">
[; ;pic16f1518.h: 2933: extern volatile unsigned char SSP1MSK @ 0x213;
"2935
[; ;pic16f1518.h: 2935: asm("SSP1MSK equ 0213h");
[; <" SSP1MSK equ 0213h ;# ">
[; ;pic16f1518.h: 2938: typedef union {
[; ;pic16f1518.h: 2939: struct {
[; ;pic16f1518.h: 2940: unsigned SSPMSK :8;
[; ;pic16f1518.h: 2941: };
[; ;pic16f1518.h: 2942: } SSPMSKbits_t;
[; ;pic16f1518.h: 2943: extern volatile SSPMSKbits_t SSPMSKbits @ 0x213;
[; ;pic16f1518.h: 2951: typedef union {
[; ;pic16f1518.h: 2952: struct {
[; ;pic16f1518.h: 2953: unsigned SSPMSK :8;
[; ;pic16f1518.h: 2954: };
[; ;pic16f1518.h: 2955: } SSP1MSKbits_t;
[; ;pic16f1518.h: 2956: extern volatile SSP1MSKbits_t SSP1MSKbits @ 0x213;
[; ;pic16f1518.h: 2965: extern volatile unsigned char SSPSTAT @ 0x214;
"2967
[; ;pic16f1518.h: 2967: asm("SSPSTAT equ 0214h");
[; <" SSPSTAT equ 0214h ;# ">
[; ;pic16f1518.h: 2970: extern volatile unsigned char SSP1STAT @ 0x214;
"2972
[; ;pic16f1518.h: 2972: asm("SSP1STAT equ 0214h");
[; <" SSP1STAT equ 0214h ;# ">
[; ;pic16f1518.h: 2975: typedef union {
[; ;pic16f1518.h: 2976: struct {
[; ;pic16f1518.h: 2977: unsigned BF :1;
[; ;pic16f1518.h: 2978: unsigned UA :1;
[; ;pic16f1518.h: 2979: unsigned R_nW :1;
[; ;pic16f1518.h: 2980: unsigned S :1;
[; ;pic16f1518.h: 2981: unsigned P :1;
[; ;pic16f1518.h: 2982: unsigned D_nA :1;
[; ;pic16f1518.h: 2983: unsigned CKE :1;
[; ;pic16f1518.h: 2984: unsigned SMP :1;
[; ;pic16f1518.h: 2985: };
[; ;pic16f1518.h: 2986: } SSPSTATbits_t;
[; ;pic16f1518.h: 2987: extern volatile SSPSTATbits_t SSPSTATbits @ 0x214;
[; ;pic16f1518.h: 3030: typedef union {
[; ;pic16f1518.h: 3031: struct {
[; ;pic16f1518.h: 3032: unsigned BF :1;
[; ;pic16f1518.h: 3033: unsigned UA :1;
[; ;pic16f1518.h: 3034: unsigned R_nW :1;
[; ;pic16f1518.h: 3035: unsigned S :1;
[; ;pic16f1518.h: 3036: unsigned P :1;
[; ;pic16f1518.h: 3037: unsigned D_nA :1;
[; ;pic16f1518.h: 3038: unsigned CKE :1;
[; ;pic16f1518.h: 3039: unsigned SMP :1;
[; ;pic16f1518.h: 3040: };
[; ;pic16f1518.h: 3041: } SSP1STATbits_t;
[; ;pic16f1518.h: 3042: extern volatile SSP1STATbits_t SSP1STATbits @ 0x214;
[; ;pic16f1518.h: 3086: extern volatile unsigned char SSPCON1 @ 0x215;
"3088
[; ;pic16f1518.h: 3088: asm("SSPCON1 equ 0215h");
[; <" SSPCON1 equ 0215h ;# ">
[; ;pic16f1518.h: 3091: extern volatile unsigned char SSPCON @ 0x215;
"3093
[; ;pic16f1518.h: 3093: asm("SSPCON equ 0215h");
[; <" SSPCON equ 0215h ;# ">
[; ;pic16f1518.h: 3095: extern volatile unsigned char SSP1CON1 @ 0x215;
"3097
[; ;pic16f1518.h: 3097: asm("SSP1CON1 equ 0215h");
[; <" SSP1CON1 equ 0215h ;# ">
[; ;pic16f1518.h: 3100: typedef union {
[; ;pic16f1518.h: 3101: struct {
[; ;pic16f1518.h: 3102: unsigned SSPM :4;
[; ;pic16f1518.h: 3103: unsigned CKP :1;
[; ;pic16f1518.h: 3104: unsigned SSPEN :1;
[; ;pic16f1518.h: 3105: unsigned SSPOV :1;
[; ;pic16f1518.h: 3106: unsigned WCOL :1;
[; ;pic16f1518.h: 3107: };
[; ;pic16f1518.h: 3108: struct {
[; ;pic16f1518.h: 3109: unsigned SSPM0 :1;
[; ;pic16f1518.h: 3110: unsigned SSPM1 :1;
[; ;pic16f1518.h: 3111: unsigned SSPM2 :1;
[; ;pic16f1518.h: 3112: unsigned SSPM3 :1;
[; ;pic16f1518.h: 3113: };
[; ;pic16f1518.h: 3114: } SSPCON1bits_t;
[; ;pic16f1518.h: 3115: extern volatile SSPCON1bits_t SSPCON1bits @ 0x215;
[; ;pic16f1518.h: 3163: typedef union {
[; ;pic16f1518.h: 3164: struct {
[; ;pic16f1518.h: 3165: unsigned SSPM :4;
[; ;pic16f1518.h: 3166: unsigned CKP :1;
[; ;pic16f1518.h: 3167: unsigned SSPEN :1;
[; ;pic16f1518.h: 3168: unsigned SSPOV :1;
[; ;pic16f1518.h: 3169: unsigned WCOL :1;
[; ;pic16f1518.h: 3170: };
[; ;pic16f1518.h: 3171: struct {
[; ;pic16f1518.h: 3172: unsigned SSPM0 :1;
[; ;pic16f1518.h: 3173: unsigned SSPM1 :1;
[; ;pic16f1518.h: 3174: unsigned SSPM2 :1;
[; ;pic16f1518.h: 3175: unsigned SSPM3 :1;
[; ;pic16f1518.h: 3176: };
[; ;pic16f1518.h: 3177: } SSPCONbits_t;
[; ;pic16f1518.h: 3178: extern volatile SSPCONbits_t SSPCONbits @ 0x215;
[; ;pic16f1518.h: 3225: typedef union {
[; ;pic16f1518.h: 3226: struct {
[; ;pic16f1518.h: 3227: unsigned SSPM :4;
[; ;pic16f1518.h: 3228: unsigned CKP :1;
[; ;pic16f1518.h: 3229: unsigned SSPEN :1;
[; ;pic16f1518.h: 3230: unsigned SSPOV :1;
[; ;pic16f1518.h: 3231: unsigned WCOL :1;
[; ;pic16f1518.h: 3232: };
[; ;pic16f1518.h: 3233: struct {
[; ;pic16f1518.h: 3234: unsigned SSPM0 :1;
[; ;pic16f1518.h: 3235: unsigned SSPM1 :1;
[; ;pic16f1518.h: 3236: unsigned SSPM2 :1;
[; ;pic16f1518.h: 3237: unsigned SSPM3 :1;
[; ;pic16f1518.h: 3238: };
[; ;pic16f1518.h: 3239: } SSP1CON1bits_t;
[; ;pic16f1518.h: 3240: extern volatile SSP1CON1bits_t SSP1CON1bits @ 0x215;
[; ;pic16f1518.h: 3289: extern volatile unsigned char SSPCON2 @ 0x216;
"3291
[; ;pic16f1518.h: 3291: asm("SSPCON2 equ 0216h");
[; <" SSPCON2 equ 0216h ;# ">
[; ;pic16f1518.h: 3294: extern volatile unsigned char SSP1CON2 @ 0x216;
"3296
[; ;pic16f1518.h: 3296: asm("SSP1CON2 equ 0216h");
[; <" SSP1CON2 equ 0216h ;# ">
[; ;pic16f1518.h: 3299: typedef union {
[; ;pic16f1518.h: 3300: struct {
[; ;pic16f1518.h: 3301: unsigned SEN :1;
[; ;pic16f1518.h: 3302: unsigned RSEN :1;
[; ;pic16f1518.h: 3303: unsigned PEN :1;
[; ;pic16f1518.h: 3304: unsigned RCEN :1;
[; ;pic16f1518.h: 3305: unsigned ACKEN :1;
[; ;pic16f1518.h: 3306: unsigned ACKDT :1;
[; ;pic16f1518.h: 3307: unsigned ACKSTAT :1;
[; ;pic16f1518.h: 3308: unsigned GCEN :1;
[; ;pic16f1518.h: 3309: };
[; ;pic16f1518.h: 3310: } SSPCON2bits_t;
[; ;pic16f1518.h: 3311: extern volatile SSPCON2bits_t SSPCON2bits @ 0x216;
[; ;pic16f1518.h: 3354: typedef union {
[; ;pic16f1518.h: 3355: struct {
[; ;pic16f1518.h: 3356: unsigned SEN :1;
[; ;pic16f1518.h: 3357: unsigned RSEN :1;
[; ;pic16f1518.h: 3358: unsigned PEN :1;
[; ;pic16f1518.h: 3359: unsigned RCEN :1;
[; ;pic16f1518.h: 3360: unsigned ACKEN :1;
[; ;pic16f1518.h: 3361: unsigned ACKDT :1;
[; ;pic16f1518.h: 3362: unsigned ACKSTAT :1;
[; ;pic16f1518.h: 3363: unsigned GCEN :1;
[; ;pic16f1518.h: 3364: };
[; ;pic16f1518.h: 3365: } SSP1CON2bits_t;
[; ;pic16f1518.h: 3366: extern volatile SSP1CON2bits_t SSP1CON2bits @ 0x216;
[; ;pic16f1518.h: 3410: extern volatile unsigned char SSPCON3 @ 0x217;
"3412
[; ;pic16f1518.h: 3412: asm("SSPCON3 equ 0217h");
[; <" SSPCON3 equ 0217h ;# ">
[; ;pic16f1518.h: 3415: extern volatile unsigned char SSP1CON3 @ 0x217;
"3417
[; ;pic16f1518.h: 3417: asm("SSP1CON3 equ 0217h");
[; <" SSP1CON3 equ 0217h ;# ">
[; ;pic16f1518.h: 3420: typedef union {
[; ;pic16f1518.h: 3421: struct {
[; ;pic16f1518.h: 3422: unsigned DHEN :1;
[; ;pic16f1518.h: 3423: unsigned AHEN :1;
[; ;pic16f1518.h: 3424: unsigned SBCDE :1;
[; ;pic16f1518.h: 3425: unsigned SDAHT :1;
[; ;pic16f1518.h: 3426: unsigned BOEN :1;
[; ;pic16f1518.h: 3427: unsigned SCIE :1;
[; ;pic16f1518.h: 3428: unsigned PCIE :1;
[; ;pic16f1518.h: 3429: unsigned ACKTIM :1;
[; ;pic16f1518.h: 3430: };
[; ;pic16f1518.h: 3431: } SSPCON3bits_t;
[; ;pic16f1518.h: 3432: extern volatile SSPCON3bits_t SSPCON3bits @ 0x217;
[; ;pic16f1518.h: 3475: typedef union {
[; ;pic16f1518.h: 3476: struct {
[; ;pic16f1518.h: 3477: unsigned DHEN :1;
[; ;pic16f1518.h: 3478: unsigned AHEN :1;
[; ;pic16f1518.h: 3479: unsigned SBCDE :1;
[; ;pic16f1518.h: 3480: unsigned SDAHT :1;
[; ;pic16f1518.h: 3481: unsigned BOEN :1;
[; ;pic16f1518.h: 3482: unsigned SCIE :1;
[; ;pic16f1518.h: 3483: unsigned PCIE :1;
[; ;pic16f1518.h: 3484: unsigned ACKTIM :1;
[; ;pic16f1518.h: 3485: };
[; ;pic16f1518.h: 3486: } SSP1CON3bits_t;
[; ;pic16f1518.h: 3487: extern volatile SSP1CON3bits_t SSP1CON3bits @ 0x217;
[; ;pic16f1518.h: 3531: extern volatile unsigned short CCPR1 @ 0x291;
"3533
[; ;pic16f1518.h: 3533: asm("CCPR1 equ 0291h");
[; <" CCPR1 equ 0291h ;# ">
[; ;pic16f1518.h: 3537: extern volatile unsigned char CCPR1L @ 0x291;
"3539
[; ;pic16f1518.h: 3539: asm("CCPR1L equ 0291h");
[; <" CCPR1L equ 0291h ;# ">
[; ;pic16f1518.h: 3542: typedef union {
[; ;pic16f1518.h: 3543: struct {
[; ;pic16f1518.h: 3544: unsigned CCPR1L :8;
[; ;pic16f1518.h: 3545: };
[; ;pic16f1518.h: 3546: } CCPR1Lbits_t;
[; ;pic16f1518.h: 3547: extern volatile CCPR1Lbits_t CCPR1Lbits @ 0x291;
[; ;pic16f1518.h: 3556: extern volatile unsigned char CCPR1H @ 0x292;
"3558
[; ;pic16f1518.h: 3558: asm("CCPR1H equ 0292h");
[; <" CCPR1H equ 0292h ;# ">
[; ;pic16f1518.h: 3561: typedef union {
[; ;pic16f1518.h: 3562: struct {
[; ;pic16f1518.h: 3563: unsigned CCPR1H :8;
[; ;pic16f1518.h: 3564: };
[; ;pic16f1518.h: 3565: } CCPR1Hbits_t;
[; ;pic16f1518.h: 3566: extern volatile CCPR1Hbits_t CCPR1Hbits @ 0x292;
[; ;pic16f1518.h: 3575: extern volatile unsigned char CCP1CON @ 0x293;
"3577
[; ;pic16f1518.h: 3577: asm("CCP1CON equ 0293h");
[; <" CCP1CON equ 0293h ;# ">
[; ;pic16f1518.h: 3580: typedef union {
[; ;pic16f1518.h: 3581: struct {
[; ;pic16f1518.h: 3582: unsigned CCP1M :4;
[; ;pic16f1518.h: 3583: unsigned DC1B :2;
[; ;pic16f1518.h: 3584: };
[; ;pic16f1518.h: 3585: struct {
[; ;pic16f1518.h: 3586: unsigned CCP1M0 :1;
[; ;pic16f1518.h: 3587: unsigned CCP1M1 :1;
[; ;pic16f1518.h: 3588: unsigned CCP1M2 :1;
[; ;pic16f1518.h: 3589: unsigned CCP1M3 :1;
[; ;pic16f1518.h: 3590: unsigned DC1B0 :1;
[; ;pic16f1518.h: 3591: unsigned DC1B1 :1;
[; ;pic16f1518.h: 3592: };
[; ;pic16f1518.h: 3593: } CCP1CONbits_t;
[; ;pic16f1518.h: 3594: extern volatile CCP1CONbits_t CCP1CONbits @ 0x293;
[; ;pic16f1518.h: 3638: extern volatile unsigned short CCPR2 @ 0x298;
"3640
[; ;pic16f1518.h: 3640: asm("CCPR2 equ 0298h");
[; <" CCPR2 equ 0298h ;# ">
[; ;pic16f1518.h: 3644: extern volatile unsigned char CCPR2L @ 0x298;
"3646
[; ;pic16f1518.h: 3646: asm("CCPR2L equ 0298h");
[; <" CCPR2L equ 0298h ;# ">
[; ;pic16f1518.h: 3649: typedef union {
[; ;pic16f1518.h: 3650: struct {
[; ;pic16f1518.h: 3651: unsigned CCPR2L :8;
[; ;pic16f1518.h: 3652: };
[; ;pic16f1518.h: 3653: } CCPR2Lbits_t;
[; ;pic16f1518.h: 3654: extern volatile CCPR2Lbits_t CCPR2Lbits @ 0x298;
[; ;pic16f1518.h: 3663: extern volatile unsigned char CCPR2H @ 0x299;
"3665
[; ;pic16f1518.h: 3665: asm("CCPR2H equ 0299h");
[; <" CCPR2H equ 0299h ;# ">
[; ;pic16f1518.h: 3668: typedef union {
[; ;pic16f1518.h: 3669: struct {
[; ;pic16f1518.h: 3670: unsigned CCPR2H :8;
[; ;pic16f1518.h: 3671: };
[; ;pic16f1518.h: 3672: } CCPR2Hbits_t;
[; ;pic16f1518.h: 3673: extern volatile CCPR2Hbits_t CCPR2Hbits @ 0x299;
[; ;pic16f1518.h: 3682: extern volatile unsigned char CCP2CON @ 0x29A;
"3684
[; ;pic16f1518.h: 3684: asm("CCP2CON equ 029Ah");
[; <" CCP2CON equ 029Ah ;# ">
[; ;pic16f1518.h: 3687: typedef union {
[; ;pic16f1518.h: 3688: struct {
[; ;pic16f1518.h: 3689: unsigned CCP2M :4;
[; ;pic16f1518.h: 3690: unsigned DC2B :2;
[; ;pic16f1518.h: 3691: };
[; ;pic16f1518.h: 3692: struct {
[; ;pic16f1518.h: 3693: unsigned CCP2M0 :1;
[; ;pic16f1518.h: 3694: unsigned CCP2M1 :1;
[; ;pic16f1518.h: 3695: unsigned CCP2M2 :1;
[; ;pic16f1518.h: 3696: unsigned CCP2M3 :1;
[; ;pic16f1518.h: 3697: unsigned DC2B0 :1;
[; ;pic16f1518.h: 3698: unsigned DC2B1 :1;
[; ;pic16f1518.h: 3699: };
[; ;pic16f1518.h: 3700: } CCP2CONbits_t;
[; ;pic16f1518.h: 3701: extern volatile CCP2CONbits_t CCP2CONbits @ 0x29A;
[; ;pic16f1518.h: 3745: extern volatile unsigned char IOCBP @ 0x394;
"3747
[; ;pic16f1518.h: 3747: asm("IOCBP equ 0394h");
[; <" IOCBP equ 0394h ;# ">
[; ;pic16f1518.h: 3750: typedef union {
[; ;pic16f1518.h: 3751: struct {
[; ;pic16f1518.h: 3752: unsigned IOCBP0 :1;
[; ;pic16f1518.h: 3753: unsigned IOCBP1 :1;
[; ;pic16f1518.h: 3754: unsigned IOCBP2 :1;
[; ;pic16f1518.h: 3755: unsigned IOCBP3 :1;
[; ;pic16f1518.h: 3756: unsigned IOCBP4 :1;
[; ;pic16f1518.h: 3757: unsigned IOCBP5 :1;
[; ;pic16f1518.h: 3758: unsigned IOCBP6 :1;
[; ;pic16f1518.h: 3759: unsigned IOCBP7 :1;
[; ;pic16f1518.h: 3760: };
[; ;pic16f1518.h: 3761: struct {
[; ;pic16f1518.h: 3762: unsigned IOCBP :8;
[; ;pic16f1518.h: 3763: };
[; ;pic16f1518.h: 3764: } IOCBPbits_t;
[; ;pic16f1518.h: 3765: extern volatile IOCBPbits_t IOCBPbits @ 0x394;
[; ;pic16f1518.h: 3814: extern volatile unsigned char IOCBN @ 0x395;
"3816
[; ;pic16f1518.h: 3816: asm("IOCBN equ 0395h");
[; <" IOCBN equ 0395h ;# ">
[; ;pic16f1518.h: 3819: typedef union {
[; ;pic16f1518.h: 3820: struct {
[; ;pic16f1518.h: 3821: unsigned IOCBN0 :1;
[; ;pic16f1518.h: 3822: unsigned IOCBN1 :1;
[; ;pic16f1518.h: 3823: unsigned IOCBN2 :1;
[; ;pic16f1518.h: 3824: unsigned IOCBN3 :1;
[; ;pic16f1518.h: 3825: unsigned IOCBN4 :1;
[; ;pic16f1518.h: 3826: unsigned IOCBN5 :1;
[; ;pic16f1518.h: 3827: unsigned IOCBN6 :1;
[; ;pic16f1518.h: 3828: unsigned IOCBN7 :1;
[; ;pic16f1518.h: 3829: };
[; ;pic16f1518.h: 3830: struct {
[; ;pic16f1518.h: 3831: unsigned IOCBN :8;
[; ;pic16f1518.h: 3832: };
[; ;pic16f1518.h: 3833: } IOCBNbits_t;
[; ;pic16f1518.h: 3834: extern volatile IOCBNbits_t IOCBNbits @ 0x395;
[; ;pic16f1518.h: 3883: extern volatile unsigned char IOCBF @ 0x396;
"3885
[; ;pic16f1518.h: 3885: asm("IOCBF equ 0396h");
[; <" IOCBF equ 0396h ;# ">
[; ;pic16f1518.h: 3888: typedef union {
[; ;pic16f1518.h: 3889: struct {
[; ;pic16f1518.h: 3890: unsigned IOCBF0 :1;
[; ;pic16f1518.h: 3891: unsigned IOCBF1 :1;
[; ;pic16f1518.h: 3892: unsigned IOCBF2 :1;
[; ;pic16f1518.h: 3893: unsigned IOCBF3 :1;
[; ;pic16f1518.h: 3894: unsigned IOCBF4 :1;
[; ;pic16f1518.h: 3895: unsigned IOCBF5 :1;
[; ;pic16f1518.h: 3896: unsigned IOCBF6 :1;
[; ;pic16f1518.h: 3897: unsigned IOCBF7 :1;
[; ;pic16f1518.h: 3898: };
[; ;pic16f1518.h: 3899: struct {
[; ;pic16f1518.h: 3900: unsigned IOCBF :8;
[; ;pic16f1518.h: 3901: };
[; ;pic16f1518.h: 3902: } IOCBFbits_t;
[; ;pic16f1518.h: 3903: extern volatile IOCBFbits_t IOCBFbits @ 0x396;
[; ;pic16f1518.h: 3952: extern volatile unsigned char STATUS_SHAD @ 0xFE4;
"3954
[; ;pic16f1518.h: 3954: asm("STATUS_SHAD equ 0FE4h");
[; <" STATUS_SHAD equ 0FE4h ;# ">
[; ;pic16f1518.h: 3957: typedef union {
[; ;pic16f1518.h: 3958: struct {
[; ;pic16f1518.h: 3959: unsigned C_SHAD :1;
[; ;pic16f1518.h: 3960: unsigned DC_SHAD :1;
[; ;pic16f1518.h: 3961: unsigned Z_SHAD :1;
[; ;pic16f1518.h: 3962: };
[; ;pic16f1518.h: 3963: } STATUS_SHADbits_t;
[; ;pic16f1518.h: 3964: extern volatile STATUS_SHADbits_t STATUS_SHADbits @ 0xFE4;
[; ;pic16f1518.h: 3983: extern volatile unsigned char WREG_SHAD @ 0xFE5;
"3985
[; ;pic16f1518.h: 3985: asm("WREG_SHAD equ 0FE5h");
[; <" WREG_SHAD equ 0FE5h ;# ">
[; ;pic16f1518.h: 3988: typedef union {
[; ;pic16f1518.h: 3989: struct {
[; ;pic16f1518.h: 3990: unsigned WREG_SHAD :8;
[; ;pic16f1518.h: 3991: };
[; ;pic16f1518.h: 3992: } WREG_SHADbits_t;
[; ;pic16f1518.h: 3993: extern volatile WREG_SHADbits_t WREG_SHADbits @ 0xFE5;
[; ;pic16f1518.h: 4002: extern volatile unsigned char BSR_SHAD @ 0xFE6;
"4004
[; ;pic16f1518.h: 4004: asm("BSR_SHAD equ 0FE6h");
[; <" BSR_SHAD equ 0FE6h ;# ">
[; ;pic16f1518.h: 4007: typedef union {
[; ;pic16f1518.h: 4008: struct {
[; ;pic16f1518.h: 4009: unsigned BSR_SHAD :5;
[; ;pic16f1518.h: 4010: };
[; ;pic16f1518.h: 4011: } BSR_SHADbits_t;
[; ;pic16f1518.h: 4012: extern volatile BSR_SHADbits_t BSR_SHADbits @ 0xFE6;
[; ;pic16f1518.h: 4021: extern volatile unsigned char PCLATH_SHAD @ 0xFE7;
"4023
[; ;pic16f1518.h: 4023: asm("PCLATH_SHAD equ 0FE7h");
[; <" PCLATH_SHAD equ 0FE7h ;# ">
[; ;pic16f1518.h: 4026: typedef union {
[; ;pic16f1518.h: 4027: struct {
[; ;pic16f1518.h: 4028: unsigned PCLATH_SHAD :7;
[; ;pic16f1518.h: 4029: };
[; ;pic16f1518.h: 4030: } PCLATH_SHADbits_t;
[; ;pic16f1518.h: 4031: extern volatile PCLATH_SHADbits_t PCLATH_SHADbits @ 0xFE7;
[; ;pic16f1518.h: 4040: extern volatile unsigned char FSR0L_SHAD @ 0xFE8;
"4042
[; ;pic16f1518.h: 4042: asm("FSR0L_SHAD equ 0FE8h");
[; <" FSR0L_SHAD equ 0FE8h ;# ">
[; ;pic16f1518.h: 4045: typedef union {
[; ;pic16f1518.h: 4046: struct {
[; ;pic16f1518.h: 4047: unsigned FSR0L_SHAD :8;
[; ;pic16f1518.h: 4048: };
[; ;pic16f1518.h: 4049: } FSR0L_SHADbits_t;
[; ;pic16f1518.h: 4050: extern volatile FSR0L_SHADbits_t FSR0L_SHADbits @ 0xFE8;
[; ;pic16f1518.h: 4059: extern volatile unsigned char FSR0H_SHAD @ 0xFE9;
"4061
[; ;pic16f1518.h: 4061: asm("FSR0H_SHAD equ 0FE9h");
[; <" FSR0H_SHAD equ 0FE9h ;# ">
[; ;pic16f1518.h: 4064: typedef union {
[; ;pic16f1518.h: 4065: struct {
[; ;pic16f1518.h: 4066: unsigned FSR0H_SHAD :8;
[; ;pic16f1518.h: 4067: };
[; ;pic16f1518.h: 4068: } FSR0H_SHADbits_t;
[; ;pic16f1518.h: 4069: extern volatile FSR0H_SHADbits_t FSR0H_SHADbits @ 0xFE9;
[; ;pic16f1518.h: 4078: extern volatile unsigned char FSR1L_SHAD @ 0xFEA;
"4080
[; ;pic16f1518.h: 4080: asm("FSR1L_SHAD equ 0FEAh");
[; <" FSR1L_SHAD equ 0FEAh ;# ">
[; ;pic16f1518.h: 4083: typedef union {
[; ;pic16f1518.h: 4084: struct {
[; ;pic16f1518.h: 4085: unsigned FSR1L_SHAD :8;
[; ;pic16f1518.h: 4086: };
[; ;pic16f1518.h: 4087: } FSR1L_SHADbits_t;
[; ;pic16f1518.h: 4088: extern volatile FSR1L_SHADbits_t FSR1L_SHADbits @ 0xFEA;
[; ;pic16f1518.h: 4097: extern volatile unsigned char FSR1H_SHAD @ 0xFEB;
"4099
[; ;pic16f1518.h: 4099: asm("FSR1H_SHAD equ 0FEBh");
[; <" FSR1H_SHAD equ 0FEBh ;# ">
[; ;pic16f1518.h: 4102: typedef union {
[; ;pic16f1518.h: 4103: struct {
[; ;pic16f1518.h: 4104: unsigned FSR1H_SHAD :8;
[; ;pic16f1518.h: 4105: };
[; ;pic16f1518.h: 4106: } FSR1H_SHADbits_t;
[; ;pic16f1518.h: 4107: extern volatile FSR1H_SHADbits_t FSR1H_SHADbits @ 0xFEB;
[; ;pic16f1518.h: 4116: extern volatile unsigned char STKPTR @ 0xFED;
"4118
[; ;pic16f1518.h: 4118: asm("STKPTR equ 0FEDh");
[; <" STKPTR equ 0FEDh ;# ">
[; ;pic16f1518.h: 4121: typedef union {
[; ;pic16f1518.h: 4122: struct {
[; ;pic16f1518.h: 4123: unsigned STKPTR :5;
[; ;pic16f1518.h: 4124: };
[; ;pic16f1518.h: 4125: } STKPTRbits_t;
[; ;pic16f1518.h: 4126: extern volatile STKPTRbits_t STKPTRbits @ 0xFED;
[; ;pic16f1518.h: 4135: extern volatile unsigned char TOSL @ 0xFEE;
"4137
[; ;pic16f1518.h: 4137: asm("TOSL equ 0FEEh");
[; <" TOSL equ 0FEEh ;# ">
[; ;pic16f1518.h: 4140: typedef union {
[; ;pic16f1518.h: 4141: struct {
[; ;pic16f1518.h: 4142: unsigned TOSL :8;
[; ;pic16f1518.h: 4143: };
[; ;pic16f1518.h: 4144: } TOSLbits_t;
[; ;pic16f1518.h: 4145: extern volatile TOSLbits_t TOSLbits @ 0xFEE;
[; ;pic16f1518.h: 4154: extern volatile unsigned char TOSH @ 0xFEF;
"4156
[; ;pic16f1518.h: 4156: asm("TOSH equ 0FEFh");
[; <" TOSH equ 0FEFh ;# ">
[; ;pic16f1518.h: 4159: typedef union {
[; ;pic16f1518.h: 4160: struct {
[; ;pic16f1518.h: 4161: unsigned TOSH :7;
[; ;pic16f1518.h: 4162: };
[; ;pic16f1518.h: 4163: } TOSHbits_t;
[; ;pic16f1518.h: 4164: extern volatile TOSHbits_t TOSHbits @ 0xFEF;
[; ;pic16f1518.h: 4179: extern volatile __bit ABDEN @ (((unsigned) &BAUDCON)*8) + 0;
[; ;pic16f1518.h: 4181: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCON)*8) + 7;
[; ;pic16f1518.h: 4183: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f1518.h: 4185: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f1518.h: 4187: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f1518.h: 4189: extern volatile __bit ACKTIM @ (((unsigned) &SSPCON3)*8) + 7;
[; ;pic16f1518.h: 4191: extern volatile __bit ADCS0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f1518.h: 4193: extern volatile __bit ADCS1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f1518.h: 4195: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f1518.h: 4197: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f1518.h: 4199: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f1518.h: 4201: extern volatile __bit ADFVR0 @ (((unsigned) &FVRCON)*8) + 0;
[; ;pic16f1518.h: 4203: extern volatile __bit ADFVR1 @ (((unsigned) &FVRCON)*8) + 1;
[; ;pic16f1518.h: 4205: extern volatile __bit ADGO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f1518.h: 4207: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f1518.h: 4209: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f1518.h: 4211: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f1518.h: 4213: extern volatile __bit ADPREF0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f1518.h: 4215: extern volatile __bit ADPREF1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f1518.h: 4217: extern volatile __bit AHEN @ (((unsigned) &SSPCON3)*8) + 1;
[; ;pic16f1518.h: 4219: extern volatile __bit ANSA0 @ (((unsigned) &ANSELA)*8) + 0;
[; ;pic16f1518.h: 4221: extern volatile __bit ANSA1 @ (((unsigned) &ANSELA)*8) + 1;
[; ;pic16f1518.h: 4223: extern volatile __bit ANSA2 @ (((unsigned) &ANSELA)*8) + 2;
[; ;pic16f1518.h: 4225: extern volatile __bit ANSA3 @ (((unsigned) &ANSELA)*8) + 3;
[; ;pic16f1518.h: 4227: extern volatile __bit ANSA5 @ (((unsigned) &ANSELA)*8) + 5;
[; ;pic16f1518.h: 4229: extern volatile __bit ANSB0 @ (((unsigned) &ANSELB)*8) + 0;
[; ;pic16f1518.h: 4231: extern volatile __bit ANSB1 @ (((unsigned) &ANSELB)*8) + 1;
[; ;pic16f1518.h: 4233: extern volatile __bit ANSB2 @ (((unsigned) &ANSELB)*8) + 2;
[; ;pic16f1518.h: 4235: extern volatile __bit ANSB3 @ (((unsigned) &ANSELB)*8) + 3;
[; ;pic16f1518.h: 4237: extern volatile __bit ANSB4 @ (((unsigned) &ANSELB)*8) + 4;
[; ;pic16f1518.h: 4239: extern volatile __bit ANSB5 @ (((unsigned) &ANSELB)*8) + 5;
[; ;pic16f1518.h: 4241: extern volatile __bit ANSC0 @ (((unsigned) &ANSELC)*8) + 0;
[; ;pic16f1518.h: 4243: extern volatile __bit ANSC1 @ (((unsigned) &ANSELC)*8) + 1;
[; ;pic16f1518.h: 4245: extern volatile __bit ANSC2 @ (((unsigned) &ANSELC)*8) + 2;
[; ;pic16f1518.h: 4247: extern volatile __bit ANSC3 @ (((unsigned) &ANSELC)*8) + 3;
[; ;pic16f1518.h: 4249: extern volatile __bit ANSC4 @ (((unsigned) &ANSELC)*8) + 4;
[; ;pic16f1518.h: 4251: extern volatile __bit ANSC5 @ (((unsigned) &ANSELC)*8) + 5;
[; ;pic16f1518.h: 4253: extern volatile __bit ANSC6 @ (((unsigned) &ANSELC)*8) + 6;
[; ;pic16f1518.h: 4255: extern volatile __bit ANSC7 @ (((unsigned) &ANSELC)*8) + 7;
[; ;pic16f1518.h: 4257: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f1518.h: 4259: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f1518.h: 4261: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f1518.h: 4263: extern volatile __bit BOEN @ (((unsigned) &SSPCON3)*8) + 4;
[; ;pic16f1518.h: 4265: extern volatile __bit BORFS @ (((unsigned) &BORCON)*8) + 6;
[; ;pic16f1518.h: 4267: extern volatile __bit BORRDY @ (((unsigned) &BORCON)*8) + 0;
[; ;pic16f1518.h: 4269: extern volatile __bit BRG16 @ (((unsigned) &BAUDCON)*8) + 3;
[; ;pic16f1518.h: 4271: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f1518.h: 4273: extern volatile __bit BSR0 @ (((unsigned) &BSR)*8) + 0;
[; ;pic16f1518.h: 4275: extern volatile __bit BSR1 @ (((unsigned) &BSR)*8) + 1;
[; ;pic16f1518.h: 4277: extern volatile __bit BSR2 @ (((unsigned) &BSR)*8) + 2;
[; ;pic16f1518.h: 4279: extern volatile __bit BSR3 @ (((unsigned) &BSR)*8) + 3;
[; ;pic16f1518.h: 4281: extern volatile __bit BSR4 @ (((unsigned) &BSR)*8) + 4;
[; ;pic16f1518.h: 4283: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f1518.h: 4285: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f1518.h: 4287: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f1518.h: 4289: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f1518.h: 4291: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f1518.h: 4293: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f1518.h: 4295: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f1518.h: 4297: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f1518.h: 4299: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f1518.h: 4301: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f1518.h: 4303: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f1518.h: 4305: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f1518.h: 4307: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f1518.h: 4309: extern volatile __bit CCP2SEL @ (((unsigned) &APFCON)*8) + 0;
[; ;pic16f1518.h: 4311: extern volatile __bit CFGS @ (((unsigned) &PMCON1)*8) + 6;
[; ;pic16f1518.h: 4313: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f1518.h: 4315: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f1518.h: 4317: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f1518.h: 4319: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f1518.h: 4321: extern volatile __bit CHS4 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f1518.h: 4323: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f1518.h: 4325: extern volatile __bit CKP @ (((unsigned) &SSPCON1)*8) + 4;
[; ;pic16f1518.h: 4327: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f1518.h: 4329: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f1518.h: 4331: extern volatile __bit C_SHAD @ (((unsigned) &STATUS_SHAD)*8) + 0;
[; ;pic16f1518.h: 4333: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f1518.h: 4335: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f1518.h: 4337: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f1518.h: 4339: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f1518.h: 4341: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f1518.h: 4343: extern volatile __bit DC_SHAD @ (((unsigned) &STATUS_SHAD)*8) + 1;
[; ;pic16f1518.h: 4345: extern volatile __bit DHEN @ (((unsigned) &SSPCON3)*8) + 0;
[; ;pic16f1518.h: 4347: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f1518.h: 4349: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f1518.h: 4351: extern volatile __bit FREE @ (((unsigned) &PMCON1)*8) + 4;
[; ;pic16f1518.h: 4353: extern volatile __bit FVREN @ (((unsigned) &FVRCON)*8) + 7;
[; ;pic16f1518.h: 4355: extern volatile __bit FVRRDY @ (((unsigned) &FVRCON)*8) + 6;
[; ;pic16f1518.h: 4357: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f1518.h: 4359: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f1518.h: 4361: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f1518.h: 4363: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f1518.h: 4365: extern volatile __bit HFIOFR @ (((unsigned) &OSCSTAT)*8) + 4;
[; ;pic16f1518.h: 4367: extern volatile __bit HFIOFS @ (((unsigned) &OSCSTAT)*8) + 0;
[; ;pic16f1518.h: 4369: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f1518.h: 4371: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f1518.h: 4373: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f1518.h: 4375: extern volatile __bit IOCBF0 @ (((unsigned) &IOCBF)*8) + 0;
[; ;pic16f1518.h: 4377: extern volatile __bit IOCBF1 @ (((unsigned) &IOCBF)*8) + 1;
[; ;pic16f1518.h: 4379: extern volatile __bit IOCBF2 @ (((unsigned) &IOCBF)*8) + 2;
[; ;pic16f1518.h: 4381: extern volatile __bit IOCBF3 @ (((unsigned) &IOCBF)*8) + 3;
[; ;pic16f1518.h: 4383: extern volatile __bit IOCBF4 @ (((unsigned) &IOCBF)*8) + 4;
[; ;pic16f1518.h: 4385: extern volatile __bit IOCBF5 @ (((unsigned) &IOCBF)*8) + 5;
[; ;pic16f1518.h: 4387: extern volatile __bit IOCBF6 @ (((unsigned) &IOCBF)*8) + 6;
[; ;pic16f1518.h: 4389: extern volatile __bit IOCBF7 @ (((unsigned) &IOCBF)*8) + 7;
[; ;pic16f1518.h: 4391: extern volatile __bit IOCBN0 @ (((unsigned) &IOCBN)*8) + 0;
[; ;pic16f1518.h: 4393: extern volatile __bit IOCBN1 @ (((unsigned) &IOCBN)*8) + 1;
[; ;pic16f1518.h: 4395: extern volatile __bit IOCBN2 @ (((unsigned) &IOCBN)*8) + 2;
[; ;pic16f1518.h: 4397: extern volatile __bit IOCBN3 @ (((unsigned) &IOCBN)*8) + 3;
[; ;pic16f1518.h: 4399: extern volatile __bit IOCBN4 @ (((unsigned) &IOCBN)*8) + 4;
[; ;pic16f1518.h: 4401: extern volatile __bit IOCBN5 @ (((unsigned) &IOCBN)*8) + 5;
[; ;pic16f1518.h: 4403: extern volatile __bit IOCBN6 @ (((unsigned) &IOCBN)*8) + 6;
[; ;pic16f1518.h: 4405: extern volatile __bit IOCBN7 @ (((unsigned) &IOCBN)*8) + 7;
[; ;pic16f1518.h: 4407: extern volatile __bit IOCBP0 @ (((unsigned) &IOCBP)*8) + 0;
[; ;pic16f1518.h: 4409: extern volatile __bit IOCBP1 @ (((unsigned) &IOCBP)*8) + 1;
[; ;pic16f1518.h: 4411: extern volatile __bit IOCBP2 @ (((unsigned) &IOCBP)*8) + 2;
[; ;pic16f1518.h: 4413: extern volatile __bit IOCBP3 @ (((unsigned) &IOCBP)*8) + 3;
[; ;pic16f1518.h: 4415: extern volatile __bit IOCBP4 @ (((unsigned) &IOCBP)*8) + 4;
[; ;pic16f1518.h: 4417: extern volatile __bit IOCBP5 @ (((unsigned) &IOCBP)*8) + 5;
[; ;pic16f1518.h: 4419: extern volatile __bit IOCBP6 @ (((unsigned) &IOCBP)*8) + 6;
[; ;pic16f1518.h: 4421: extern volatile __bit IOCBP7 @ (((unsigned) &IOCBP)*8) + 7;
[; ;pic16f1518.h: 4423: extern volatile __bit IOCIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f1518.h: 4425: extern volatile __bit IOCIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f1518.h: 4427: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f1518.h: 4429: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f1518.h: 4431: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f1518.h: 4433: extern volatile __bit IRCF3 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f1518.h: 4435: extern volatile __bit LATA0 @ (((unsigned) &LATA)*8) + 0;
[; ;pic16f1518.h: 4437: extern volatile __bit LATA1 @ (((unsigned) &LATA)*8) + 1;
[; ;pic16f1518.h: 4439: extern volatile __bit LATA2 @ (((unsigned) &LATA)*8) + 2;
[; ;pic16f1518.h: 4441: extern volatile __bit LATA3 @ (((unsigned) &LATA)*8) + 3;
[; ;pic16f1518.h: 4443: extern volatile __bit LATA4 @ (((unsigned) &LATA)*8) + 4;
[; ;pic16f1518.h: 4445: extern volatile __bit LATA5 @ (((unsigned) &LATA)*8) + 5;
[; ;pic16f1518.h: 4447: extern volatile __bit LATA6 @ (((unsigned) &LATA)*8) + 6;
[; ;pic16f1518.h: 4449: extern volatile __bit LATA7 @ (((unsigned) &LATA)*8) + 7;
[; ;pic16f1518.h: 4451: extern volatile __bit LATB0 @ (((unsigned) &LATB)*8) + 0;
[; ;pic16f1518.h: 4453: extern volatile __bit LATB1 @ (((unsigned) &LATB)*8) + 1;
[; ;pic16f1518.h: 4455: extern volatile __bit LATB2 @ (((unsigned) &LATB)*8) + 2;
[; ;pic16f1518.h: 4457: extern volatile __bit LATB3 @ (((unsigned) &LATB)*8) + 3;
[; ;pic16f1518.h: 4459: extern volatile __bit LATB4 @ (((unsigned) &LATB)*8) + 4;
[; ;pic16f1518.h: 4461: extern volatile __bit LATB5 @ (((unsigned) &LATB)*8) + 5;
[; ;pic16f1518.h: 4463: extern volatile __bit LATB6 @ (((unsigned) &LATB)*8) + 6;
[; ;pic16f1518.h: 4465: extern volatile __bit LATB7 @ (((unsigned) &LATB)*8) + 7;
[; ;pic16f1518.h: 4467: extern volatile __bit LATC0 @ (((unsigned) &LATC)*8) + 0;
[; ;pic16f1518.h: 4469: extern volatile __bit LATC1 @ (((unsigned) &LATC)*8) + 1;
[; ;pic16f1518.h: 4471: extern volatile __bit LATC2 @ (((unsigned) &LATC)*8) + 2;
[; ;pic16f1518.h: 4473: extern volatile __bit LATC3 @ (((unsigned) &LATC)*8) + 3;
[; ;pic16f1518.h: 4475: extern volatile __bit LATC4 @ (((unsigned) &LATC)*8) + 4;
[; ;pic16f1518.h: 4477: extern volatile __bit LATC5 @ (((unsigned) &LATC)*8) + 5;
[; ;pic16f1518.h: 4479: extern volatile __bit LATC6 @ (((unsigned) &LATC)*8) + 6;
[; ;pic16f1518.h: 4481: extern volatile __bit LATC7 @ (((unsigned) &LATC)*8) + 7;
[; ;pic16f1518.h: 4483: extern volatile __bit LFIOFR @ (((unsigned) &OSCSTAT)*8) + 1;
[; ;pic16f1518.h: 4485: extern volatile __bit LWLO @ (((unsigned) &PMCON1)*8) + 5;
[; ;pic16f1518.h: 4487: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f1518.h: 4489: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f1518.h: 4491: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f1518.h: 4493: extern volatile __bit OSTS @ (((unsigned) &OSCSTAT)*8) + 5;
[; ;pic16f1518.h: 4495: extern volatile __bit PCIE @ (((unsigned) &SSPCON3)*8) + 6;
[; ;pic16f1518.h: 4497: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f1518.h: 4499: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f1518.h: 4501: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f1518.h: 4503: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f1518.h: 4505: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f1518.h: 4507: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f1518.h: 4509: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f1518.h: 4511: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f1518.h: 4513: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f1518.h: 4515: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f1518.h: 4517: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f1518.h: 4519: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f1518.h: 4521: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f1518.h: 4523: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f1518.h: 4525: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f1518.h: 4527: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f1518.h: 4529: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f1518.h: 4531: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f1518.h: 4533: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f1518.h: 4535: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f1518.h: 4537: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f1518.h: 4539: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f1518.h: 4541: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f1518.h: 4543: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f1518.h: 4545: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f1518.h: 4547: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f1518.h: 4549: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f1518.h: 4551: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f1518.h: 4553: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f1518.h: 4555: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f1518.h: 4557: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f1518.h: 4559: extern volatile __bit RCIDL @ (((unsigned) &BAUDCON)*8) + 6;
[; ;pic16f1518.h: 4561: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f1518.h: 4563: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f1518.h: 4565: extern volatile __bit RD @ (((unsigned) &PMCON1)*8) + 0;
[; ;pic16f1518.h: 4567: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f1518.h: 4569: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f1518.h: 4571: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f1518.h: 4573: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f1518.h: 4575: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f1518.h: 4577: extern volatile __bit SBCDE @ (((unsigned) &SSPCON3)*8) + 2;
[; ;pic16f1518.h: 4579: extern volatile __bit SBOREN @ (((unsigned) &BORCON)*8) + 7;
[; ;pic16f1518.h: 4581: extern volatile __bit SCIE @ (((unsigned) &SSPCON3)*8) + 5;
[; ;pic16f1518.h: 4583: extern volatile __bit SCKP @ (((unsigned) &BAUDCON)*8) + 4;
[; ;pic16f1518.h: 4585: extern volatile __bit SCS0 @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f1518.h: 4587: extern volatile __bit SCS1 @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f1518.h: 4589: extern volatile __bit SDAHT @ (((unsigned) &SSPCON3)*8) + 3;
[; ;pic16f1518.h: 4591: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f1518.h: 4593: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f1518.h: 4595: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f1518.h: 4597: extern volatile __bit SOSCR @ (((unsigned) &OSCSTAT)*8) + 7;
[; ;pic16f1518.h: 4599: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f1518.h: 4601: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f1518.h: 4603: extern volatile __bit SSPEN @ (((unsigned) &SSPCON1)*8) + 5;
[; ;pic16f1518.h: 4605: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f1518.h: 4607: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f1518.h: 4609: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON1)*8) + 0;
[; ;pic16f1518.h: 4611: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON1)*8) + 1;
[; ;pic16f1518.h: 4613: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON1)*8) + 2;
[; ;pic16f1518.h: 4615: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON1)*8) + 3;
[; ;pic16f1518.h: 4617: extern volatile __bit SSPOV @ (((unsigned) &SSPCON1)*8) + 6;
[; ;pic16f1518.h: 4619: extern volatile __bit SSSEL @ (((unsigned) &APFCON)*8) + 1;
[; ;pic16f1518.h: 4621: extern volatile __bit STKOVF @ (((unsigned) &PCON)*8) + 7;
[; ;pic16f1518.h: 4623: extern volatile __bit STKUNF @ (((unsigned) &PCON)*8) + 6;
[; ;pic16f1518.h: 4625: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f1518.h: 4627: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f1518.h: 4629: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f1518.h: 4631: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f1518.h: 4633: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f1518.h: 4635: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f1518.h: 4637: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f1518.h: 4639: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f1518.h: 4641: extern volatile __bit T1GGO_nDONE @ (((unsigned) &T1GCON)*8) + 3;
[; ;pic16f1518.h: 4643: extern volatile __bit T1GPOL @ (((unsigned) &T1GCON)*8) + 6;
[; ;pic16f1518.h: 4645: extern volatile __bit T1GSPM @ (((unsigned) &T1GCON)*8) + 4;
[; ;pic16f1518.h: 4647: extern volatile __bit T1GSS0 @ (((unsigned) &T1GCON)*8) + 0;
[; ;pic16f1518.h: 4649: extern volatile __bit T1GSS1 @ (((unsigned) &T1GCON)*8) + 1;
[; ;pic16f1518.h: 4651: extern volatile __bit T1GTM @ (((unsigned) &T1GCON)*8) + 5;
[; ;pic16f1518.h: 4653: extern volatile __bit T1GVAL @ (((unsigned) &T1GCON)*8) + 2;
[; ;pic16f1518.h: 4655: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f1518.h: 4657: extern volatile __bit T1OSCR @ (((unsigned) &OSCSTAT)*8) + 7;
[; ;pic16f1518.h: 4659: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f1518.h: 4661: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f1518.h: 4663: extern volatile __bit T2OUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f1518.h: 4665: extern volatile __bit T2OUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f1518.h: 4667: extern volatile __bit T2OUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f1518.h: 4669: extern volatile __bit T2OUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f1518.h: 4671: extern volatile __bit TMR0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f1518.h: 4673: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f1518.h: 4675: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f1518.h: 4677: extern volatile __bit TMR0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f1518.h: 4679: extern volatile __bit TMR1CS0 @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f1518.h: 4681: extern volatile __bit TMR1CS1 @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f1518.h: 4683: extern volatile __bit TMR1GE @ (((unsigned) &T1GCON)*8) + 7;
[; ;pic16f1518.h: 4685: extern volatile __bit TMR1GIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f1518.h: 4687: extern volatile __bit TMR1GIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f1518.h: 4689: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f1518.h: 4691: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f1518.h: 4693: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f1518.h: 4695: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f1518.h: 4697: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f1518.h: 4699: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f1518.h: 4701: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f1518.h: 4703: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f1518.h: 4705: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f1518.h: 4707: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f1518.h: 4709: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f1518.h: 4711: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f1518.h: 4713: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f1518.h: 4715: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f1518.h: 4717: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f1518.h: 4719: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f1518.h: 4721: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f1518.h: 4723: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f1518.h: 4725: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f1518.h: 4727: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f1518.h: 4729: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f1518.h: 4731: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f1518.h: 4733: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f1518.h: 4735: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f1518.h: 4737: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f1518.h: 4739: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f1518.h: 4741: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f1518.h: 4743: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f1518.h: 4745: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f1518.h: 4747: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f1518.h: 4749: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f1518.h: 4751: extern volatile __bit TSEN @ (((unsigned) &FVRCON)*8) + 5;
[; ;pic16f1518.h: 4753: extern volatile __bit TSRNG @ (((unsigned) &FVRCON)*8) + 4;
[; ;pic16f1518.h: 4755: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f1518.h: 4757: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f1518.h: 4759: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f1518.h: 4761: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f1518.h: 4763: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f1518.h: 4765: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f1518.h: 4767: extern volatile __bit VREGPM @ (((unsigned) &VREGCON)*8) + 1;
[; ;pic16f1518.h: 4769: extern volatile __bit WCOL @ (((unsigned) &SSPCON1)*8) + 7;
[; ;pic16f1518.h: 4771: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f1518.h: 4773: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f1518.h: 4775: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f1518.h: 4777: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f1518.h: 4779: extern volatile __bit WDTPS4 @ (((unsigned) &WDTCON)*8) + 5;
[; ;pic16f1518.h: 4781: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f1518.h: 4783: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f1518.h: 4785: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f1518.h: 4787: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f1518.h: 4789: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f1518.h: 4791: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f1518.h: 4793: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f1518.h: 4795: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f1518.h: 4797: extern volatile __bit WPUE3 @ (((unsigned) &WPUE)*8) + 3;
[; ;pic16f1518.h: 4799: extern volatile __bit WR @ (((unsigned) &PMCON1)*8) + 1;
[; ;pic16f1518.h: 4801: extern volatile __bit WREN @ (((unsigned) &PMCON1)*8) + 2;
[; ;pic16f1518.h: 4803: extern volatile __bit WRERR @ (((unsigned) &PMCON1)*8) + 3;
[; ;pic16f1518.h: 4805: extern volatile __bit WUE @ (((unsigned) &BAUDCON)*8) + 1;
[; ;pic16f1518.h: 4807: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f1518.h: 4809: extern volatile __bit Z_SHAD @ (((unsigned) &STATUS_SHAD)*8) + 2;
[; ;pic16f1518.h: 4811: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f1518.h: 4813: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f1518.h: 4815: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f1518.h: 4817: extern volatile __bit nRI @ (((unsigned) &PCON)*8) + 2;
[; ;pic16f1518.h: 4819: extern volatile __bit nRMCLR @ (((unsigned) &PCON)*8) + 3;
[; ;pic16f1518.h: 4821: extern volatile __bit nRWDT @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f1518.h: 4823: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f1518.h: 4825: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f1518.h: 4827: extern volatile __bit nWPUEN @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 184: extern unsigned char __resetbits;
[; ;pic.h: 185: extern __bit __powerdown;
[; ;pic.h: 186: extern __bit __timeout;
[; ;stdlib.h: 4: typedef int ptrdiff_t;
[; ;stdlib.h: 5: typedef unsigned size_t;
[; ;stdlib.h: 6: typedef unsigned short wchar_t;
[; ;stdlib.h: 16: extern int errno;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: int rem;
[; ;stdlib.h: 29: int quot;
[; ;stdlib.h: 30: } div_t;
[; ;stdlib.h: 31: typedef struct {
[; ;stdlib.h: 32: unsigned rem;
[; ;stdlib.h: 33: unsigned quot;
[; ;stdlib.h: 34: } udiv_t;
[; ;stdlib.h: 35: typedef struct {
[; ;stdlib.h: 36: long quot;
[; ;stdlib.h: 37: long rem;
[; ;stdlib.h: 38: } ldiv_t;
[; ;stdlib.h: 39: typedef struct {
[; ;stdlib.h: 40: unsigned long quot;
[; ;stdlib.h: 41: unsigned long rem;
[; ;stdlib.h: 42: } uldiv_t;
[; ;stdlib.h: 65: extern double atof(const char *);
[; ;stdlib.h: 66: extern double strtod(const char *, const char **);
[; ;stdlib.h: 67: extern int atoi(const char *);
[; ;stdlib.h: 68: extern unsigned xtoi(const char *);
[; ;stdlib.h: 69: extern long atol(const char *);
[; ;stdlib.h: 70: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 72: extern int rand(void);
[; ;stdlib.h: 73: extern void srand(unsigned int);
[; ;stdlib.h: 74: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 75: extern div_t div(int numer, int denom);
[; ;stdlib.h: 76: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 77: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 78: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 79: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 80: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 81: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 82: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 87: extern void * malloc(size_t);
[; ;stdlib.h: 88: extern void free(void *);
[; ;stdlib.h: 89: extern void * realloc(void *, size_t);
[; ;stdlib.h: 98: extern int atexit(void (*)(void));
[; ;stdlib.h: 99: extern char * getenv(const char *);
[; ;stdlib.h: 100: extern char ** environ;
[; ;stdlib.h: 101: extern int system(char *);
[; ;stdlib.h: 102: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 103: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 104: extern int abs(int);
[; ;stdlib.h: 105: extern long labs(long);
[; ;stdlib.h: 108: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 109: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 114: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 115: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 117: extern char * ftoa(float f, int * status);
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 24: extern int errno;
[; ;stdio.h: 55: struct __prbuf
[; ;stdio.h: 56: {
[; ;stdio.h: 57: char * ptr;
[; ;stdio.h: 58: void (* func)(char);
[; ;stdio.h: 59: };
[; ;conio.h: 17: extern int errno;
[; ;conio.h: 20: extern void init_uart(void);
[; ;conio.h: 22: extern char getch(void);
[; ;conio.h: 23: extern char getche(void);
[; ;conio.h: 24: extern void putch(char);
[; ;conio.h: 25: extern void ungetch(char);
[; ;conio.h: 27: extern __bit kbhit(void);
[; ;conio.h: 31: extern char * cgets(char *);
[; ;conio.h: 32: extern void cputs(const char *);
[; ;stdio.h: 100: extern int cprintf(char *, ...);
[; ;stdio.h: 105: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 195: extern char * gets(char *);
[; ;stdio.h: 196: extern int puts(const char *);
[; ;stdio.h: 197: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 198: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 199: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 200: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 201: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 202: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 206: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 207: extern int printf(const char *, ...);
[; ;CC1.h: 2: typedef enum _CC1_STB
[; ;CC1.h: 3: {
[; ;CC1.h: 4: SRES=0x30,
[; ;CC1.h: 5: SFSTXON=0x31,
[; ;CC1.h: 6: SXOFF=0x32,
[; ;CC1.h: 7: SCAL=0x33,
[; ;CC1.h: 8: SRX=0x34,
[; ;CC1.h: 9: STX=0x35,
[; ;CC1.h: 10: SIDLE=0x36,
[; ;CC1.h: 11: SWOR=0x38,
[; ;CC1.h: 12: SPWD=0x39,
[; ;CC1.h: 13: SFRX=0x3A,
[; ;CC1.h: 14: SFTX=0x3B,
[; ;CC1.h: 15: SWORRST=0x3C,
[; ;CC1.h: 16: SNOP=0x3D
[; ;CC1.h: 17: }te_CC1_STB;
[; ;CC1.h: 19: typedef enum _CC1_STA
[; ;CC1.h: 20: {
[; ;CC1.h: 21: SLEEP=0x00,
[; ;CC1.h: 22: IDLE=0x01,
[; ;CC1.h: 23: XOFF=0x02,
[; ;CC1.h: 24: VCOON_MC=0x03,
[; ;CC1.h: 25: REGON_MC=0x04,
[; ;CC1.h: 26: MANCAL=0x05,
[; ;CC1.h: 27: VCOON=0x06,
[; ;CC1.h: 28: REGON=0x07,
[; ;CC1.h: 29: STARTCAL=0x08,
[; ;CC1.h: 30: BWBOOST=0x09,
[; ;CC1.h: 31: FS_LOCK=0x0A,
[; ;CC1.h: 32: IFADCON=0x0B,
[; ;CC1.h: 33: ENDCAL=0x0C,
[; ;CC1.h: 34: RX=0x0D,
[; ;CC1.h: 35: RX_END=0x0E,
[; ;CC1.h: 36: RX_RST=0x0F,
[; ;CC1.h: 37: TXRX_SWITCH=0x10,
[; ;CC1.h: 38: RXFIFO_OVERFLOW=0x11,
[; ;CC1.h: 39: FSTXON=0x12,
[; ;CC1.h: 40: TX=0x13,
[; ;CC1.h: 41: TX_END=0x14,
[; ;CC1.h: 42: RXTX_SWITCH=0x15,
[; ;CC1.h: 43: TXFIFO_UNDERFLOW=0x16
[; ;CC1.h: 44: }te_CC1_STA;
[; ;CC1.h: 46: typedef struct _CC1_FLG
[; ;CC1.h: 47: {
[; ;CC1.h: 48: unsigned int PCK_RCV:1;
[; ;CC1.h: 49: }ts_CC1_FLG;
"51 CC1.h
[v _s_CC1_FLG `S238 ~T0 @X0 1 e ]
[; ;CC1.h: 51: ts_CC1_FLG s_CC1_FLG;
[; ;CC1.h: 53: void CC1Init(unsigned char);
[; ;CC1.h: 54: void CC1Int(void);
[; ;CC1.h: 55: void CC1Tick(void);
[; ;CC1.h: 56: void CC1Strobe(te_CC1_STB);
[; ;CC1.h: 57: void CC1Read(unsigned char,unsigned char *,unsigned char);
[; ;CC1.h: 58: void CC1Write(unsigned char,unsigned char *,unsigned char);
[; ;PGM.h: 7: typedef union _PGM_MENU
[; ;PGM.h: 8: {
[; ;PGM.h: 9: unsigned char val;
[; ;PGM.h: 10: struct
[; ;PGM.h: 11: {
[; ;PGM.h: 12: unsigned int gen_curr_sensIsProg:1;
[; ;PGM.h: 13: unsigned int con_curr_sensIsProg:1;
[; ;PGM.h: 14: unsigned int volt_sensIsProg:1;
[; ;PGM.h: 15: };
[; ;PGM.h: 16: }tu_PGM_MENU;
[; ;PGM.h: 18: typedef struct _PGM_DEV
[; ;PGM.h: 19: {
[; ;PGM.h: 20: unsigned char type;
[; ;PGM.h: 21: unsigned char id;
[; ;PGM.h: 22: }ts_PGM_DEV;
[; ;PGM.h: 24: typedef struct _PGM_CFG
[; ;PGM.h: 25: {
[; ;PGM.h: 26: unsigned char valChk1;
[; ;PGM.h: 27: unsigned char valChk2;
[; ;PGM.h: 29: tu_PGM_MENU menu;
[; ;PGM.h: 31: ts_PGM_DEV base;
[; ;PGM.h: 32: ts_PGM_DEV gen_curr_sens;
[; ;PGM.h: 33: ts_PGM_DEV con_curr_sens;
[; ;PGM.h: 34: ts_PGM_DEV volt_sens;
[; ;PGM.h: 35: }ts_PGM_CFG;
[; ;PGM.h: 37: typedef union _PGM_FLG
[; ;PGM.h: 38: {
[; ;PGM.h: 39: unsigned char val;
[; ;PGM.h: 40: struct
[; ;PGM.h: 41: {
[; ;PGM.h: 42: unsigned int pgmonoff:1;
[; ;PGM.h: 43: unsigned int evPgmOn:1;
[; ;PGM.h: 44: unsigned int evPgmOff:1;
[; ;PGM.h: 45: };
[; ;PGM.h: 46: }tu_PGM_FLG;
"48 PGM.h
[v _pgm_flg `S243 ~T0 @X0 1 e ]
[; ;PGM.h: 48: tu_PGM_FLG pgm_flg;
"49
[v _pgm_cfg `S242 ~T0 @X0 1 e ]
[; ;PGM.h: 49: ts_PGM_CFG pgm_cfg;
"50
[v _nvm_pgm_cfg `CS242 ~T0 @X0 1 e ]
[i _nvm_pgm_cfg
:U ..
:U ..
"52
-> -> 92 `i `uc
"53
-> -> 197 `i `uc
:U ..
:U ..
"54
-> -> 1 `i `uc
..
..
:U ..
:U ..
"55
-> -> 0 `i `uc
"56
-> -> 0 `i `uc
..
..
:U ..
:U ..
"57
-> -> 0 `i `uc
"58
-> -> 0 `i `uc
..
..
:U ..
:U ..
"59
-> -> 0 `i `uc
"60
-> -> 0 `i `uc
..
..
:U ..
:U ..
"61
-> -> 0 `i `uc
"63
-> -> 0 `i `uc
..
..
..
..
]
[; ;PGM.h: 50: const ts_PGM_CFG nvm_pgm_cfg=
[; ;PGM.h: 51: {
[; ;PGM.h: 52: 0x5C,
[; ;PGM.h: 53: 0xC5,
[; ;PGM.h: 54: 0x01,
[; ;PGM.h: 55: 0x00,
[; ;PGM.h: 56: 0x00,
[; ;PGM.h: 57: 0x00,
[; ;PGM.h: 58: 0x00,
[; ;PGM.h: 59: 0x00,
[; ;PGM.h: 60: 0x00,
[; ;PGM.h: 61: 0x00,
[; ;PGM.h: 62: 0x00
[; ;PGM.h: 63: };
[; ;PGM.h: 65: void PGMInit(unsigned char);
[; ;PGM.h: 66: void PGMTick(void);
[; ;PGM.h: 67: void PGMSelDown(void);
[; ;PGM.h: 68: void PGMSelLong(void);
[; ;PGM.h: 69: void PGMWriteNvm(void);
[; ;PGM.h: 70: void PGMPgmOff(void);
[; ;NVM.h: 2: void NVMInit(unsigned char);
[; ;NVM.h: 3: void NVMRead(unsigned short,char*,unsigned char);
[; ;NVM.h: 4: void NVMWrite(unsigned short,char*,unsigned char);
[; ;OUT.h: 68: void OUTInit(unsigned char);
[; ;OUT.h: 69: void OUTSetHTCDataNibble(unsigned char);
[; ;IN.h: 20: void INInit(unsigned char);
[; ;DPY.h: 11: void DPYInit(unsigned char);
[; ;DPY.h: 12: void DPYSendStr(unsigned char,unsigned char,char*,unsigned char);
[; ;DLY.h: 2: void DLYDelay_us(unsigned short);
[; ;DLY.h: 3: void DLYDelay_ms(unsigned short);
[; ;RTX.h: 39: typedef enum _RTX_UPD_DPY
[; ;RTX.h: 40: {
[; ;RTX.h: 41: UPD_DPY_POWER,
[; ;RTX.h: 42: UPD_DPY_BATT,
[; ;RTX.h: 43: UPD_DPY_PGM,
[; ;RTX.h: 44: UPD_DPY_PGMDONECURRSENSGEN,
[; ;RTX.h: 45: UPD_DPY_PGMDONECURRSENSCON,
[; ;RTX.h: 46: UPD_DPY_PGMDONEVOLTSENS,
[; ;RTX.h: 47: UPD_DPY_PGMRST
[; ;RTX.h: 48: }te_RTX_UPD_DPY;
[; ;RTX.h: 50: typedef union _RTX_FLG
[; ;RTX.h: 51: {
[; ;RTX.h: 52: unsigned char val;
[; ;RTX.h: 53: struct
[; ;RTX.h: 54: {
[; ;RTX.h: 55: unsigned int sendDone:1;
[; ;RTX.h: 56: unsigned int pgmDone:1;
[; ;RTX.h: 57: unsigned int pgmonoff:1;
[; ;RTX.h: 58: };
[; ;RTX.h: 59: }tu_RTX_FLG;
"61 RTX.h
[v _rtx_flg `S245 ~T0 @X0 1 e ]
[; ;RTX.h: 61: tu_RTX_FLG rtx_flg;
"62
[v _gen_power `f ~T0 @X0 1 e ]
[v _con_power `f ~T0 @X0 1 e ]
[; ;RTX.h: 62: float gen_power,con_power;
"63
[v _gen_curr_sens `f ~T0 @X0 1 e ]
[v _con_curr_sens `f ~T0 @X0 1 e ]
[v _volt_sens `f ~T0 @X0 1 e ]
[; ;RTX.h: 63: float gen_curr_sens,con_curr_sens,volt_sens;
"64
[v _batt_gen_curr_sens `f ~T0 @X0 1 e ]
[v _batt_con_curr_sens `f ~T0 @X0 1 e ]
[v _batt_volt_sens `f ~T0 @X0 1 e ]
[; ;RTX.h: 64: float batt_gen_curr_sens,batt_con_curr_sens,batt_volt_sens;
[; ;RTX.h: 66: void RTXInit(unsigned char);
[; ;RTX.h: 67: void RTXTick(void);
[; ;RTX.h: 68: void RTXReadPkt(void);
[; ;RTX.h: 69: void RTXTask(void);
[; ;RTX.h: 70: void RTXStartSendData(void);
[; ;RTX.h: 73: void RTXPgmOff(void);
[; ;RTX.h: 74: void RTXPgmOn(void);
[; ;RTX.h: 75: void RTXUpdateDisplay(te_RTX_UPD_DPY);
[; ;RTX.h: 76: void RTXSelDown(void);
"40 RTX.c
[v _e_POS_PKT `E2175 ~T0 @X0 1 e ]
[; ;RTX.c: 32: enum _POS_PKT
[; ;RTX.c: 33: {
[; ;RTX.c: 34: ID_DEST=0,
[; ;RTX.c: 35: ID_SOURCE=1,
[; ;RTX.c: 36: TYPE=2,
[; ;RTX.c: 37: OP=3,
[; ;RTX.c: 38: VAL=4,
[; ;RTX.c: 39: BAT=6
[; ;RTX.c: 40: }e_POS_PKT;
[; ;RTX.c: 42: typedef enum _RTX_OP
[; ;RTX.c: 43: {
[; ;RTX.c: 44: DAT=0x00,
[; ;RTX.c: 45: PGM=0x01,
[; ;RTX.c: 47: rDAT=0x80,
[; ;RTX.c: 48: rPGM=0x81
[; ;RTX.c: 49: }te_RTX_OP;
[; ;RTX.c: 51: typedef enum _DEV_TYPE
[; ;RTX.c: 52: {
[; ;RTX.c: 53: BASE=0x00,
[; ;RTX.c: 54: SENS_CURRGEN=0x01,
[; ;RTX.c: 55: SENS_CURRCON=0x02,
[; ;RTX.c: 56: SENS_VOLT=0x03
[; ;RTX.c: 57: }te_DEV_TYPE;
[; ;RTX.c: 59: typedef union _RTX_DATA
[; ;RTX.c: 60: {
[; ;RTX.c: 61: float val;
[; ;RTX.c: 62: unsigned char val_byte[3];
[; ;RTX.c: 63: }tu_RTX_DATA;
"65
[v _sta `uc ~T0 @X0 1 s ]
[v _numRxByte `uc ~T0 @X0 1 s ]
[v _numTxByte `uc ~T0 @X0 1 s ]
[; ;RTX.c: 65: static char sta,numRxByte,numTxByte;
"66
[v _pktRx `uc ~T0 @X0 -> 10 `i s ]
[v _pktTx `uc ~T0 @X0 -> 10 `i s ]
[v _tmrRcvPkt `uc ~T0 @X0 1 s ]
[; ;RTX.c: 66: static unsigned char pktRx[0x0A],pktTx[0x0A],tmrRcvPkt;
"67
[v _tmrCalibration `us ~T0 @X0 1 s ]
[v _tmrVisBatt `us ~T0 @X0 1 s ]
[; ;RTX.c: 67: static unsigned short tmrCalibration,tmrVisBatt;
[; ;RTX.c: 69: static void RTXSndPkt(unsigned char *,unsigned char);
[; ;RTX.c: 70: static void RTXRcvPkt(unsigned char *,unsigned char);
[; ;RTX.c: 71: static void RTXSetSensSta(unsigned char,unsigned char);
[; ;RTX.c: 72: static void RTXSendPgm(void);
[; ;RTX.c: 73: static void RTXSendRData(unsigned char);
[; ;RTX.c: 74: static void RTXSup(void);
[; ;RTX.c: 75: static unsigned char RTXVisDec(float,char *,unsigned char,unsigned char);
"77
[v _RTXInit `(v ~T0 @X0 1 ef1`uc ]
"78
{
[; ;RTX.c: 77: void RTXInit(unsigned char state)
[; ;RTX.c: 78: {
[e :U _RTXInit ]
"77
[v _state `uc ~T0 @X0 1 r1 ]
"78
[f ]
[; ;RTX.c: 79: switch(state)
"79
[e $U 250  ]
[; ;RTX.c: 80: {
"80
{
[; ;RTX.c: 81: case 0:
"81
[e :U 251 ]
[; ;RTX.c: 83: break;
"83
[e $U 249  ]
[; ;RTX.c: 84: case 1:
"84
[e :U 252 ]
[; ;RTX.c: 86: tmrRcvPkt=0;
"86
[e = _tmrRcvPkt -> -> 0 `i `uc ]
[; ;RTX.c: 87: rtx_flg.val=0;
"87
[e = . _rtx_flg 0 -> -> 0 `i `uc ]
[; ;RTX.c: 88: tmrCalibration=0;
"88
[e = _tmrCalibration -> -> 0 `i `us ]
[; ;RTX.c: 89: tmrVisBatt=0;
"89
[e = _tmrVisBatt -> -> 0 `i `us ]
[; ;RTX.c: 90: gen_power=0;
"90
[e = _gen_power -> -> 0 `i `f ]
[; ;RTX.c: 91: con_power=0;
"91
[e = _con_power -> -> 0 `i `f ]
[; ;RTX.c: 92: gen_curr_sens=0;
"92
[e = _gen_curr_sens -> -> 0 `i `f ]
[; ;RTX.c: 93: con_curr_sens=0;
"93
[e = _con_curr_sens -> -> 0 `i `f ]
[; ;RTX.c: 94: volt_sens=0;
"94
[e = _volt_sens -> -> 0 `i `f ]
[; ;RTX.c: 95: batt_gen_curr_sens=0;
"95
[e = _batt_gen_curr_sens -> -> 0 `i `f ]
[; ;RTX.c: 96: batt_con_curr_sens=0;
"96
[e = _batt_con_curr_sens -> -> 0 `i `f ]
[; ;RTX.c: 97: batt_volt_sens=0;
"97
[e = _batt_volt_sens -> -> 0 `i `f ]
[; ;RTX.c: 98: break;
"98
[e $U 249  ]
[; ;RTX.c: 99: case 2:
"99
[e :U 253 ]
[; ;RTX.c: 101: CC1Strobe(SIDLE);
"101
[e ( _CC1Strobe (1 . `E2000 6 ]
[; ;RTX.c: 102: CC1Strobe(SCAL);
"102
[e ( _CC1Strobe (1 . `E2000 3 ]
[; ;RTX.c: 103: CC1Strobe(SRX);
"103
[e ( _CC1Strobe (1 . `E2000 4 ]
[; ;RTX.c: 105: RTXUpdateDisplay(UPD_DPY_POWER);
"105
[e ( _RTXUpdateDisplay (1 . `E2131 0 ]
[; ;RTX.c: 106: break;
"106
[e $U 249  ]
"107
}
[; ;RTX.c: 107: }
[e $U 249  ]
"79
[e :U 250 ]
[e [\ _state , $ -> -> 0 `i `uc 251
 , $ -> -> 1 `i `uc 252
 , $ -> -> 2 `i `uc 253
 249 ]
"107
[e :U 249 ]
[; ;RTX.c: 108: }
"108
[e :UE 248 ]
}
"110
[v _RTXTick `(v ~T0 @X0 1 ef ]
"111
{
[; ;RTX.c: 110: void RTXTick(void)
[; ;RTX.c: 111: {
[e :U _RTXTick ]
[f ]
[; ;RTX.c: 113: RTXSup();
"113
[e ( _RTXSup ..  ]
[; ;RTX.c: 115: tmrCalibration++;
"115
[e ++ _tmrCalibration -> -> 1 `i `us ]
[; ;RTX.c: 116: if(tmrCalibration>1000)
"116
[e $ ! > -> _tmrCalibration `ui -> -> 1000 `i `ui 255  ]
[; ;RTX.c: 117: {
"117
{
[; ;RTX.c: 118: tmrCalibration=0;
"118
[e = _tmrCalibration -> -> 0 `i `us ]
[; ;RTX.c: 119: CC1Strobe(SIDLE);
"119
[e ( _CC1Strobe (1 . `E2000 6 ]
[; ;RTX.c: 120: CC1Strobe(SCAL);
"120
[e ( _CC1Strobe (1 . `E2000 3 ]
[; ;RTX.c: 121: CC1Strobe(SFRX);
"121
[e ( _CC1Strobe (1 . `E2000 9 ]
"122
}
[e :U 255 ]
[; ;RTX.c: 122: }
[; ;RTX.c: 125: if(tmrRcvPkt)
"125
[e $ ! != -> _tmrRcvPkt `i -> -> -> 0 `i `uc `i 256  ]
[; ;RTX.c: 126: {
"126
{
[; ;RTX.c: 127: tmrRcvPkt--;
"127
[e -- _tmrRcvPkt -> -> 1 `i `uc ]
[; ;RTX.c: 128: if(!(tmrRcvPkt))
"128
[e $ ! ! != -> _tmrRcvPkt `i -> -> -> 0 `i `uc `i 257  ]
[; ;RTX.c: 129: RTXSendPgm();
"129
[e ( _RTXSendPgm ..  ]
[e :U 257 ]
"130
}
[e :U 256 ]
[; ;RTX.c: 130: }
[; ;RTX.c: 133: if(tmrVisBatt)
"133
[e $ ! != -> _tmrVisBatt `ui -> -> -> 0 `i `us `ui 258  ]
[; ;RTX.c: 134: {
"134
{
[; ;RTX.c: 135: tmrVisBatt--;
"135
[e -- _tmrVisBatt -> -> 1 `i `us ]
[; ;RTX.c: 136: if(!(tmrVisBatt))
"136
[e $ ! ! != -> _tmrVisBatt `ui -> -> -> 0 `i `us `ui 259  ]
[; ;RTX.c: 137: RTXUpdateDisplay(UPD_DPY_POWER);
"137
[e ( _RTXUpdateDisplay (1 . `E2131 0 ]
[e :U 259 ]
"138
}
[e :U 258 ]
[; ;RTX.c: 138: }
[; ;RTX.c: 139: }
"139
[e :UE 254 ]
}
"141
[v _RTXTask `(v ~T0 @X0 1 ef ]
"142
{
[; ;RTX.c: 141: void RTXTask(void)
[; ;RTX.c: 142: {
[e :U _RTXTask ]
[f ]
[; ;RTX.c: 144: if(!(PORTBbits.RB0))
"144
[e $ ! ! != -> . . _PORTBbits 0 0 `i -> -> -> 0 `i `Vuc `i 261  ]
[; ;RTX.c: 145: RTXReadPkt();
"145
[e ( _RTXReadPkt ..  ]
[e :U 261 ]
[; ;RTX.c: 146: }
"146
[e :UE 260 ]
}
"148
[v _RTXUpdateDisplay `(v ~T0 @X0 1 ef1`E2131 ]
"149
{
[; ;RTX.c: 148: void RTXUpdateDisplay(te_RTX_UPD_DPY val)
[; ;RTX.c: 149: {
[e :U _RTXUpdateDisplay ]
"148
[v _val `E2131 ~T0 @X0 1 r1 ]
"149
[f ]
"150
[v _charIdSens `uc ~T0 @X0 -> 4 `i a ]
[v _strRow1 `uc ~T0 @X0 -> 16 `i a ]
[v _strRow2 `uc ~T0 @X0 -> 16 `i a ]
"151
[v _i `uc ~T0 @X0 1 a ]
[v _iR `uc ~T0 @X0 1 a ]
[; ;RTX.c: 150: char charIdSens[4],strRow1[16],strRow2[16];
[; ;RTX.c: 151: unsigned char i,iR;
[; ;RTX.c: 154: for(iR=0;iR<sizeof(strRow1)/sizeof(char);iR++)
"154
{
[e = _iR -> -> 0 `i `uc ]
[e $ < -> _iR `ui / -> # _strRow1 `ui -> # `uc `ui 263  ]
[e $U 264  ]
"155
[e :U 263 ]
[; ;RTX.c: 155: strRow1[iR]=' ';
[e = *U + &U _strRow1 * -> _iR `ux -> -> # *U &U _strRow1 `ui `ux -> -> 32 `ui `uc ]
"154
[e ++ _iR -> -> 1 `i `uc ]
[e $ < -> _iR `ui / -> # _strRow1 `ui -> # `uc `ui 263  ]
[e :U 264 ]
"155
}
[; ;RTX.c: 156: for(iR=0;iR<sizeof(strRow2)/sizeof(char);iR++)
"156
{
[e = _iR -> -> 0 `i `uc ]
[e $ < -> _iR `ui / -> # _strRow2 `ui -> # `uc `ui 266  ]
[e $U 267  ]
"157
[e :U 266 ]
[; ;RTX.c: 157: strRow2[iR]=' ';
[e = *U + &U _strRow2 * -> _iR `ux -> -> # *U &U _strRow2 `ui `ux -> -> 32 `ui `uc ]
"156
[e ++ _iR -> -> 1 `i `uc ]
[e $ < -> _iR `ui / -> # _strRow2 `ui -> # `uc `ui 266  ]
[e :U 267 ]
"157
}
[; ;RTX.c: 159: if(val==UPD_DPY_PGM || val==UPD_DPY_PGMDONECURRSENSGEN || val==UPD_DPY_PGMDONECURRSENSCON || val==UPD_DPY_PGMDONEVOLTSENS || val==UPD_DPY_PGMRST)
"159
[e $ ! || || || || == -> _val `i -> . `E2131 2 `i == -> _val `i -> . `E2131 3 `i == -> _val `i -> . `E2131 4 `i == -> _val `i -> . `E2131 5 `i == -> _val `i -> . `E2131 6 `i 269  ]
[; ;RTX.c: 160: {
"160
{
[; ;RTX.c: 161: iR=0;
"161
[e = _iR -> -> 0 `i `uc ]
[; ;RTX.c: 162: strRow1[iR++]='P';
"162
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 80 `ui `uc ]
[; ;RTX.c: 163: strRow1[iR++]='r';
"163
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 114 `ui `uc ]
[; ;RTX.c: 164: strRow1[iR++]='o';
"164
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 111 `ui `uc ]
[; ;RTX.c: 165: strRow1[iR++]='g';
"165
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 103 `ui `uc ]
[; ;RTX.c: 166: strRow1[iR++]='r';
"166
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 114 `ui `uc ]
[; ;RTX.c: 167: strRow1[iR++]='a';
"167
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 97 `ui `uc ]
[; ;RTX.c: 168: strRow1[iR++]='m';
"168
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 109 `ui `uc ]
[; ;RTX.c: 169: strRow1[iR++]='m';
"169
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 109 `ui `uc ]
[; ;RTX.c: 170: strRow1[iR++]='a';
"170
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 97 `ui `uc ]
[; ;RTX.c: 171: strRow1[iR++]='z';
"171
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 122 `ui `uc ]
[; ;RTX.c: 172: strRow1[iR++]='i';
"172
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 105 `ui `uc ]
[; ;RTX.c: 173: strRow1[iR++]='o';
"173
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 111 `ui `uc ]
[; ;RTX.c: 174: strRow1[iR++]='n';
"174
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 110 `ui `uc ]
[; ;RTX.c: 175: strRow1[iR++]='e';
"175
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 101 `ui `uc ]
[; ;RTX.c: 176: strRow1[iR++]=':';
"176
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 58 `ui `uc ]
[; ;RTX.c: 177: if(val==UPD_DPY_PGMRST)
"177
[e $ ! == -> _val `i -> . `E2131 6 `i 270  ]
[; ;RTX.c: 178: {
"178
{
[; ;RTX.c: 179: iR=5;
"179
[e = _iR -> -> 5 `i `uc ]
[; ;RTX.c: 180: strRow2[iR++]='R';
"180
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 82 `ui `uc ]
[; ;RTX.c: 181: strRow2[iR++]='E';
"181
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 69 `ui `uc ]
[; ;RTX.c: 182: strRow2[iR++]='S';
"182
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 83 `ui `uc ]
[; ;RTX.c: 183: strRow2[iR++]='E';
"183
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 69 `ui `uc ]
[; ;RTX.c: 184: strRow2[iR++]='T';
"184
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 84 `ui `uc ]
"185
}
[; ;RTX.c: 185: }
[e $U 271  ]
"186
[e :U 270 ]
[; ;RTX.c: 186: else
[; ;RTX.c: 187: {
"187
{
[; ;RTX.c: 188: iR=5;
"188
[e = _iR -> -> 5 `i `uc ]
[; ;RTX.c: 189: strRow2[iR++]='I';
"189
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 73 `ui `uc ]
[; ;RTX.c: 190: strRow2[iR++]='D';
"190
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 68 `ui `uc ]
[; ;RTX.c: 191: strRow2[iR++]=':';
"191
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 58 `ui `uc ]
[; ;RTX.c: 192: if(val==UPD_DPY_PGM)
"192
[e $ ! == -> _val `i -> . `E2131 2 `i 272  ]
[; ;RTX.c: 193: {
"193
{
[; ;RTX.c: 194: strRow2[iR++]='?';
"194
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 63 `ui `uc ]
[; ;RTX.c: 195: strRow2[iR++]='?';
"195
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 63 `ui `uc ]
[; ;RTX.c: 196: strRow2[iR++]='?';
"196
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 63 `ui `uc ]
"197
}
[; ;RTX.c: 197: }
[e $U 273  ]
"198
[e :U 272 ]
[; ;RTX.c: 198: else
[; ;RTX.c: 199: {
"199
{
[; ;RTX.c: 200: if(val==UPD_DPY_PGMDONECURRSENSGEN)
"200
[e $ ! == -> _val `i -> . `E2131 3 `i 274  ]
[; ;RTX.c: 201: itoa(charIdSens,pgm_cfg.gen_curr_sens.id,10);
"201
[e ( _itoa (3 , , &U _charIdSens -> . . _pgm_cfg 4 1 `i -> 10 `i ]
[e $U 275  ]
"202
[e :U 274 ]
[; ;RTX.c: 202: else if(val==UPD_DPY_PGMDONECURRSENSCON)
[e $ ! == -> _val `i -> . `E2131 4 `i 276  ]
[; ;RTX.c: 203: itoa(charIdSens,pgm_cfg.con_curr_sens.id,10);
"203
[e ( _itoa (3 , , &U _charIdSens -> . . _pgm_cfg 5 1 `i -> 10 `i ]
[e $U 277  ]
"204
[e :U 276 ]
[; ;RTX.c: 204: else if(val==UPD_DPY_PGMDONEVOLTSENS)
[e $ ! == -> _val `i -> . `E2131 5 `i 278  ]
[; ;RTX.c: 205: itoa(charIdSens,pgm_cfg.volt_sens.id,10);
"205
[e ( _itoa (3 , , &U _charIdSens -> . . _pgm_cfg 6 1 `i -> 10 `i ]
[e :U 278 ]
"206
[e :U 277 ]
[e :U 275 ]
[; ;RTX.c: 206: for(i=0;i<4;i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 279  ]
[e $U 280  ]
"207
[e :U 279 ]
[; ;RTX.c: 207: {
{
[; ;RTX.c: 208: if(charIdSens[i]==0x00)
"208
[e $ ! == -> *U + &U _charIdSens * -> _i `ux -> -> # *U &U _charIdSens `ui `ux `i -> 0 `i 282  ]
[; ;RTX.c: 209: break;
"209
[e $U 280  ]
[e :U 282 ]
[; ;RTX.c: 210: strRow2[iR++]=charIdSens[i];
"210
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux *U + &U _charIdSens * -> _i `ux -> -> # *U &U _charIdSens `ui `ux ]
"211
}
"206
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 279  ]
[e :U 280 ]
"211
}
"212
}
[e :U 273 ]
"213
}
[e :U 271 ]
"214
}
[; ;RTX.c: 211: }
[; ;RTX.c: 212: }
[; ;RTX.c: 213: }
[; ;RTX.c: 214: }
[e $U 283  ]
"215
[e :U 269 ]
[; ;RTX.c: 215: else if(val==UPD_DPY_BATT)
[e $ ! == -> _val `i -> . `E2131 1 `i 284  ]
[; ;RTX.c: 216: {
"216
{
[; ;RTX.c: 217: iR=0;
"217
[e = _iR -> -> 0 `i `uc ]
[; ;RTX.c: 218: strRow1[iR++]='B';
"218
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 66 `ui `uc ]
[; ;RTX.c: 219: strRow1[iR++]='a';
"219
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 97 `ui `uc ]
[; ;RTX.c: 220: strRow1[iR++]='t';
"220
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 116 `ui `uc ]
[; ;RTX.c: 221: strRow1[iR++]='t';
"221
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 116 `ui `uc ]
[; ;RTX.c: 222: strRow1[iR++]='.';
"222
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 46 `ui `uc ]
[; ;RTX.c: 223: strRow1[iR++]=':';
"223
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 58 `ui `uc ]
[; ;RTX.c: 224: strRow1[iR++]=' ';
"224
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 32 `ui `uc ]
[; ;RTX.c: 227: strRow1[iR++]='C';
"227
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 67 `ui `uc ]
[; ;RTX.c: 228: strRow1[iR++]='=';
"228
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 61 `ui `uc ]
[; ;RTX.c: 229: if(pgm_cfg.menu.con_curr_sensIsProg)
"229
[e $ ! != -> . . . _pgm_cfg 2 1 1 `i -> -> -> 0 `i `uc `i 285  ]
[; ;RTX.c: 230: iR=RTXVisDec(batt_con_curr_sens,strRow1,3,iR++)+1;
"230
[e = _iR -> + -> ( _RTXVisDec (4 , , , _batt_con_curr_sens &U _strRow1 -> -> 3 `i `uc ++ _iR -> -> 1 `i `uc `i -> 1 `i `uc ]
[e $U 286  ]
"231
[e :U 285 ]
[; ;RTX.c: 231: else
[; ;RTX.c: 232: {
"232
{
[; ;RTX.c: 233: strRow1[iR++]='?';
"233
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 63 `ui `uc ]
[; ;RTX.c: 234: strRow1[iR++]='.';
"234
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 46 `ui `uc ]
[; ;RTX.c: 235: strRow1[iR++]='?';
"235
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 63 `ui `uc ]
"236
}
[e :U 286 ]
[; ;RTX.c: 236: }
[; ;RTX.c: 238: strRow1[iR++]='V';
"238
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 86 `ui `uc ]
[; ;RTX.c: 241: iR=0;
"241
[e = _iR -> -> 0 `i `uc ]
[; ;RTX.c: 242: strRow2[iR++]='P';
"242
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 80 `ui `uc ]
[; ;RTX.c: 243: strRow2[iR++]='=';
"243
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 61 `ui `uc ]
[; ;RTX.c: 244: if(pgm_cfg.menu.gen_curr_sensIsProg)
"244
[e $ ! != -> . . . _pgm_cfg 2 1 0 `i -> -> -> 0 `i `uc `i 287  ]
[; ;RTX.c: 245: iR=RTXVisDec(batt_gen_curr_sens,strRow2,3,iR++)+1;
"245
[e = _iR -> + -> ( _RTXVisDec (4 , , , _batt_gen_curr_sens &U _strRow2 -> -> 3 `i `uc ++ _iR -> -> 1 `i `uc `i -> 1 `i `uc ]
[e $U 288  ]
"246
[e :U 287 ]
[; ;RTX.c: 246: else
[; ;RTX.c: 247: {
"247
{
[; ;RTX.c: 248: strRow2[iR++]='?';
"248
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 63 `ui `uc ]
[; ;RTX.c: 249: strRow2[iR++]='.';
"249
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 46 `ui `uc ]
[; ;RTX.c: 250: strRow2[iR++]='?';
"250
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 63 `ui `uc ]
"251
}
[e :U 288 ]
[; ;RTX.c: 251: }
[; ;RTX.c: 253: strRow2[iR++]='V';
"253
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 86 `ui `uc ]
[; ;RTX.c: 256: strRow2[iR++]=' ';
"256
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 32 `ui `uc ]
[; ;RTX.c: 257: strRow2[iR++]='V';
"257
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 86 `ui `uc ]
[; ;RTX.c: 258: strRow2[iR++]='=';
"258
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 61 `ui `uc ]
[; ;RTX.c: 259: if(pgm_cfg.menu.volt_sensIsProg)
"259
[e $ ! != -> . . . _pgm_cfg 2 1 2 `i -> -> -> 0 `i `uc `i 289  ]
[; ;RTX.c: 260: iR=RTXVisDec(volt_sens,strRow2,3,iR++)+1;
"260
[e = _iR -> + -> ( _RTXVisDec (4 , , , _volt_sens &U _strRow2 -> -> 3 `i `uc ++ _iR -> -> 1 `i `uc `i -> 1 `i `uc ]
[e $U 290  ]
"261
[e :U 289 ]
[; ;RTX.c: 261: else
[; ;RTX.c: 262: {
"262
{
[; ;RTX.c: 263: strRow2[iR++]='?';
"263
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 63 `ui `uc ]
[; ;RTX.c: 264: strRow2[iR++]='.';
"264
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 46 `ui `uc ]
[; ;RTX.c: 265: strRow2[iR++]='?';
"265
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 63 `ui `uc ]
"266
}
[e :U 290 ]
[; ;RTX.c: 266: }
[; ;RTX.c: 268: strRow2[iR++]='V';
"268
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 86 `ui `uc ]
"269
}
[; ;RTX.c: 269: }
[e $U 291  ]
"270
[e :U 284 ]
[; ;RTX.c: 270: else if(val==UPD_DPY_POWER)
[e $ ! == -> _val `i -> . `E2131 0 `i 292  ]
[; ;RTX.c: 271: {
"271
{
[; ;RTX.c: 273: iR=0;
"273
[e = _iR -> -> 0 `i `uc ]
[; ;RTX.c: 274: strRow1[iR++]='C';
"274
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 67 `ui `uc ]
[; ;RTX.c: 275: strRow1[iR++]=':';
"275
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 58 `ui `uc ]
[; ;RTX.c: 276: strRow1[iR++]=' ';
"276
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 32 `ui `uc ]
[; ;RTX.c: 277: if(pgm_cfg.menu.con_curr_sensIsProg)
"277
[e $ ! != -> . . . _pgm_cfg 2 1 1 `i -> -> -> 0 `i `uc `i 293  ]
[; ;RTX.c: 278: iR=RTXVisDec(con_power,strRow1,3,iR)+1;
"278
[e = _iR -> + -> ( _RTXVisDec (4 , , , _con_power &U _strRow1 -> -> 3 `i `uc _iR `i -> 1 `i `uc ]
[e $U 294  ]
"279
[e :U 293 ]
[; ;RTX.c: 279: else
[; ;RTX.c: 280: {
"280
{
[; ;RTX.c: 281: strRow1[iR++]='?';
"281
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 63 `ui `uc ]
[; ;RTX.c: 282: strRow1[iR++]='?';
"282
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 63 `ui `uc ]
[; ;RTX.c: 283: strRow1[iR++]='?';
"283
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 63 `ui `uc ]
"284
}
[e :U 294 ]
[; ;RTX.c: 284: }
[; ;RTX.c: 286: strRow1[iR++]='W';
"286
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 87 `ui `uc ]
[; ;RTX.c: 287: strRow1[iR++]=' ';
"287
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 32 `ui `uc ]
[; ;RTX.c: 289: strRow1[iR++]='P';
"289
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 80 `ui `uc ]
[; ;RTX.c: 290: strRow1[iR++]=':';
"290
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 58 `ui `uc ]
[; ;RTX.c: 291: strRow1[iR++]=' ';
"291
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 32 `ui `uc ]
[; ;RTX.c: 292: if(pgm_cfg.menu.gen_curr_sensIsProg)
"292
[e $ ! != -> . . . _pgm_cfg 2 1 0 `i -> -> -> 0 `i `uc `i 295  ]
[; ;RTX.c: 293: iR=RTXVisDec(gen_power,strRow1,3,iR)+1;
"293
[e = _iR -> + -> ( _RTXVisDec (4 , , , _gen_power &U _strRow1 -> -> 3 `i `uc _iR `i -> 1 `i `uc ]
[e $U 296  ]
"294
[e :U 295 ]
[; ;RTX.c: 294: else
[; ;RTX.c: 295: {
"295
{
[; ;RTX.c: 296: strRow1[iR++]='?';
"296
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 63 `ui `uc ]
[; ;RTX.c: 297: strRow1[iR++]='?';
"297
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 63 `ui `uc ]
[; ;RTX.c: 298: strRow1[iR++]='?';
"298
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 63 `ui `uc ]
"299
}
[e :U 296 ]
[; ;RTX.c: 299: }
[; ;RTX.c: 301: strRow1[iR++]='W';
"301
[e = *U + &U _strRow1 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow1 `ui `ux -> -> 87 `ui `uc ]
[; ;RTX.c: 305: iR=0;
"305
[e = _iR -> -> 0 `i `uc ]
[; ;RTX.c: 306: strRow2[iR++]='D';
"306
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 68 `ui `uc ]
[; ;RTX.c: 307: strRow2[iR++]=':';
"307
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 58 `ui `uc ]
[; ;RTX.c: 308: strRow2[iR++]=' ';
"308
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 32 `ui `uc ]
[; ;RTX.c: 309: if(pgm_cfg.menu.con_curr_sensIsProg && pgm_cfg.menu.gen_curr_sensIsProg)
"309
[e $ ! && != -> . . . _pgm_cfg 2 1 1 `i -> -> -> 0 `i `uc `i != -> . . . _pgm_cfg 2 1 0 `i -> -> -> 0 `i `uc `i 297  ]
[; ;RTX.c: 310: iR=RTXVisDec((con_power-gen_power),strRow2,3,iR)+1;
"310
[e = _iR -> + -> ( _RTXVisDec (4 , , , - _con_power _gen_power &U _strRow2 -> -> 3 `i `uc _iR `i -> 1 `i `uc ]
[e $U 298  ]
"311
[e :U 297 ]
[; ;RTX.c: 311: else
[; ;RTX.c: 312: {
"312
{
[; ;RTX.c: 313: strRow2[iR++]='?';
"313
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 63 `ui `uc ]
[; ;RTX.c: 314: strRow2[iR++]='?';
"314
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 63 `ui `uc ]
[; ;RTX.c: 315: strRow2[iR++]='?';
"315
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 63 `ui `uc ]
"316
}
[e :U 298 ]
[; ;RTX.c: 316: }
[; ;RTX.c: 318: strRow2[iR++]='W';
"318
[e = *U + &U _strRow2 * -> ++ _iR -> -> 1 `i `uc `ux -> -> # *U &U _strRow2 `ui `ux -> -> 87 `ui `uc ]
[; ;RTX.c: 319: if((pgm_cfg.menu.con_curr_sensIsProg && batt_con_curr_sens<2.5) || (pgm_cfg.menu.gen_curr_sensIsProg && batt_gen_curr_sens<2.5) || (pgm_cfg.menu.volt_sensIsProg && batt_volt_sens<2.5))
"319
[e $ ! || || && != -> . . . _pgm_cfg 2 1 1 `i -> -> -> 0 `i `uc `i < -> _batt_con_curr_sens `d .2.5 && != -> . . . _pgm_cfg 2 1 0 `i -> -> -> 0 `i `uc `i < -> _batt_gen_curr_sens `d .2.5 && != -> . . . _pgm_cfg 2 1 2 `i -> -> -> 0 `i `uc `i < -> _batt_volt_sens `d .2.5 299  ]
[; ;RTX.c: 320: strRow2[sizeof(strRow2)/sizeof(char)-1]=0x00;
"320
[e = *U + &U _strRow2 * -> - / -> # _strRow2 `ui -> # `uc `ui -> -> 1 `i `ui `ux -> -> # *U &U _strRow2 `ui `ux -> -> 0 `i `uc ]
[e :U 299 ]
"321
}
[e :U 292 ]
"322
[e :U 291 ]
[e :U 283 ]
[; ;RTX.c: 321: }
[; ;RTX.c: 322: DPYSendStr(0,0,strRow1,sizeof(strRow1)/sizeof(char));
[e ( _DPYSendStr (4 , , , -> -> 0 `i `uc -> -> 0 `i `uc &U _strRow1 -> / -> # _strRow1 `ui -> # `uc `ui `uc ]
[; ;RTX.c: 323: DPYSendStr(1,0,strRow2,sizeof(strRow2)/sizeof(char));
"323
[e ( _DPYSendStr (4 , , , -> -> 1 `i `uc -> -> 0 `i `uc &U _strRow2 -> / -> # _strRow2 `ui -> # `uc `ui `uc ]
[; ;RTX.c: 324: }
"324
[e :UE 262 ]
}
"326
[v _RTXVisDec `(uc ~T0 @X0 1 sf4`f`*uc`uc`uc ]
"327
{
[; ;RTX.c: 326: static unsigned char RTXVisDec(float val,char *buff,unsigned char maxDigit,unsigned char offset)
[; ;RTX.c: 327: {
[e :U _RTXVisDec ]
"326
[v _val `f ~T0 @X0 1 r1 ]
[v _buff `*uc ~T0 @X0 1 r2 ]
[v _maxDigit `uc ~T0 @X0 1 r3 ]
[v _offset `uc ~T0 @X0 1 r4 ]
"327
[f ]
"328
[v _p `*uc ~T0 @X0 1 a ]
"329
[v _strTmp `uc ~T0 @X0 -> 16 `i a ]
[v _isDec `uc ~T0 @X0 1 a ]
[v _posDec `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
"330
[v _status `i ~T0 @X0 1 a ]
[; ;RTX.c: 328: char *p;
[; ;RTX.c: 329: unsigned char strTmp[16],isDec,posDec,i,j;
[; ;RTX.c: 330: int status;
[; ;RTX.c: 332: p=ftoa(val,(&(status)));
"332
[e = _p ( _ftoa (2 , _val &U _status ]
[; ;RTX.c: 334: isDec=0;
"334
[e = _isDec -> -> 0 `i `uc ]
[; ;RTX.c: 335: for(i=0;i<sizeof(strTmp)/sizeof(char);i++)
"335
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `ui / -> # _strTmp `ui -> # `uc `ui 301  ]
[e $U 302  ]
"336
[e :U 301 ]
[; ;RTX.c: 336: {
{
[; ;RTX.c: 338: if((*(p+i))=='.')
"338
[e $ ! == -> *U + _p * -> _i `ux -> -> # *U _p `ui `ux `ui -> 46 `ui 304  ]
[; ;RTX.c: 339: {
"339
{
[; ;RTX.c: 340: isDec=1;
"340
[e = _isDec -> -> 1 `i `uc ]
[; ;RTX.c: 341: posDec=i;
"341
[e = _posDec _i ]
"342
}
[e :U 304 ]
[; ;RTX.c: 342: }
[; ;RTX.c: 344: if(isDec)
"344
[e $ ! != -> _isDec `i -> -> -> 0 `i `uc `i 305  ]
[; ;RTX.c: 345: {
"345
{
[; ;RTX.c: 346: if((i-posDec)>2)
"346
[e $ ! > - -> _i `i -> _posDec `i -> 2 `i 306  ]
[; ;RTX.c: 347: break;
"347
[e $U 302  ]
[e :U 306 ]
"348
}
[e :U 305 ]
[; ;RTX.c: 348: }
[; ;RTX.c: 350: if((*(p+i))==0x00)
"350
[e $ ! == -> *U + _p * -> _i `ux -> -> # *U _p `ui `ux `i -> 0 `i 307  ]
[; ;RTX.c: 351: break;
"351
[e $U 302  ]
[e :U 307 ]
[; ;RTX.c: 353: strTmp[i]=(*(p+i));
"353
[e = *U + &U _strTmp * -> _i `ux -> -> # *U &U _strTmp `ui `ux *U + _p * -> _i `ux -> -> # *U _p `ui `ux ]
"354
}
"335
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `ui / -> # _strTmp `ui -> # `uc `ui 301  ]
[e :U 302 ]
"354
}
[; ;RTX.c: 354: }
[; ;RTX.c: 357: if(i>=maxDigit)
"357
[e $ ! >= -> _i `i -> _maxDigit `i 308  ]
[; ;RTX.c: 358: i=maxDigit-1;
"358
[e = _i -> - -> _maxDigit `i -> 1 `i `uc ]
[e :U 308 ]
[; ;RTX.c: 361: for(j=0;j<i;j++)
"361
{
[e = _j -> -> 0 `i `uc ]
[e $U 312  ]
"362
[e :U 309 ]
[; ;RTX.c: 362: (*(buff+j+offset))=strTmp[j];
[e = *U + + _buff * -> _j `ux -> -> # *U _buff `ui `ux * -> _offset `ux -> -> # *U + _buff * -> _j `ux -> -> # *U _buff `ui `ux `ui `ux *U + &U _strTmp * -> _j `ux -> -> # *U &U _strTmp `ui `ux ]
"361
[e ++ _j -> -> 1 `i `uc ]
[e :U 312 ]
[e $ < -> _j `i -> _i `i 309  ]
[e :U 310 ]
"362
}
[; ;RTX.c: 364: return (j+offset);
"364
[e ) -> + -> _j `i -> _offset `i `uc ]
[e $UE 300  ]
[; ;RTX.c: 365: }
"365
[e :UE 300 ]
}
"367
[v _RTXSup `(v ~T0 @X0 1 sf ]
"368
{
[; ;RTX.c: 367: static void RTXSup(void)
[; ;RTX.c: 368: {
[e :U _RTXSup ]
[f ]
[; ;RTX.c: 370: CC1Read(0x35,(&(sta)),1);
"370
[e ( _CC1Read (3 , , -> -> 53 `i `uc &U _sta -> -> 1 `i `uc ]
[; ;RTX.c: 373: switch(sta)
"373
[e $U 315  ]
[; ;RTX.c: 374: {
"374
{
[; ;RTX.c: 375: case IDLE:
"375
[e :U 316 ]
[; ;RTX.c: 376: CC1Strobe(SRX);
"376
[e ( _CC1Strobe (1 . `E2000 4 ]
[; ;RTX.c: 377: break;
"377
[e $U 314  ]
[; ;RTX.c: 378: case RXFIFO_OVERFLOW:
"378
[e :U 317 ]
[; ;RTX.c: 379: CC1Strobe(SFRX);
"379
[e ( _CC1Strobe (1 . `E2000 9 ]
[; ;RTX.c: 380: CC1Strobe(SRX);
"380
[e ( _CC1Strobe (1 . `E2000 4 ]
[; ;RTX.c: 381: break;
"381
[e $U 314  ]
[; ;RTX.c: 382: case TXFIFO_UNDERFLOW:
"382
[e :U 318 ]
[; ;RTX.c: 383: CC1Strobe(SFTX);
"383
[e ( _CC1Strobe (1 . `E2000 10 ]
[; ;RTX.c: 384: CC1Strobe(SRX);
"384
[e ( _CC1Strobe (1 . `E2000 4 ]
[; ;RTX.c: 385: break;
"385
[e $U 314  ]
"386
}
[; ;RTX.c: 386: }
[e $U 314  ]
"373
[e :U 315 ]
[e [\ _sta , $ -> . `E2015 1 `uc 316
 , $ -> . `E2015 17 `uc 317
 , $ -> . `E2015 22 `uc 318
 314 ]
"386
[e :U 314 ]
[; ;RTX.c: 387: }
"387
[e :UE 313 ]
}
"389
[v _RTXSelDown `(v ~T0 @X0 1 ef ]
"390
{
[; ;RTX.c: 389: void RTXSelDown(void)
[; ;RTX.c: 390: {
[e :U _RTXSelDown ]
[f ]
[; ;RTX.c: 391: if(pgm_cfg.menu.val)
"391
[e $ ! != -> . . _pgm_cfg 2 0 `i -> -> -> 0 `i `uc `i 320  ]
[; ;RTX.c: 392: {
"392
{
[; ;RTX.c: 393: if(tmrVisBatt)
"393
[e $ ! != -> _tmrVisBatt `ui -> -> -> 0 `i `us `ui 321  ]
[; ;RTX.c: 394: {
"394
{
[; ;RTX.c: 396: RTXUpdateDisplay(UPD_DPY_POWER);
"396
[e ( _RTXUpdateDisplay (1 . `E2131 0 ]
[; ;RTX.c: 398: tmrVisBatt=0;
"398
[e = _tmrVisBatt -> -> 0 `i `us ]
"399
}
[; ;RTX.c: 399: }
[e $U 322  ]
"400
[e :U 321 ]
[; ;RTX.c: 400: else
[; ;RTX.c: 401: {
"401
{
[; ;RTX.c: 403: RTXUpdateDisplay(UPD_DPY_BATT);
"403
[e ( _RTXUpdateDisplay (1 . `E2131 1 ]
[; ;RTX.c: 405: tmrVisBatt=500;
"405
[e = _tmrVisBatt -> -> 500 `i `us ]
"406
}
[e :U 322 ]
"407
}
[e :U 320 ]
[; ;RTX.c: 406: }
[; ;RTX.c: 407: }
[; ;RTX.c: 408: }
"408
[e :UE 319 ]
}
"410
[v _RTXSndPkt `(v ~T0 @X0 1 sf2`*uc`uc ]
"411
{
[; ;RTX.c: 410: static void RTXSndPkt(unsigned char *src,unsigned char len)
[; ;RTX.c: 411: {
[e :U _RTXSndPkt ]
"410
[v _src `*uc ~T0 @X0 1 r1 ]
[v _len `uc ~T0 @X0 1 r2 ]
"411
[f ]
[; ;RTX.c: 413: do
"413
[e :U 326 ]
[; ;RTX.c: 414: {
"414
{
[; ;RTX.c: 415: asm("clrwdt");
"415
[; <" clrwdt ;# ">
[; ;RTX.c: 416: CC1Read(0x35,(&(sta)),1);
"416
[e ( _CC1Read (3 , , -> -> 53 `i `uc &U _sta -> -> 1 `i `uc ]
"417
}
[; ;RTX.c: 417: }
[; ;RTX.c: 418: while(!(((sta&0b00011111)==0x0D) || ((sta&0b00011111)==0x01)));
"418
[e $ ! || == & -> _sta `i -> 31 `i -> 13 `i == & -> _sta `i -> 31 `i -> 1 `i 326  ]
[e :U 325 ]
[; ;RTX.c: 420: CC1Strobe(SIDLE);
"420
[e ( _CC1Strobe (1 . `E2000 6 ]
[; ;RTX.c: 421: CC1Read(0x3B,(&(numRxByte)),1);
"421
[e ( _CC1Read (3 , , -> -> 59 `i `uc &U _numRxByte -> -> 1 `i `uc ]
[; ;RTX.c: 422: CC1Read(0x3A,(&(numTxByte)),1);
"422
[e ( _CC1Read (3 , , -> -> 58 `i `uc &U _numTxByte -> -> 1 `i `uc ]
[; ;RTX.c: 424: CC1Strobe(SFTX);
"424
[e ( _CC1Strobe (1 . `E2000 10 ]
[; ;RTX.c: 425: CC1Read(0x3A,(&(numTxByte)),1);
"425
[e ( _CC1Read (3 , , -> -> 58 `i `uc &U _numTxByte -> -> 1 `i `uc ]
[; ;RTX.c: 427: CC1Write(0x3F,src,len);
"427
[e ( _CC1Write (3 , , -> -> 63 `i `uc _src _len ]
[; ;RTX.c: 429: CC1Strobe(STX);
"429
[e ( _CC1Strobe (1 . `E2000 5 ]
[; ;RTX.c: 430: }
"430
[e :UE 323 ]
}
"432
[v _RTXRcvPkt `(v ~T0 @X0 1 sf2`*uc`uc ]
"433
{
[; ;RTX.c: 432: static void RTXRcvPkt(unsigned char *dst,unsigned char len)
[; ;RTX.c: 433: {
[e :U _RTXRcvPkt ]
"432
[v _dst `*uc ~T0 @X0 1 r1 ]
[v _len `uc ~T0 @X0 1 r2 ]
"433
[f ]
[; ;RTX.c: 435: CC1Read(0x3F,dst,len);
"435
[e ( _CC1Read (3 , , -> -> 63 `i `uc _dst _len ]
[; ;RTX.c: 436: }
"436
[e :UE 327 ]
}
"438
[v _RTXReadPkt `(v ~T0 @X0 1 ef ]
"439
{
[; ;RTX.c: 438: void RTXReadPkt(void)
[; ;RTX.c: 439: {
[e :U _RTXReadPkt ]
[f ]
"440
[v _valVoltCurr `S247 ~T0 @X0 1 a ]
[v _valBatt `S247 ~T0 @X0 1 a ]
"441
[v _volt4Calc `f ~T0 @X0 1 a ]
[; ;RTX.c: 440: tu_RTX_DATA valVoltCurr,valBatt;
[; ;RTX.c: 441: float volt4Calc;
[; ;RTX.c: 444: CC1Read(0x3B,(&(numRxByte)),1);
"444
[e ( _CC1Read (3 , , -> -> 59 `i `uc &U _numRxByte -> -> 1 `i `uc ]
[; ;RTX.c: 445: while(numRxByte>=0x0A)
"445
[e $U 329  ]
[e :U 330 ]
[; ;RTX.c: 446: {
"446
{
[; ;RTX.c: 447: asm("clrwdt");
"447
[; <" clrwdt ;# ">
[; ;RTX.c: 449: RTXRcvPkt(pktRx,0x0A);
"449
[e ( _RTXRcvPkt (2 , &U _pktRx -> -> 10 `i `uc ]
[; ;RTX.c: 451: if(rtx_flg.pgmonoff)
"451
[e $ ! != -> . . _rtx_flg 1 2 `i -> -> -> 0 `i `uc `i 332  ]
[; ;RTX.c: 452: {
"452
{
[; ;RTX.c: 453: if((pktRx[ID_DEST]==pgm_cfg.base.id))
"453
[e $ ! == -> *U + &U _pktRx * -> . `E2175 0 `ux -> -> # *U &U _pktRx `ui `ux `i -> . . _pgm_cfg 3 1 `i 333  ]
[; ;RTX.c: 454: {
"454
{
[; ;RTX.c: 456: if(pktRx[OP]==rPGM)
"456
[e $ ! == -> *U + &U _pktRx * -> . `E2175 3 `ux -> -> # *U &U _pktRx `ui `ux `i -> . `E2183 3 `i 334  ]
[; ;RTX.c: 457: {
"457
{
[; ;RTX.c: 459: if(pktRx[TYPE]==SENS_VOLT)
"459
[e $ ! == -> *U + &U _pktRx * -> . `E2175 2 `ux -> -> # *U &U _pktRx `ui `ux `i -> . `E2189 3 `i 335  ]
[; ;RTX.c: 460: {
"460
{
[; ;RTX.c: 462: pgm_cfg.volt_sens.id=pktRx[ID_SOURCE];
"462
[e = . . _pgm_cfg 6 1 *U + &U _pktRx * -> . `E2175 1 `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 463: pgm_cfg.volt_sens.type=pktRx[TYPE];
"463
[e = . . _pgm_cfg 6 0 *U + &U _pktRx * -> . `E2175 2 `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 464: pgm_cfg.menu.volt_sensIsProg=1;
"464
[e = . . . _pgm_cfg 2 1 2 -> -> 1 `i `uc ]
"465
}
[; ;RTX.c: 465: }
[e $U 336  ]
"466
[e :U 335 ]
[; ;RTX.c: 466: else if(pktRx[TYPE]==SENS_CURRGEN)
[e $ ! == -> *U + &U _pktRx * -> . `E2175 2 `ux -> -> # *U &U _pktRx `ui `ux `i -> . `E2189 1 `i 337  ]
[; ;RTX.c: 467: {
"467
{
[; ;RTX.c: 469: pgm_cfg.gen_curr_sens.id=pktRx[ID_SOURCE];
"469
[e = . . _pgm_cfg 4 1 *U + &U _pktRx * -> . `E2175 1 `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 470: pgm_cfg.gen_curr_sens.type=pktRx[TYPE];
"470
[e = . . _pgm_cfg 4 0 *U + &U _pktRx * -> . `E2175 2 `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 471: pgm_cfg.menu.gen_curr_sensIsProg=1;
"471
[e = . . . _pgm_cfg 2 1 0 -> -> 1 `i `uc ]
"472
}
[; ;RTX.c: 472: }
[e $U 338  ]
"473
[e :U 337 ]
[; ;RTX.c: 473: else if(pktRx[TYPE]==SENS_CURRCON)
[e $ ! == -> *U + &U _pktRx * -> . `E2175 2 `ux -> -> # *U &U _pktRx `ui `ux `i -> . `E2189 2 `i 339  ]
[; ;RTX.c: 474: {
"474
{
[; ;RTX.c: 476: pgm_cfg.con_curr_sens.id=pktRx[ID_SOURCE];
"476
[e = . . _pgm_cfg 5 1 *U + &U _pktRx * -> . `E2175 1 `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 477: pgm_cfg.con_curr_sens.type=pktRx[TYPE];
"477
[e = . . _pgm_cfg 5 0 *U + &U _pktRx * -> . `E2175 2 `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 478: pgm_cfg.menu.con_curr_sensIsProg=1;
"478
[e = . . . _pgm_cfg 2 1 1 -> -> 1 `i `uc ]
"479
}
[e :U 339 ]
"480
[e :U 338 ]
[e :U 336 ]
[; ;RTX.c: 479: }
[; ;RTX.c: 480: PGMWriteNvm();
[e ( _PGMWriteNvm ..  ]
[; ;RTX.c: 482: rtx_flg.pgmDone=1;
"482
[e = . . _rtx_flg 1 1 -> -> 1 `i `uc ]
[; ;RTX.c: 484: tmrRcvPkt=0;
"484
[e = _tmrRcvPkt -> -> 0 `i `uc ]
[; ;RTX.c: 486: if(pktRx[TYPE]==SENS_VOLT)
"486
[e $ ! == -> *U + &U _pktRx * -> . `E2175 2 `ux -> -> # *U &U _pktRx `ui `ux `i -> . `E2189 3 `i 340  ]
[; ;RTX.c: 487: RTXUpdateDisplay(UPD_DPY_PGMDONEVOLTSENS);
"487
[e ( _RTXUpdateDisplay (1 . `E2131 5 ]
[e $U 341  ]
"488
[e :U 340 ]
[; ;RTX.c: 488: else if(pktRx[TYPE]==SENS_CURRGEN)
[e $ ! == -> *U + &U _pktRx * -> . `E2175 2 `ux -> -> # *U &U _pktRx `ui `ux `i -> . `E2189 1 `i 342  ]
[; ;RTX.c: 489: RTXUpdateDisplay(UPD_DPY_PGMDONECURRSENSGEN);
"489
[e ( _RTXUpdateDisplay (1 . `E2131 3 ]
[e $U 343  ]
"490
[e :U 342 ]
[; ;RTX.c: 490: else if(pktRx[TYPE]==SENS_CURRCON)
[e $ ! == -> *U + &U _pktRx * -> . `E2175 2 `ux -> -> # *U &U _pktRx `ui `ux `i -> . `E2189 2 `i 344  ]
[; ;RTX.c: 491: RTXUpdateDisplay(UPD_DPY_PGMDONECURRSENSCON);
"491
[e ( _RTXUpdateDisplay (1 . `E2131 4 ]
[e :U 344 ]
"493
[e :U 343 ]
[e :U 341 ]
[; ;RTX.c: 493: DLYDelay_ms(2000);
[e ( _DLYDelay_ms (1 -> -> 2000 `i `us ]
[; ;RTX.c: 495: RTXUpdateDisplay(UPD_DPY_POWER);
"495
[e ( _RTXUpdateDisplay (1 . `E2131 0 ]
[; ;RTX.c: 497: RTXPgmOff();
"497
[e ( _RTXPgmOff ..  ]
"498
}
[e :U 334 ]
"499
}
[e :U 333 ]
"500
}
[; ;RTX.c: 498: }
[; ;RTX.c: 499: }
[; ;RTX.c: 500: }
[e $U 345  ]
"501
[e :U 332 ]
[; ;RTX.c: 501: else
[; ;RTX.c: 502: {
"502
{
[; ;RTX.c: 503: if((pktRx[ID_DEST]==pgm_cfg.base.id) && ((pktRx[ID_SOURCE]==pgm_cfg.gen_curr_sens.id) || (pktRx[ID_SOURCE]==pgm_cfg.con_curr_sens.id)) || (pktRx[ID_SOURCE]==pgm_cfg.volt_sens.id))
"503
[e $ ! || && == -> *U + &U _pktRx * -> . `E2175 0 `ux -> -> # *U &U _pktRx `ui `ux `i -> . . _pgm_cfg 3 1 `i || == -> *U + &U _pktRx * -> . `E2175 1 `ux -> -> # *U &U _pktRx `ui `ux `i -> . . _pgm_cfg 4 1 `i == -> *U + &U _pktRx * -> . `E2175 1 `ux -> -> # *U &U _pktRx `ui `ux `i -> . . _pgm_cfg 5 1 `i == -> *U + &U _pktRx * -> . `E2175 1 `ux -> -> # *U &U _pktRx `ui `ux `i -> . . _pgm_cfg 6 1 `i 346  ]
[; ;RTX.c: 504: {
"504
{
[; ;RTX.c: 506: if(pktRx[OP]==DAT)
"506
[e $ ! == -> *U + &U _pktRx * -> . `E2175 3 `ux -> -> # *U &U _pktRx `ui `ux `i -> . `E2183 0 `i 347  ]
[; ;RTX.c: 507: {
"507
{
[; ;RTX.c: 509: valVoltCurr.val_byte[0]=pktRx[VAL];
"509
[e = *U + &U . _valVoltCurr 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _valVoltCurr 1 `ui `ux *U + &U _pktRx * -> . `E2175 4 `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 510: valVoltCurr.val_byte[1]=pktRx[VAL+1];
"510
[e = *U + &U . _valVoltCurr 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _valVoltCurr 1 `ui `ux *U + &U _pktRx * -> -> + -> . `E2175 4 `i -> 1 `i `ui `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 511: valVoltCurr.val_byte[2]=pktRx[VAL+2];
"511
[e = *U + &U . _valVoltCurr 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _valVoltCurr 1 `ui `ux *U + &U _pktRx * -> -> + -> . `E2175 4 `i -> 2 `i `ui `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 513: valBatt.val_byte[0]=pktRx[BAT];
"513
[e = *U + &U . _valBatt 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _valBatt 1 `ui `ux *U + &U _pktRx * -> . `E2175 5 `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 514: valBatt.val_byte[1]=pktRx[BAT+1];
"514
[e = *U + &U . _valBatt 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _valBatt 1 `ui `ux *U + &U _pktRx * -> -> + -> . `E2175 5 `i -> 1 `i `ui `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 515: valBatt.val_byte[2]=pktRx[BAT+2];
"515
[e = *U + &U . _valBatt 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _valBatt 1 `ui `ux *U + &U _pktRx * -> -> + -> . `E2175 5 `i -> 2 `i `ui `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 517: if((pktRx[TYPE]==SENS_CURRGEN) && pgm_cfg.menu.gen_curr_sensIsProg && (pktRx[ID_SOURCE]==pgm_cfg.gen_curr_sens.id))
"517
[e $ ! && && == -> *U + &U _pktRx * -> . `E2175 2 `ux -> -> # *U &U _pktRx `ui `ux `i -> . `E2189 1 `i != -> . . . _pgm_cfg 2 1 0 `i -> -> -> 0 `i `uc `i == -> *U + &U _pktRx * -> . `E2175 1 `ux -> -> # *U &U _pktRx `ui `ux `i -> . . _pgm_cfg 4 1 `i 348  ]
[; ;RTX.c: 518: {
"518
{
[; ;RTX.c: 519: gen_curr_sens=valVoltCurr.val;
"519
[e = _gen_curr_sens . _valVoltCurr 0 ]
[; ;RTX.c: 520: batt_gen_curr_sens=valBatt.val;
"520
[e = _batt_gen_curr_sens . _valBatt 0 ]
"521
}
[; ;RTX.c: 521: }
[e $U 349  ]
"522
[e :U 348 ]
[; ;RTX.c: 522: else if((pktRx[TYPE]==SENS_CURRCON) && pgm_cfg.menu.gen_curr_sensIsProg && (pktRx[ID_SOURCE]==pgm_cfg.con_curr_sens.id))
[e $ ! && && == -> *U + &U _pktRx * -> . `E2175 2 `ux -> -> # *U &U _pktRx `ui `ux `i -> . `E2189 2 `i != -> . . . _pgm_cfg 2 1 0 `i -> -> -> 0 `i `uc `i == -> *U + &U _pktRx * -> . `E2175 1 `ux -> -> # *U &U _pktRx `ui `ux `i -> . . _pgm_cfg 5 1 `i 350  ]
[; ;RTX.c: 523: {
"523
{
[; ;RTX.c: 524: con_curr_sens=valVoltCurr.val;
"524
[e = _con_curr_sens . _valVoltCurr 0 ]
[; ;RTX.c: 525: batt_con_curr_sens=valBatt.val;
"525
[e = _batt_con_curr_sens . _valBatt 0 ]
"526
}
[; ;RTX.c: 526: }
[e $U 351  ]
"527
[e :U 350 ]
[; ;RTX.c: 527: else if((pktRx[TYPE]==SENS_VOLT) && pgm_cfg.menu.volt_sensIsProg && (pktRx[ID_SOURCE]==pgm_cfg.volt_sens.id))
[e $ ! && && == -> *U + &U _pktRx * -> . `E2175 2 `ux -> -> # *U &U _pktRx `ui `ux `i -> . `E2189 3 `i != -> . . . _pgm_cfg 2 1 2 `i -> -> -> 0 `i `uc `i == -> *U + &U _pktRx * -> . `E2175 1 `ux -> -> # *U &U _pktRx `ui `ux `i -> . . _pgm_cfg 6 1 `i 352  ]
[; ;RTX.c: 528: {
"528
{
[; ;RTX.c: 529: volt_sens=valVoltCurr.val;
"529
[e = _volt_sens . _valVoltCurr 0 ]
[; ;RTX.c: 530: batt_volt_sens=valBatt.val;
"530
[e = _batt_volt_sens . _valBatt 0 ]
"531
}
[e :U 352 ]
"534
[e :U 351 ]
[e :U 349 ]
[; ;RTX.c: 531: }
[; ;RTX.c: 534: volt4Calc=230;
[e = _volt4Calc -> -> 230 `i `f ]
[; ;RTX.c: 535: if(pgm_cfg.menu.volt_sensIsProg)
"535
[e $ ! != -> . . . _pgm_cfg 2 1 2 `i -> -> -> 0 `i `uc `i 353  ]
[; ;RTX.c: 536: volt4Calc=volt_sens;
"536
[e = _volt4Calc _volt_sens ]
[e :U 353 ]
[; ;RTX.c: 538: if(pgm_cfg.menu.gen_curr_sensIsProg)
"538
[e $ ! != -> . . . _pgm_cfg 2 1 0 `i -> -> -> 0 `i `uc `i 354  ]
[; ;RTX.c: 539: gen_power=volt4Calc*gen_curr_sens;
"539
[e = _gen_power * _volt4Calc _gen_curr_sens ]
[e :U 354 ]
[; ;RTX.c: 540: if(pgm_cfg.menu.con_curr_sensIsProg)
"540
[e $ ! != -> . . . _pgm_cfg 2 1 1 `i -> -> -> 0 `i `uc `i 355  ]
[; ;RTX.c: 541: con_power=volt4Calc*con_curr_sens;
"541
[e = _con_power * _volt4Calc _con_curr_sens ]
[e :U 355 ]
[; ;RTX.c: 544: RTXSendRData(pktRx[ID_SOURCE]);
"544
[e ( _RTXSendRData (1 *U + &U _pktRx * -> . `E2175 1 `ux -> -> # *U &U _pktRx `ui `ux ]
[; ;RTX.c: 546: if(tmrVisBatt)
"546
[e $ ! != -> _tmrVisBatt `ui -> -> -> 0 `i `us `ui 356  ]
[; ;RTX.c: 547: RTXUpdateDisplay(UPD_DPY_BATT);
"547
[e ( _RTXUpdateDisplay (1 . `E2131 1 ]
[e $U 357  ]
"548
[e :U 356 ]
[; ;RTX.c: 548: else
[; ;RTX.c: 549: RTXUpdateDisplay(UPD_DPY_POWER);
"549
[e ( _RTXUpdateDisplay (1 . `E2131 0 ]
[e :U 357 ]
"550
}
[e :U 347 ]
"551
}
[e :U 346 ]
"552
}
[e :U 345 ]
[; ;RTX.c: 550: }
[; ;RTX.c: 551: }
[; ;RTX.c: 552: }
[; ;RTX.c: 554: CC1Read(0x3B,(&(numRxByte)),1);
"554
[e ( _CC1Read (3 , , -> -> 59 `i `uc &U _numRxByte -> -> 1 `i `uc ]
[; ;RTX.c: 556: RTXSup();
"556
[e ( _RTXSup ..  ]
"557
}
[e :U 329 ]
"445
[e $ >= -> _numRxByte `i -> 10 `i 330  ]
[e :U 331 ]
[; ;RTX.c: 557: }
[; ;RTX.c: 558: }
"558
[e :UE 328 ]
}
"560
[v _RTXSendRData `(v ~T0 @X0 1 sf1`uc ]
"561
{
[; ;RTX.c: 560: static void RTXSendRData(unsigned char sensId)
[; ;RTX.c: 561: {
[e :U _RTXSendRData ]
"560
[v _sensId `uc ~T0 @X0 1 r1 ]
"561
[f ]
[; ;RTX.c: 563: pktTx[ID_DEST]=sensId;
"563
[e = *U + &U _pktTx * -> . `E2175 0 `ux -> -> # *U &U _pktTx `ui `ux _sensId ]
[; ;RTX.c: 564: pktTx[ID_SOURCE]=pgm_cfg.base.id;
"564
[e = *U + &U _pktTx * -> . `E2175 1 `ux -> -> # *U &U _pktTx `ui `ux . . _pgm_cfg 3 1 ]
[; ;RTX.c: 565: pktTx[TYPE]=BASE;
"565
[e = *U + &U _pktTx * -> . `E2175 2 `ux -> -> # *U &U _pktTx `ui `ux -> . `E2189 0 `uc ]
[; ;RTX.c: 566: pktTx[OP]=rDAT;
"566
[e = *U + &U _pktTx * -> . `E2175 3 `ux -> -> # *U &U _pktTx `ui `ux -> . `E2183 2 `uc ]
[; ;RTX.c: 567: pktTx[VAL]=0x00;
"567
[e = *U + &U _pktTx * -> . `E2175 4 `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 568: pktTx[VAL+1]=0x00;
"568
[e = *U + &U _pktTx * -> -> + -> . `E2175 4 `i -> 1 `i `ui `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 569: pktTx[VAL+2]=0x00;
"569
[e = *U + &U _pktTx * -> -> + -> . `E2175 4 `i -> 2 `i `ui `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 570: pktTx[BAT]=0x00;
"570
[e = *U + &U _pktTx * -> . `E2175 5 `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 571: pktTx[BAT+1]=0x00;
"571
[e = *U + &U _pktTx * -> -> + -> . `E2175 5 `i -> 1 `i `ui `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 572: pktTx[BAT+2]=0x00;
"572
[e = *U + &U _pktTx * -> -> + -> . `E2175 5 `i -> 2 `i `ui `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 575: RTXSndPkt(pktTx,0x0A);
"575
[e ( _RTXSndPkt (2 , &U _pktTx -> -> 10 `i `uc ]
[; ;RTX.c: 576: }
"576
[e :UE 358 ]
}
"578
[v _RTXSendPgm `(v ~T0 @X0 1 sf ]
"579
{
[; ;RTX.c: 578: static void RTXSendPgm(void)
[; ;RTX.c: 579: {
[e :U _RTXSendPgm ]
[f ]
[; ;RTX.c: 581: pktTx[ID_DEST]=0;
"581
[e = *U + &U _pktTx * -> . `E2175 0 `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 582: pktTx[ID_SOURCE]=pgm_cfg.base.id;
"582
[e = *U + &U _pktTx * -> . `E2175 1 `ux -> -> # *U &U _pktTx `ui `ux . . _pgm_cfg 3 1 ]
[; ;RTX.c: 583: pktTx[TYPE]=BASE;
"583
[e = *U + &U _pktTx * -> . `E2175 2 `ux -> -> # *U &U _pktTx `ui `ux -> . `E2189 0 `uc ]
[; ;RTX.c: 584: pktTx[OP]=PGM;
"584
[e = *U + &U _pktTx * -> . `E2175 3 `ux -> -> # *U &U _pktTx `ui `ux -> . `E2183 1 `uc ]
[; ;RTX.c: 585: pktTx[VAL]=0x00;
"585
[e = *U + &U _pktTx * -> . `E2175 4 `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 586: pktTx[VAL+1]=0x00;
"586
[e = *U + &U _pktTx * -> -> + -> . `E2175 4 `i -> 1 `i `ui `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 587: pktTx[VAL+2]=0x00;
"587
[e = *U + &U _pktTx * -> -> + -> . `E2175 4 `i -> 2 `i `ui `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 588: pktTx[BAT]=0x00;
"588
[e = *U + &U _pktTx * -> . `E2175 5 `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 589: pktTx[BAT+1]=0x00;
"589
[e = *U + &U _pktTx * -> -> + -> . `E2175 5 `i -> 1 `i `ui `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 590: pktTx[BAT+2]=0x00;
"590
[e = *U + &U _pktTx * -> -> + -> . `E2175 5 `i -> 2 `i `ui `ux -> -> # *U &U _pktTx `ui `ux -> -> 0 `i `uc ]
[; ;RTX.c: 593: RTXSndPkt(pktTx,0x0A);
"593
[e ( _RTXSndPkt (2 , &U _pktTx -> -> 10 `i `uc ]
[; ;RTX.c: 596: tmrRcvPkt=10;
"596
[e = _tmrRcvPkt -> -> 10 `i `uc ]
[; ;RTX.c: 597: }
"597
[e :UE 359 ]
}
"599
[v _RTXPgmOn `(v ~T0 @X0 1 ef ]
"600
{
[; ;RTX.c: 599: void RTXPgmOn(void)
[; ;RTX.c: 600: {
[e :U _RTXPgmOn ]
[f ]
[; ;RTX.c: 602: rtx_flg.pgmonoff=1;
"602
[e = . . _rtx_flg 1 2 -> -> 1 `i `uc ]
[; ;RTX.c: 604: RTXSendPgm();
"604
[e ( _RTXSendPgm ..  ]
[; ;RTX.c: 605: }
"605
[e :UE 360 ]
}
"607
[v _RTXPgmOff `(v ~T0 @X0 1 ef ]
"608
{
[; ;RTX.c: 607: void RTXPgmOff(void)
[; ;RTX.c: 608: {
[e :U _RTXPgmOff ]
[f ]
[; ;RTX.c: 610: rtx_flg.pgmonoff=0;
"610
[e = . . _rtx_flg 1 2 -> -> 0 `i `uc ]
[; ;RTX.c: 612: tmrRcvPkt=0;
"612
[e = _tmrRcvPkt -> -> 0 `i `uc ]
[; ;RTX.c: 614: tmrVisBatt=0;
"614
[e = _tmrVisBatt -> -> 0 `i `us ]
[; ;RTX.c: 615: }
"615
[e :UE 361 ]
}
